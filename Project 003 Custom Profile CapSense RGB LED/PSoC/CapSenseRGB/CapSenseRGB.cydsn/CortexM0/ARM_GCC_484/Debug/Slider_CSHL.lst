ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"Slider_CSHL.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.Slider_BaseInit,"ax",%progbits
  18              		.align	2
  19              		.global	Slider_BaseInit
  20              		.code	16
  21              		.thumb_func
  22              		.type	Slider_BaseInit, %function
  23              	Slider_BaseInit:
  24              	.LFB35:
  25              		.file 1 ".\\Generated_Source\\PSoC4\\Slider_CSHL.c"
   1:.\Generated_Source\PSoC4/Slider_CSHL.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/Slider_CSHL.c **** * File Name: Slider_CSHL.c
   3:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Version 2.20
   4:.\Generated_Source\PSoC4/Slider_CSHL.c **** *
   5:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Description:
   6:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  This file provides the source code to the High Level APIs for the CapSesne
   7:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  CSD component.
   8:.\Generated_Source\PSoC4/Slider_CSHL.c **** *
   9:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Note:
  10:.\Generated_Source\PSoC4/Slider_CSHL.c **** *
  11:.\Generated_Source\PSoC4/Slider_CSHL.c **** ********************************************************************************
  12:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Copyright 2014, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC4/Slider_CSHL.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC4/Slider_CSHL.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC4/Slider_CSHL.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC4/Slider_CSHL.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
  18:.\Generated_Source\PSoC4/Slider_CSHL.c **** #include "Slider_CSHL.h"
  19:.\Generated_Source\PSoC4/Slider_CSHL.c **** #include "Slider_PVT.h"
  20:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
  21:.\Generated_Source\PSoC4/Slider_CSHL.c **** /* SmartSense functions */
  22:.\Generated_Source\PSoC4/Slider_CSHL.c **** #if (Slider_TUNING_METHOD == Slider__TUNING_AUTO)
  23:.\Generated_Source\PSoC4/Slider_CSHL.c ****     extern void Slider_UpdateThresholds(uint32 sensor);
  24:.\Generated_Source\PSoC4/Slider_CSHL.c **** #endif /* (Slider_TUNING_METHOD == Slider__TUNING_AUTO) */
  25:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
  26:.\Generated_Source\PSoC4/Slider_CSHL.c **** /* Storage of filters data */
  27:.\Generated_Source\PSoC4/Slider_CSHL.c **** #if ( (0u != (Slider_RAW_FILTER_MASK & Slider_MEDIAN_FILTER)) || \
  28:.\Generated_Source\PSoC4/Slider_CSHL.c ****       (0u != (Slider_RAW_FILTER_MASK & Slider_AVERAGING_FILTER)) )
  29:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
  30:.\Generated_Source\PSoC4/Slider_CSHL.c ****     uint16 Slider_rawFilterData1[Slider_TOTAL_SENSOR_COUNT];
  31:.\Generated_Source\PSoC4/Slider_CSHL.c ****     uint16 Slider_rawFilterData2[Slider_TOTAL_SENSOR_COUNT];
  32:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 2


  33:.\Generated_Source\PSoC4/Slider_CSHL.c **** #elif ( (0u != (Slider_RAW_FILTER_MASK & Slider_IIR2_FILTER))   || \
  34:.\Generated_Source\PSoC4/Slider_CSHL.c ****         (0u != (Slider_RAW_FILTER_MASK & Slider_IIR4_FILTER))   || \
  35:.\Generated_Source\PSoC4/Slider_CSHL.c ****         (0u != (Slider_RAW_FILTER_MASK & Slider_JITTER_FILTER)) || \
  36:.\Generated_Source\PSoC4/Slider_CSHL.c ****         (0u != (Slider_RAW_FILTER_MASK & Slider_IIR8_FILTER))   || \
  37:.\Generated_Source\PSoC4/Slider_CSHL.c ****         (0u != (Slider_RAW_FILTER_MASK & Slider_IIR16_FILTER)) )
  38:.\Generated_Source\PSoC4/Slider_CSHL.c ****         
  39:.\Generated_Source\PSoC4/Slider_CSHL.c ****     uint16 Slider_rawFilterData1[Slider_TOTAL_SENSOR_COUNT];
  40:.\Generated_Source\PSoC4/Slider_CSHL.c **** #endif  /* ( (Slider_RAW_FILTER_MASK & Slider_MEDIAN_FILTER) || \
  41:.\Generated_Source\PSoC4/Slider_CSHL.c ****         *    (Slider_RAW_FILTER_MASK & Slider_AVERAGING_FILTER) )
  42:.\Generated_Source\PSoC4/Slider_CSHL.c ****         */
  43:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
  44:.\Generated_Source\PSoC4/Slider_CSHL.c **** extern uint16 Slider_sensorRaw[Slider_TOTAL_SENSOR_COUNT];
  45:.\Generated_Source\PSoC4/Slider_CSHL.c **** extern uint8 Slider_sensorEnableMask[Slider_TOTAL_SENSOR_MASK];
  46:.\Generated_Source\PSoC4/Slider_CSHL.c **** extern const uint8 Slider_widgetNumber[Slider_TOTAL_SENSOR_COUNT];
  47:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
  48:.\Generated_Source\PSoC4/Slider_CSHL.c **** #if (Slider_TUNING_METHOD != Slider__TUNING_NONE)
  49:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	extern uint32 Slider_widgetResolution[Slider_RESOLUTIONS_TBL_SIZE];	
  50:.\Generated_Source\PSoC4/Slider_CSHL.c **** #endif /* (Slider_TUNING_METHOD != Slider__TUNING_NONE) */
  51:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
  52:.\Generated_Source\PSoC4/Slider_CSHL.c **** uint16 Slider_sensorBaseline[Slider_TOTAL_SENSOR_COUNT] = {0u};
  53:.\Generated_Source\PSoC4/Slider_CSHL.c **** uint8 Slider_sensorBaselineLow[Slider_TOTAL_SENSOR_COUNT] = {0u};
  54:.\Generated_Source\PSoC4/Slider_CSHL.c **** uint8 Slider_sensorSignal[Slider_TOTAL_SENSOR_COUNT] = {0u};
  55:.\Generated_Source\PSoC4/Slider_CSHL.c **** uint8 Slider_sensorOnMask[Slider_TOTAL_SENSOR_MASK] = {0u};
  56:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
  57:.\Generated_Source\PSoC4/Slider_CSHL.c **** uint8 Slider_lowBaselineResetCnt[Slider_TOTAL_SENSOR_COUNT];
  58:.\Generated_Source\PSoC4/Slider_CSHL.c **** uint8 Slider_lowBaselineReset[Slider_TOTAL_SENSOR_COUNT] = {
  59:.\Generated_Source\PSoC4/Slider_CSHL.c ****     30u, 30u, 30u, 30u, 30u, 
  60:.\Generated_Source\PSoC4/Slider_CSHL.c **** };
  61:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
  62:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
  63:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
  64:.\Generated_Source\PSoC4/Slider_CSHL.c **** #if (Slider_TUNING_METHOD == Slider__TUNING_AUTO)
  65:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	extern Slider_CONFIG_TYPE_P4_v2_20 Slider_config;
  66:.\Generated_Source\PSoC4/Slider_CSHL.c **** #endif  /* (Slider_TUNING_METHOD == Slider__TUNING_AUTO) */
  67:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
  68:.\Generated_Source\PSoC4/Slider_CSHL.c **** #if (Slider_RAW_FILTER_MASK != 0u)
  69:.\Generated_Source\PSoC4/Slider_CSHL.c **** uint8 Slider_enableRawFilters = Slider_RAW_FILTERS_ENABLED;
  70:.\Generated_Source\PSoC4/Slider_CSHL.c **** #endif  /* (Slider_RAW_FILTER_MASK != 0u) */
  71:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
  72:.\Generated_Source\PSoC4/Slider_CSHL.c **** /* Generated by Customizer */
  73:.\Generated_Source\PSoC4/Slider_CSHL.c **** uint8 Slider_fingerThreshold[Slider_THRESHOLD_TBL_SIZE];
  74:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
  75:.\Generated_Source\PSoC4/Slider_CSHL.c **** uint8 Slider_noiseThreshold[Slider_THRESHOLD_TBL_SIZE];
  76:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
  77:.\Generated_Source\PSoC4/Slider_CSHL.c **** uint8 Slider_negativeNoiseThreshold[Slider_THRESHOLD_TBL_SIZE];
  78:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
  79:.\Generated_Source\PSoC4/Slider_CSHL.c **** uint8 Slider_hysteresis[Slider_WIDGET_PARAM_TBL_SIZE];
  80:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
  81:.\Generated_Source\PSoC4/Slider_CSHL.c **** uint8 Slider_debounce[] = {
  82:.\Generated_Source\PSoC4/Slider_CSHL.c ****     1u, 
  83:.\Generated_Source\PSoC4/Slider_CSHL.c **** };
  84:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
  85:.\Generated_Source\PSoC4/Slider_CSHL.c **** const uint8 Slider_rawDataIndex[] = {
  86:.\Generated_Source\PSoC4/Slider_CSHL.c ****     0u, /* LinearSlider0__LS */
  87:.\Generated_Source\PSoC4/Slider_CSHL.c **** };
  88:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
  89:.\Generated_Source\PSoC4/Slider_CSHL.c **** const uint8 Slider_numberOfSensors[] = {
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 3


  90:.\Generated_Source\PSoC4/Slider_CSHL.c ****     5u, /* LinearSlider0__LS */
  91:.\Generated_Source\PSoC4/Slider_CSHL.c **** };
  92:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
  93:.\Generated_Source\PSoC4/Slider_CSHL.c **** static const uint16 Slider_centroidMult[] = {
  94:.\Generated_Source\PSoC4/Slider_CSHL.c ****     6400u, 
  95:.\Generated_Source\PSoC4/Slider_CSHL.c **** };
  96:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
  97:.\Generated_Source\PSoC4/Slider_CSHL.c **** static uint8 Slider_posFiltersMask[] = {
  98:.\Generated_Source\PSoC4/Slider_CSHL.c ****     0x8u, 
  99:.\Generated_Source\PSoC4/Slider_CSHL.c **** };
 100:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
 101:.\Generated_Source\PSoC4/Slider_CSHL.c **** static uint8 Slider_posFiltersData[] = {
 102:.\Generated_Source\PSoC4/Slider_CSHL.c ****     1u, 0u, 0u, 
 103:.\Generated_Source\PSoC4/Slider_CSHL.c **** };
 104:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
 105:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
 106:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
 107:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
 108:.\Generated_Source\PSoC4/Slider_CSHL.c **** /*******************************************************************************
 109:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Function Name: Slider_BaseInit
 110:.\Generated_Source\PSoC4/Slider_CSHL.c **** ********************************************************************************
 111:.\Generated_Source\PSoC4/Slider_CSHL.c **** *
 112:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Summary:
 113:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  Loads the Slider_sensorBaseline[sensor] array element with an 
 114:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  initial value which is equal to the raw count value. 
 115:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  Resets to zero Slider_sensorBaselineLow[sensor] and 
 116:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  Slider_sensorSignal[sensor] array element.
 117:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  Loads the Slider_rawFilterData2[sensor] and 
 118:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  Slider_rawFilterData2[sensor] array element with an 
 119:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  initial value which is equal to the raw count value if the raw data filter is enabled.
 120:.\Generated_Source\PSoC4/Slider_CSHL.c **** *
 121:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Parameters:
 122:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  sensor:  Sensor number.
 123:.\Generated_Source\PSoC4/Slider_CSHL.c **** *
 124:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Return:
 125:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  None
 126:.\Generated_Source\PSoC4/Slider_CSHL.c **** *
 127:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Global Variables:
 128:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  Slider_sensorBaseline[]    - used to store the baseline value.
 129:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  Slider_sensorBaselineLow[] - used to store the fraction byte of 
 130:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  the baseline value.
 131:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  Slider_sensorSignal[]      - used to store a difference between 
 132:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  the current value of raw data and the previous value of the baseline.
 133:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  Slider_rawFilterData1[]    - used to store a previous sample of 
 134:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  any enabled raw data filter.
 135:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  Slider_rawFilterData2[]    - used to store before a previous sample
 136:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  of the enabled raw data filter. Required only for median or average filters.
 137:.\Generated_Source\PSoC4/Slider_CSHL.c **** *
 138:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Side Effects:
 139:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  None
 140:.\Generated_Source\PSoC4/Slider_CSHL.c **** * 
 141:.\Generated_Source\PSoC4/Slider_CSHL.c **** *******************************************************************************/
 142:.\Generated_Source\PSoC4/Slider_CSHL.c **** void Slider_BaseInit(uint32 sensor)
 143:.\Generated_Source\PSoC4/Slider_CSHL.c **** {
  26              		.loc 1 143 0
  27              		.cfi_startproc
  28              	.LVL0:
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 4


 144:.\Generated_Source\PSoC4/Slider_CSHL.c ****     #if ((Slider_TOTAL_BUTTONS_COUNT) || (Slider_TOTAL_MATRIX_BUTTONS_COUNT) || \
 145:.\Generated_Source\PSoC4/Slider_CSHL.c ****          (Slider_TOTAL_GENERICS_COUNT))
 146:.\Generated_Source\PSoC4/Slider_CSHL.c ****         uint8 widget = Slider_widgetNumber[sensor];
 147:.\Generated_Source\PSoC4/Slider_CSHL.c ****     #endif /* ((Slider_TOTAL_MATRIX_BUTTONS_COUNT) || (Slider_TOTAL_MATRIX_BUTTONS_COUNT)) */
 148:.\Generated_Source\PSoC4/Slider_CSHL.c ****     
 149:.\Generated_Source\PSoC4/Slider_CSHL.c ****     #if (Slider_TOTAL_MATRIX_BUTTONS_COUNT)
 150:.\Generated_Source\PSoC4/Slider_CSHL.c ****         uint8 debounceIndex;
 151:.\Generated_Source\PSoC4/Slider_CSHL.c ****     #endif  /* (Slider_TOTAL_MATRIX_BUTTONS_COUNT) */
 152:.\Generated_Source\PSoC4/Slider_CSHL.c ****     
 153:.\Generated_Source\PSoC4/Slider_CSHL.c ****     #if (Slider_TOTAL_GENERICS_COUNT)
 154:.\Generated_Source\PSoC4/Slider_CSHL.c ****         /* Exclude generic widget */
 155:.\Generated_Source\PSoC4/Slider_CSHL.c ****         if(widget < Slider_END_OF_WIDGETS_INDEX)
 156:.\Generated_Source\PSoC4/Slider_CSHL.c ****         {
 157:.\Generated_Source\PSoC4/Slider_CSHL.c ****     #endif  /* Slider_TOTAL_GENERICS_COUNT */
 158:.\Generated_Source\PSoC4/Slider_CSHL.c ****     
 159:.\Generated_Source\PSoC4/Slider_CSHL.c ****     /* Initialize Baseline */
 160:.\Generated_Source\PSoC4/Slider_CSHL.c ****     Slider_sensorBaseline[sensor] = Slider_sensorRaw[sensor];
  29              		.loc 1 160 0
  30 0000 4300     		lsl	r3, r0, #1
  31 0002 054A     		ldr	r2, .L2
  32 0004 9A5A     		ldrh	r2, [r3, r2]
  33 0006 0549     		ldr	r1, .L2+4
  34 0008 5A52     		strh	r2, [r3, r1]
 161:.\Generated_Source\PSoC4/Slider_CSHL.c ****     Slider_sensorBaselineLow[sensor] = 0u;
  35              		.loc 1 161 0
  36 000a 0818     		add	r0, r1, r0
  37              	.LVL1:
  38 000c 0021     		mov	r1, #0
  39 000e 0173     		strb	r1, [r0, #12]
 162:.\Generated_Source\PSoC4/Slider_CSHL.c ****     Slider_sensorSignal[sensor] = 0u;
  40              		.loc 1 162 0
  41 0010 0175     		strb	r1, [r0, #20]
 163:.\Generated_Source\PSoC4/Slider_CSHL.c ****         
 164:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
 165:.\Generated_Source\PSoC4/Slider_CSHL.c ****     
 166:.\Generated_Source\PSoC4/Slider_CSHL.c ****     #if ((0u != (Slider_RAW_FILTER_MASK & Slider_MEDIAN_FILTER)) ||\
 167:.\Generated_Source\PSoC4/Slider_CSHL.c ****          (0u != (Slider_RAW_FILTER_MASK & Slider_AVERAGING_FILTER)))
 168:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
 169:.\Generated_Source\PSoC4/Slider_CSHL.c ****         Slider_rawFilterData1[sensor] = Slider_sensorRaw[sensor];
 170:.\Generated_Source\PSoC4/Slider_CSHL.c ****         Slider_rawFilterData2[sensor] = Slider_sensorRaw[sensor];
 171:.\Generated_Source\PSoC4/Slider_CSHL.c ****     
 172:.\Generated_Source\PSoC4/Slider_CSHL.c ****     #elif ((Slider_RAW_FILTER_MASK & Slider_IIR2_FILTER) ||\
 173:.\Generated_Source\PSoC4/Slider_CSHL.c ****            (Slider_RAW_FILTER_MASK & Slider_IIR4_FILTER) ||\
 174:.\Generated_Source\PSoC4/Slider_CSHL.c ****            (Slider_RAW_FILTER_MASK & Slider_JITTER_FILTER) ||\
 175:.\Generated_Source\PSoC4/Slider_CSHL.c ****            (Slider_RAW_FILTER_MASK & Slider_IIR8_FILTER) ||\
 176:.\Generated_Source\PSoC4/Slider_CSHL.c ****            (Slider_RAW_FILTER_MASK & Slider_IIR16_FILTER))
 177:.\Generated_Source\PSoC4/Slider_CSHL.c ****             
 178:.\Generated_Source\PSoC4/Slider_CSHL.c ****         Slider_rawFilterData1[sensor] = Slider_sensorRaw[sensor];
  42              		.loc 1 178 0
  43 0012 0349     		ldr	r1, .L2+8
  44 0014 5A52     		strh	r2, [r3, r1]
 179:.\Generated_Source\PSoC4/Slider_CSHL.c ****     
 180:.\Generated_Source\PSoC4/Slider_CSHL.c ****     #else
 181:.\Generated_Source\PSoC4/Slider_CSHL.c ****         /* No Raw filters */
 182:.\Generated_Source\PSoC4/Slider_CSHL.c ****     #endif  /* ((Slider_RAW_FILTER_MASK & Slider_MEDIAN_FILTER) || \
 183:.\Generated_Source\PSoC4/Slider_CSHL.c ****             *   (Slider_RAW_FILTER_MASK & Slider_AVERAGING_FILTER))
 184:.\Generated_Source\PSoC4/Slider_CSHL.c ****             */
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 5


 185:.\Generated_Source\PSoC4/Slider_CSHL.c ****     
 186:.\Generated_Source\PSoC4/Slider_CSHL.c ****     #if (Slider_TOTAL_GENERICS_COUNT)
 187:.\Generated_Source\PSoC4/Slider_CSHL.c ****         /* Exclude generic widget */
 188:.\Generated_Source\PSoC4/Slider_CSHL.c ****         }
 189:.\Generated_Source\PSoC4/Slider_CSHL.c ****     #endif  /* Slider_TOTAL_GENERICS_COUNT */
 190:.\Generated_Source\PSoC4/Slider_CSHL.c **** }
  45              		.loc 1 190 0
  46              		@ sp needed
  47 0016 7047     		bx	lr
  48              	.L3:
  49              		.align	2
  50              	.L2:
  51 0018 00000000 		.word	Slider_sensorRaw
  52 001c 00000000 		.word	.LANCHOR0
  53 0020 00000000 		.word	Slider_rawFilterData1
  54              		.cfi_endproc
  55              	.LFE35:
  56              		.size	Slider_BaseInit, .-Slider_BaseInit
  57              		.section	.text.Slider_InitializeSensorBaseline,"ax",%progbits
  58              		.align	2
  59              		.global	Slider_InitializeSensorBaseline
  60              		.code	16
  61              		.thumb_func
  62              		.type	Slider_InitializeSensorBaseline, %function
  63              	Slider_InitializeSensorBaseline:
  64              	.LFB36:
 191:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
 192:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
 193:.\Generated_Source\PSoC4/Slider_CSHL.c **** /*******************************************************************************
 194:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Function Name: Slider_InitializeSensorBaseline
 195:.\Generated_Source\PSoC4/Slider_CSHL.c **** ********************************************************************************
 196:.\Generated_Source\PSoC4/Slider_CSHL.c **** *
 197:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Summary:
 198:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  Loads the Slider_sensorBaseline[sensor] array element with an 
 199:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  initial value by scanning the selected sensor (one channel design) or a pair 
 200:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  of sensors (two channels designs). The raw count value is copied into the 
 201:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  baseline array for each sensor. The raw data filters are initialized if 
 202:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  enabled.
 203:.\Generated_Source\PSoC4/Slider_CSHL.c **** *
 204:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Parameters:
 205:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  sensor:  Sensor number.
 206:.\Generated_Source\PSoC4/Slider_CSHL.c **** *
 207:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Return:
 208:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  None
 209:.\Generated_Source\PSoC4/Slider_CSHL.c **** *
 210:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Global Variables:
 211:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  None
 212:.\Generated_Source\PSoC4/Slider_CSHL.c **** *
 213:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Side Effects:
 214:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  None
 215:.\Generated_Source\PSoC4/Slider_CSHL.c **** * 
 216:.\Generated_Source\PSoC4/Slider_CSHL.c **** *******************************************************************************/
 217:.\Generated_Source\PSoC4/Slider_CSHL.c **** void Slider_InitializeSensorBaseline(uint32 sensor)
 218:.\Generated_Source\PSoC4/Slider_CSHL.c **** {
  65              		.loc 1 218 0
  66              		.cfi_startproc
  67              	.LVL2:
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 6


  68 0000 10B5     		push	{r4, lr}
  69              		.cfi_def_cfa_offset 8
  70              		.cfi_offset 4, -8
  71              		.cfi_offset 14, -4
  72 0002 041C     		mov	r4, r0
 219:.\Generated_Source\PSoC4/Slider_CSHL.c ****     /* Scan sensor */
 220:.\Generated_Source\PSoC4/Slider_CSHL.c ****     Slider_ScanSensor(sensor);
  73              		.loc 1 220 0
  74 0004 FFF7FEFF 		bl	Slider_ScanSensor
  75              	.LVL3:
  76              	.L5:
 221:.\Generated_Source\PSoC4/Slider_CSHL.c ****     while(Slider_IsBusy() != 0u)
  77              		.loc 1 221 0 discriminator 1
  78 0008 FFF7FEFF 		bl	Slider_IsBusy
  79              	.LVL4:
  80 000c 0028     		cmp	r0, #0
  81 000e FBD1     		bne	.L5
 222:.\Generated_Source\PSoC4/Slider_CSHL.c ****     {
 223:.\Generated_Source\PSoC4/Slider_CSHL.c ****         /* Wait while sensor is busy */
 224:.\Generated_Source\PSoC4/Slider_CSHL.c ****     }
 225:.\Generated_Source\PSoC4/Slider_CSHL.c ****     
 226:.\Generated_Source\PSoC4/Slider_CSHL.c ****     /* Initialize Baseline, Signal and debounce counters */       
 227:.\Generated_Source\PSoC4/Slider_CSHL.c ****     Slider_BaseInit(sensor);
  82              		.loc 1 227 0
  83 0010 201C     		mov	r0, r4
  84 0012 FFF7FEFF 		bl	Slider_BaseInit
  85              	.LVL5:
 228:.\Generated_Source\PSoC4/Slider_CSHL.c **** }
  86              		.loc 1 228 0
  87              		@ sp needed
  88              	.LVL6:
  89 0016 10BD     		pop	{r4, pc}
  90              		.cfi_endproc
  91              	.LFE36:
  92              		.size	Slider_InitializeSensorBaseline, .-Slider_InitializeSensorBaseline
  93              		.section	.text.Slider_InitializeAllBaselines,"ax",%progbits
  94              		.align	2
  95              		.global	Slider_InitializeAllBaselines
  96              		.code	16
  97              		.thumb_func
  98              		.type	Slider_InitializeAllBaselines, %function
  99              	Slider_InitializeAllBaselines:
 100              	.LFB37:
 229:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
 230:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
 231:.\Generated_Source\PSoC4/Slider_CSHL.c **** /*******************************************************************************
 232:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Function Name: Slider_InitializeAllBaselines
 233:.\Generated_Source\PSoC4/Slider_CSHL.c **** ********************************************************************************
 234:.\Generated_Source\PSoC4/Slider_CSHL.c **** *
 235:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Summary:
 236:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  Uses the Slider_InitializeSensorBaseline function to load the 
 237:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  Slider_sensorBaseline[] array with an initial values by scanning 
 238:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  all the sensors. The raw count values are copied into the baseline array for 
 239:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  all the sensors. The raw data filters are initialized if enabled.
 240:.\Generated_Source\PSoC4/Slider_CSHL.c **** *
 241:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Parameters:
 242:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  None
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 7


 243:.\Generated_Source\PSoC4/Slider_CSHL.c **** *
 244:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Return:
 245:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  None
 246:.\Generated_Source\PSoC4/Slider_CSHL.c **** *
 247:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Global Variables:
 248:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  None
 249:.\Generated_Source\PSoC4/Slider_CSHL.c **** *
 250:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Side Effects:
 251:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  None
 252:.\Generated_Source\PSoC4/Slider_CSHL.c **** * 
 253:.\Generated_Source\PSoC4/Slider_CSHL.c **** *******************************************************************************/
 254:.\Generated_Source\PSoC4/Slider_CSHL.c **** void Slider_InitializeAllBaselines(void)
 255:.\Generated_Source\PSoC4/Slider_CSHL.c **** {
 101              		.loc 1 255 0
 102              		.cfi_startproc
 103 0000 10B5     		push	{r4, lr}
 104              		.cfi_def_cfa_offset 8
 105              		.cfi_offset 4, -8
 106              		.cfi_offset 14, -4
 107              	.LVL7:
 256:.\Generated_Source\PSoC4/Slider_CSHL.c ****     uint32 i;
 257:.\Generated_Source\PSoC4/Slider_CSHL.c ****     
 258:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	for(i = 0u; i < Slider_TOTAL_SCANSLOT_COUNT; i++)
 108              		.loc 1 258 0
 109 0002 0024     		mov	r4, #0
 110 0004 03E0     		b	.L8
 111              	.LVL8:
 112              	.L9:
 259:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	{
 260:.\Generated_Source\PSoC4/Slider_CSHL.c ****     	Slider_InitializeSensorBaseline(i);
 113              		.loc 1 260 0 discriminator 2
 114 0006 201C     		mov	r0, r4
 115 0008 FFF7FEFF 		bl	Slider_InitializeSensorBaseline
 116              	.LVL9:
 258:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	for(i = 0u; i < Slider_TOTAL_SCANSLOT_COUNT; i++)
 117              		.loc 1 258 0 discriminator 2
 118 000c 0134     		add	r4, r4, #1
 119              	.LVL10:
 120              	.L8:
 258:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	for(i = 0u; i < Slider_TOTAL_SCANSLOT_COUNT; i++)
 121              		.loc 1 258 0 is_stmt 0 discriminator 1
 122 000e 042C     		cmp	r4, #4
 123 0010 F9D9     		bls	.L9
 261:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	}
 262:.\Generated_Source\PSoC4/Slider_CSHL.c **** }
 124              		.loc 1 262 0 is_stmt 1
 125              		@ sp needed
 126              	.LVL11:
 127 0012 10BD     		pop	{r4, pc}
 128              		.cfi_endproc
 129              	.LFE37:
 130              		.size	Slider_InitializeAllBaselines, .-Slider_InitializeAllBaselines
 131              		.section	.text.Slider_InitializeEnabledBaselines,"ax",%progbits
 132              		.align	2
 133              		.global	Slider_InitializeEnabledBaselines
 134              		.code	16
 135              		.thumb_func
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 8


 136              		.type	Slider_InitializeEnabledBaselines, %function
 137              	Slider_InitializeEnabledBaselines:
 138              	.LFB38:
 263:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
 264:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
 265:.\Generated_Source\PSoC4/Slider_CSHL.c **** /*******************************************************************************
 266:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Function Name: Slider_InitializeEnabledBaselines
 267:.\Generated_Source\PSoC4/Slider_CSHL.c **** ********************************************************************************
 268:.\Generated_Source\PSoC4/Slider_CSHL.c **** *
 269:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Summary:
 270:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  Scans all the enabled widgets and the raw count values are copied into the 
 271:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  baseline array for all the sensors enabled in the scanning process. The baselines 
 272:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  are initialized with zero values for sensors disabled from the scanning process. 
 273:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  The raw data filters are initialized if enabled.
 274:.\Generated_Source\PSoC4/Slider_CSHL.c **** *
 275:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Parameters:
 276:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  None
 277:.\Generated_Source\PSoC4/Slider_CSHL.c **** *
 278:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Return:
 279:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  None
 280:.\Generated_Source\PSoC4/Slider_CSHL.c **** *
 281:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Global Variables:
 282:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  Slider_sensorRaw[] - used to store the sensors raw data.
 283:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  Slider_sensorEnableMask[ ] - used to store bit masks of the enabled sensors.
 284:.\Generated_Source\PSoC4/Slider_CSHL.c **** *
 285:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Side Effects:
 286:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  None
 287:.\Generated_Source\PSoC4/Slider_CSHL.c **** * 
 288:.\Generated_Source\PSoC4/Slider_CSHL.c **** *******************************************************************************/
 289:.\Generated_Source\PSoC4/Slider_CSHL.c **** void Slider_InitializeEnabledBaselines(void)
 290:.\Generated_Source\PSoC4/Slider_CSHL.c **** {
 139              		.loc 1 290 0
 140              		.cfi_startproc
 141 0000 38B5     		push	{r3, r4, r5, lr}
 142              		.cfi_def_cfa_offset 16
 143              		.cfi_offset 3, -16
 144              		.cfi_offset 4, -12
 145              		.cfi_offset 5, -8
 146              		.cfi_offset 14, -4
 291:.\Generated_Source\PSoC4/Slider_CSHL.c ****     uint32 i;
 292:.\Generated_Source\PSoC4/Slider_CSHL.c ****     uint32 isSensorEnabled;
 293:.\Generated_Source\PSoC4/Slider_CSHL.c ****     
 294:.\Generated_Source\PSoC4/Slider_CSHL.c ****     Slider_ScanEnabledWidgets();
 147              		.loc 1 294 0
 148 0002 FFF7FEFF 		bl	Slider_ScanEnabledWidgets
 149              	.LVL12:
 150              	.L11:
 295:.\Generated_Source\PSoC4/Slider_CSHL.c ****     while(Slider_IsBusy() != 0u)
 151              		.loc 1 295 0 discriminator 1
 152 0006 FFF7FEFF 		bl	Slider_IsBusy
 153              	.LVL13:
 154 000a 0028     		cmp	r0, #0
 155 000c FBD1     		bne	.L11
 156 000e 0024     		mov	r4, #0
 296:.\Generated_Source\PSoC4/Slider_CSHL.c ****     {
 297:.\Generated_Source\PSoC4/Slider_CSHL.c ****         /* Wait while sensor is busy */
 298:.\Generated_Source\PSoC4/Slider_CSHL.c ****     }
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 9


 299:.\Generated_Source\PSoC4/Slider_CSHL.c ****     
 300:.\Generated_Source\PSoC4/Slider_CSHL.c ****     for(i = 0u; i < Slider_TOTAL_SENSOR_COUNT; i++)
 301:.\Generated_Source\PSoC4/Slider_CSHL.c ****     {
 302:.\Generated_Source\PSoC4/Slider_CSHL.c ****         isSensorEnabled = Slider_GetBitValue(Slider_sensorEnableMask, i);
 157              		.loc 1 302 0
 158 0010 074D     		ldr	r5, .L16
 159 0012 09E0     		b	.L12
 160              	.LVL14:
 161              	.L14:
 162 0014 281C     		mov	r0, r5
 163 0016 211C     		mov	r1, r4
 164 0018 FFF7FEFF 		bl	Slider_GetBitValue
 165              	.LVL15:
 303:.\Generated_Source\PSoC4/Slider_CSHL.c ****         
 304:.\Generated_Source\PSoC4/Slider_CSHL.c ****         /* Clear raw data if sensor is disabled from scanning process */
 305:.\Generated_Source\PSoC4/Slider_CSHL.c ****         if(isSensorEnabled != 0u)
 166              		.loc 1 305 0
 167 001c 0028     		cmp	r0, #0
 168 001e 02D0     		beq	.L13
 306:.\Generated_Source\PSoC4/Slider_CSHL.c ****         {
 307:.\Generated_Source\PSoC4/Slider_CSHL.c ****             /* Initialize baselines */
 308:.\Generated_Source\PSoC4/Slider_CSHL.c ****             Slider_BaseInit(i);
 169              		.loc 1 308 0
 170 0020 201C     		mov	r0, r4
 171              	.LVL16:
 172 0022 FFF7FEFF 		bl	Slider_BaseInit
 173              	.LVL17:
 174              	.L13:
 300:.\Generated_Source\PSoC4/Slider_CSHL.c ****     for(i = 0u; i < Slider_TOTAL_SENSOR_COUNT; i++)
 175              		.loc 1 300 0
 176 0026 0134     		add	r4, r4, #1
 177              	.LVL18:
 178              	.L12:
 300:.\Generated_Source\PSoC4/Slider_CSHL.c ****     for(i = 0u; i < Slider_TOTAL_SENSOR_COUNT; i++)
 179              		.loc 1 300 0 is_stmt 0 discriminator 1
 180 0028 042C     		cmp	r4, #4
 181 002a F3D9     		bls	.L14
 309:.\Generated_Source\PSoC4/Slider_CSHL.c ****         }
 310:.\Generated_Source\PSoC4/Slider_CSHL.c ****     }
 311:.\Generated_Source\PSoC4/Slider_CSHL.c **** }  
 182              		.loc 1 311 0 is_stmt 1
 183              		@ sp needed
 184              	.LVL19:
 185 002c 38BD     		pop	{r3, r4, r5, pc}
 186              	.L17:
 187 002e C046     		.align	2
 188              	.L16:
 189 0030 00000000 		.word	Slider_sensorEnableMask
 190              		.cfi_endproc
 191              	.LFE38:
 192              		.size	Slider_InitializeEnabledBaselines, .-Slider_InitializeEnabledBaselines
 193              		.section	.text.Slider_GetBaselineData,"ax",%progbits
 194              		.align	2
 195              		.global	Slider_GetBaselineData
 196              		.code	16
 197              		.thumb_func
 198              		.type	Slider_GetBaselineData, %function
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 10


 199              	Slider_GetBaselineData:
 200              	.LFB43:
 312:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
 313:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
 314:.\Generated_Source\PSoC4/Slider_CSHL.c **** /*******************************************************************************
 315:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Function Name: Slider_UpdateBaselineNoThreshold
 316:.\Generated_Source\PSoC4/Slider_CSHL.c **** ********************************************************************************
 317:.\Generated_Source\PSoC4/Slider_CSHL.c **** *
 318:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Summary:
 319:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  Updates the Slider_sensorBaseline[sensor] array element using the 
 320:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  LP filter with k = 256. The signal calculates the difference of count by 
 321:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  subtracting the previous baseline from the current raw count value and stores
 322:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  it in Slider_sensorSignal[sensor]. 
 323:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  If the auto reset option is enabled, the baseline updated regards the noise threshold. 
 324:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  If the auto reset option is disabled, the baseline stops updating; baseline is loaded 
 325:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  with a raw count value if a signal is greater than zero and if signal is less 
 326:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  than noise threshold.
 327:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  Raw data filters are applied to the values if enabled before baseline 
 328:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  calculation.
 329:.\Generated_Source\PSoC4/Slider_CSHL.c **** *
 330:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  This API does not update the thresholds in the Smartsense Mode.
 331:.\Generated_Source\PSoC4/Slider_CSHL.c **** *
 332:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Parameters:
 333:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  sensor:  Sensor number.
 334:.\Generated_Source\PSoC4/Slider_CSHL.c **** *
 335:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Return:
 336:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  None
 337:.\Generated_Source\PSoC4/Slider_CSHL.c **** *
 338:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Global Variables:
 339:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  Slider_widgetNumber[]  - stores widget numbers.
 340:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  Slider_sensorBaseline[]    - used to store baseline value.
 341:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  Slider_sensorBaselineLow[] - used to store fraction byte of 
 342:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  baseline value.
 343:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  Slider_sensorSignal[]      - used to store difference between 
 344:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  current value of raw data and previous value of baseline.
 345:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  Slider_rawFilterData1[]    - used to store previous sample of 
 346:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  any enabled raw data filter.
 347:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  Slider_rawFilterData2[]    - used to store before previous sample
 348:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  of enabled raw data filter. Only required for median or average filters.
 349:.\Generated_Source\PSoC4/Slider_CSHL.c **** * 
 350:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Side Effects:
 351:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  None
 352:.\Generated_Source\PSoC4/Slider_CSHL.c **** * 
 353:.\Generated_Source\PSoC4/Slider_CSHL.c **** *******************************************************************************/
 354:.\Generated_Source\PSoC4/Slider_CSHL.c **** void Slider_UpdateBaselineNoThreshold(uint32 sensor)
 355:.\Generated_Source\PSoC4/Slider_CSHL.c **** {
 356:.\Generated_Source\PSoC4/Slider_CSHL.c ****     uint32 calc;
 357:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	uint32 sign;
 358:.\Generated_Source\PSoC4/Slider_CSHL.c ****     uint16 tempRaw;
 359:.\Generated_Source\PSoC4/Slider_CSHL.c ****     uint16 filteredRawData;
 360:.\Generated_Source\PSoC4/Slider_CSHL.c ****     uint8 widget = Slider_widgetNumber[sensor];
 361:.\Generated_Source\PSoC4/Slider_CSHL.c ****     uint8 noiseThreshold = Slider_noiseThreshold[widget];
 362:.\Generated_Source\PSoC4/Slider_CSHL.c ****     
 363:.\Generated_Source\PSoC4/Slider_CSHL.c ****     #if (Slider_TOTAL_GENERICS_COUNT)
 364:.\Generated_Source\PSoC4/Slider_CSHL.c ****         /* Exclude generic widget */
 365:.\Generated_Source\PSoC4/Slider_CSHL.c ****         if(widget < Slider_END_OF_WIDGETS_INDEX)
 366:.\Generated_Source\PSoC4/Slider_CSHL.c ****         {
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 11


 367:.\Generated_Source\PSoC4/Slider_CSHL.c ****     #endif  /* Slider_TOTAL_GENERICS_COUNT */
 368:.\Generated_Source\PSoC4/Slider_CSHL.c ****     
 369:.\Generated_Source\PSoC4/Slider_CSHL.c ****     filteredRawData = Slider_sensorRaw[sensor];
 370:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
 371:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	#if (Slider_RAW_FILTER_MASK != 0u)
 372:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	if(Slider_enableRawFilters != 0u)
 373:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	{
 374:.\Generated_Source\PSoC4/Slider_CSHL.c **** 		#if (Slider_RAW_FILTER_MASK & Slider_MEDIAN_FILTER)
 375:.\Generated_Source\PSoC4/Slider_CSHL.c **** 			tempRaw = filteredRawData;
 376:.\Generated_Source\PSoC4/Slider_CSHL.c **** 			filteredRawData = Slider_MedianFilter(filteredRawData, Slider_rawFilterData1[sensor], 
 377:.\Generated_Source\PSoC4/Slider_CSHL.c **** 															Slider_rawFilterData2[sensor]);
 378:.\Generated_Source\PSoC4/Slider_CSHL.c **** 			Slider_rawFilterData2[sensor] = Slider_rawFilterData1[sensor];
 379:.\Generated_Source\PSoC4/Slider_CSHL.c **** 			Slider_rawFilterData1[sensor] = tempRaw;
 380:.\Generated_Source\PSoC4/Slider_CSHL.c **** 			
 381:.\Generated_Source\PSoC4/Slider_CSHL.c **** 		#elif (Slider_RAW_FILTER_MASK & Slider_AVERAGING_FILTER)
 382:.\Generated_Source\PSoC4/Slider_CSHL.c **** 			tempRaw = filteredRawData;
 383:.\Generated_Source\PSoC4/Slider_CSHL.c **** 			filteredRawData = Slider_AveragingFilter(filteredRawData, Slider_rawFilterData1[sensor],
 384:.\Generated_Source\PSoC4/Slider_CSHL.c **** 															   Slider_rawFilterData2[sensor]);
 385:.\Generated_Source\PSoC4/Slider_CSHL.c **** 			Slider_rawFilterData2[sensor] = Slider_rawFilterData1[sensor];
 386:.\Generated_Source\PSoC4/Slider_CSHL.c **** 			Slider_rawFilterData1[sensor] = tempRaw;
 387:.\Generated_Source\PSoC4/Slider_CSHL.c **** 			
 388:.\Generated_Source\PSoC4/Slider_CSHL.c **** 		#elif (Slider_RAW_FILTER_MASK & Slider_IIR2_FILTER)
 389:.\Generated_Source\PSoC4/Slider_CSHL.c **** 			filteredRawData = Slider_IIR2Filter(filteredRawData, Slider_rawFilterData1[sensor]);
 390:.\Generated_Source\PSoC4/Slider_CSHL.c **** 			Slider_rawFilterData1[sensor] = filteredRawData;
 391:.\Generated_Source\PSoC4/Slider_CSHL.c **** 			
 392:.\Generated_Source\PSoC4/Slider_CSHL.c **** 		#elif (Slider_RAW_FILTER_MASK & Slider_IIR4_FILTER)
 393:.\Generated_Source\PSoC4/Slider_CSHL.c **** 			filteredRawData = Slider_IIR4Filter(filteredRawData, Slider_rawFilterData1[sensor]);
 394:.\Generated_Source\PSoC4/Slider_CSHL.c **** 			Slider_rawFilterData1[sensor] = filteredRawData;
 395:.\Generated_Source\PSoC4/Slider_CSHL.c **** 				
 396:.\Generated_Source\PSoC4/Slider_CSHL.c **** 		#elif (Slider_RAW_FILTER_MASK & Slider_JITTER_FILTER)
 397:.\Generated_Source\PSoC4/Slider_CSHL.c **** 			filteredRawData = Slider_JitterFilter(filteredRawData, Slider_rawFilterData1[sensor]);
 398:.\Generated_Source\PSoC4/Slider_CSHL.c **** 			Slider_rawFilterData1[sensor] = filteredRawData;
 399:.\Generated_Source\PSoC4/Slider_CSHL.c **** 			
 400:.\Generated_Source\PSoC4/Slider_CSHL.c **** 		#elif (Slider_RAW_FILTER_MASK & Slider_IIR8_FILTER)
 401:.\Generated_Source\PSoC4/Slider_CSHL.c **** 			filteredRawData = Slider_IIR8Filter(filteredRawData, Slider_rawFilterData1[sensor]);
 402:.\Generated_Source\PSoC4/Slider_CSHL.c **** 			Slider_rawFilterData1[sensor] = filteredRawData;
 403:.\Generated_Source\PSoC4/Slider_CSHL.c **** 			
 404:.\Generated_Source\PSoC4/Slider_CSHL.c **** 		#elif (Slider_RAW_FILTER_MASK & Slider_IIR16_FILTER)
 405:.\Generated_Source\PSoC4/Slider_CSHL.c **** 			filteredRawData = Slider_IIR16Filter(filteredRawData, Slider_rawFilterData1[sensor]);
 406:.\Generated_Source\PSoC4/Slider_CSHL.c **** 			Slider_rawFilterData1[sensor] = filteredRawData;
 407:.\Generated_Source\PSoC4/Slider_CSHL.c **** 			
 408:.\Generated_Source\PSoC4/Slider_CSHL.c **** 		#else
 409:.\Generated_Source\PSoC4/Slider_CSHL.c **** 			/* No Raw filters */
 410:.\Generated_Source\PSoC4/Slider_CSHL.c **** 		#endif  /* (Slider_RAW_FILTER_MASK & Slider_MEDIAN_FILTER) */
 411:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	}
 412:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	#endif  /* (Slider_RAW_FILTER_MASK != 0u) */
 413:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	
 414:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	#if (Slider_TUNING_METHOD == Slider__TUNING_AUTO)
 415:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	    MeasureNoiseEnvelope_P4_v2_20(&Slider_config, (uint8)sensor, Slider_sensorRaw);
 416:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	#endif /* (Slider_TUNING_METHOD == Slider__TUNING_AUTO) */
 417:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
 418:.\Generated_Source\PSoC4/Slider_CSHL.c ****     /* Baseline calculation */
 419:.\Generated_Source\PSoC4/Slider_CSHL.c ****     /* Calculate difference RawData[cur] - Baseline[prev] */
 420:.\Generated_Source\PSoC4/Slider_CSHL.c ****     if(filteredRawData >= Slider_sensorBaseline[sensor])
 421:.\Generated_Source\PSoC4/Slider_CSHL.c ****     {
 422:.\Generated_Source\PSoC4/Slider_CSHL.c **** 		Slider_lowBaselineResetCnt[sensor] = 0u;	
 423:.\Generated_Source\PSoC4/Slider_CSHL.c ****         tempRaw = filteredRawData - Slider_sensorBaseline[sensor];
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 12


 424:.\Generated_Source\PSoC4/Slider_CSHL.c ****         sign = 1u;    /* Positive difference - Calculate the Signal */
 425:.\Generated_Source\PSoC4/Slider_CSHL.c ****     }
 426:.\Generated_Source\PSoC4/Slider_CSHL.c ****     else
 427:.\Generated_Source\PSoC4/Slider_CSHL.c ****     {
 428:.\Generated_Source\PSoC4/Slider_CSHL.c ****         tempRaw = Slider_sensorBaseline[sensor] - filteredRawData;
 429:.\Generated_Source\PSoC4/Slider_CSHL.c ****         sign = 0u;    /* Negative difference - Do NOT calculate the Signal */
 430:.\Generated_Source\PSoC4/Slider_CSHL.c ****     }
 431:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
 432:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	#if (Slider_TUNING_METHOD != Slider__TUNING_NONE)
 433:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	if((sign == 0u) && (tempRaw > (uint16) Slider_negativeNoiseThreshold[widget]))
 434:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	#else
 435:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	if((sign == 0u) && (tempRaw > (uint16) Slider_NEGATIVE_NOISE_THRESHOLD))
 436:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	#endif /* (Slider_TUNING_METHOD != Slider__TUNING_NONE) */ 
 437:.\Generated_Source\PSoC4/Slider_CSHL.c ****     {
 438:.\Generated_Source\PSoC4/Slider_CSHL.c ****         if(Slider_lowBaselineResetCnt[sensor] >= Slider_lowBaselineReset[sensor])
 439:.\Generated_Source\PSoC4/Slider_CSHL.c ****         {
 440:.\Generated_Source\PSoC4/Slider_CSHL.c ****             Slider_BaseInit(sensor);
 441:.\Generated_Source\PSoC4/Slider_CSHL.c ****             Slider_lowBaselineResetCnt[sensor] = 0u;
 442:.\Generated_Source\PSoC4/Slider_CSHL.c ****         }
 443:.\Generated_Source\PSoC4/Slider_CSHL.c ****         else
 444:.\Generated_Source\PSoC4/Slider_CSHL.c ****         {
 445:.\Generated_Source\PSoC4/Slider_CSHL.c ****             Slider_lowBaselineResetCnt[sensor]++;
 446:.\Generated_Source\PSoC4/Slider_CSHL.c ****         }
 447:.\Generated_Source\PSoC4/Slider_CSHL.c ****     }
 448:.\Generated_Source\PSoC4/Slider_CSHL.c ****     else
 449:.\Generated_Source\PSoC4/Slider_CSHL.c ****     {
 450:.\Generated_Source\PSoC4/Slider_CSHL.c ****         #if (Slider_AUTO_RESET == Slider_AUTO_RESET_DISABLE)
 451:.\Generated_Source\PSoC4/Slider_CSHL.c **** 		#if (Slider_TUNING_METHOD != Slider__TUNING_NONE)			
 452:.\Generated_Source\PSoC4/Slider_CSHL.c **** 			/* Update Baseline if lower than noiseThreshold */
 453:.\Generated_Source\PSoC4/Slider_CSHL.c **** 			if ( (tempRaw <= noiseThreshold) || 
 454:.\Generated_Source\PSoC4/Slider_CSHL.c **** 			 ((tempRaw < (uint16) Slider_negativeNoiseThreshold[widget])
 455:.\Generated_Source\PSoC4/Slider_CSHL.c **** 			   && (sign == 0u)))
 456:.\Generated_Source\PSoC4/Slider_CSHL.c **** 			{
 457:.\Generated_Source\PSoC4/Slider_CSHL.c **** 		#else
 458:.\Generated_Source\PSoC4/Slider_CSHL.c **** 			/* Update Baseline if lower than noiseThreshold */
 459:.\Generated_Source\PSoC4/Slider_CSHL.c **** 			if ( (tempRaw <= noiseThreshold) || 
 460:.\Generated_Source\PSoC4/Slider_CSHL.c **** 				 ((tempRaw < (uint16) Slider_NEGATIVE_NOISE_THRESHOLD)
 461:.\Generated_Source\PSoC4/Slider_CSHL.c **** 				   && (sign == 0u)))
 462:.\Generated_Source\PSoC4/Slider_CSHL.c **** 			{
 463:.\Generated_Source\PSoC4/Slider_CSHL.c **** 		#endif /* (Slider_TUNING_METHOD != Slider__TUNING_NONE) */ 
 464:.\Generated_Source\PSoC4/Slider_CSHL.c ****         #endif /* (Slider_AUTO_RESET == Slider_AUTO_RESET_DISABLE) */
 465:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 /* Make full Baseline 23 bits */
 466:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 calc = (uint32) Slider_sensorBaseline[sensor] << 8u;
 467:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 calc |= (uint32) Slider_sensorBaselineLow[sensor];
 468:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
 469:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 /* Add Raw Data to Baseline */
 470:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 calc += filteredRawData;
 471:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
 472:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 /* Sub the high Baseline */
 473:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 calc -= Slider_sensorBaseline[sensor];
 474:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
 475:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 /* Put Baseline and BaselineLow */
 476:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 Slider_sensorBaseline[sensor] = ((uint16) (calc >> 8u));
 477:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 Slider_sensorBaselineLow[sensor] = ((uint8) calc);
 478:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
 479:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 Slider_lowBaselineResetCnt[sensor] = 0u;
 480:.\Generated_Source\PSoC4/Slider_CSHL.c ****         #if (Slider_AUTO_RESET == Slider_AUTO_RESET_DISABLE)
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 13


 481:.\Generated_Source\PSoC4/Slider_CSHL.c ****             }
 482:.\Generated_Source\PSoC4/Slider_CSHL.c ****         #endif /* (Slider_AUTO_RESET == Slider_AUTO_RESET_DISABLE) */
 483:.\Generated_Source\PSoC4/Slider_CSHL.c ****     }
 484:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
 485:.\Generated_Source\PSoC4/Slider_CSHL.c ****     /* Calculate Signal if positive difference > noiseThreshold */
 486:.\Generated_Source\PSoC4/Slider_CSHL.c ****     if((tempRaw > (uint16) noiseThreshold) && (sign != 0u))
 487:.\Generated_Source\PSoC4/Slider_CSHL.c ****     {
 488:.\Generated_Source\PSoC4/Slider_CSHL.c ****         #if (Slider_SIGNAL_SIZE == Slider_SIGNAL_SIZE_UINT8)
 489:.\Generated_Source\PSoC4/Slider_CSHL.c ****             /* Over flow defence for uint8 */
 490:.\Generated_Source\PSoC4/Slider_CSHL.c ****             if (tempRaw > 0xFFu)
 491:.\Generated_Source\PSoC4/Slider_CSHL.c ****             {
 492:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 Slider_sensorSignal[sensor] = 0xFFu;
 493:.\Generated_Source\PSoC4/Slider_CSHL.c ****             }    
 494:.\Generated_Source\PSoC4/Slider_CSHL.c ****             else 
 495:.\Generated_Source\PSoC4/Slider_CSHL.c ****             {
 496:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 Slider_sensorSignal[sensor] = ((uint8) tempRaw);
 497:.\Generated_Source\PSoC4/Slider_CSHL.c ****             }
 498:.\Generated_Source\PSoC4/Slider_CSHL.c ****         #else
 499:.\Generated_Source\PSoC4/Slider_CSHL.c ****             Slider_sensorSignal[sensor] = ((uint16) tempRaw);
 500:.\Generated_Source\PSoC4/Slider_CSHL.c ****         #endif  /* (Slider_SIGNAL_SIZE == Slider_SIGNAL_SIZE_UINT8) */
 501:.\Generated_Source\PSoC4/Slider_CSHL.c ****     }
 502:.\Generated_Source\PSoC4/Slider_CSHL.c ****     else
 503:.\Generated_Source\PSoC4/Slider_CSHL.c ****     {
 504:.\Generated_Source\PSoC4/Slider_CSHL.c ****         /* Signal is zero */
 505:.\Generated_Source\PSoC4/Slider_CSHL.c ****         Slider_sensorSignal[sensor] = 0u;
 506:.\Generated_Source\PSoC4/Slider_CSHL.c ****     }
 507:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
 508:.\Generated_Source\PSoC4/Slider_CSHL.c ****     #if (Slider_TOTAL_GENERICS_COUNT)
 509:.\Generated_Source\PSoC4/Slider_CSHL.c ****         /* Exclude generic widget */
 510:.\Generated_Source\PSoC4/Slider_CSHL.c ****         }
 511:.\Generated_Source\PSoC4/Slider_CSHL.c ****     #endif  /* Slider_TOTAL_GENERICS_COUNT */
 512:.\Generated_Source\PSoC4/Slider_CSHL.c **** }
 513:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
 514:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
 515:.\Generated_Source\PSoC4/Slider_CSHL.c **** /*******************************************************************************
 516:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Function Name: Slider_UpdateSensorBaseline
 517:.\Generated_Source\PSoC4/Slider_CSHL.c **** ********************************************************************************
 518:.\Generated_Source\PSoC4/Slider_CSHL.c **** *
 519:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Summary:
 520:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  Updates the Slider_sensorBaseline[sensor] array element using the 
 521:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  LP filter with k = 256. The signal calculates the difference of count by 
 522:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  subtracting the previous baseline from the current raw count value and stores
 523:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  it in Slider_sensorSignal[sensor]. 
 524:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  If the auto reset option is enabled, the baseline updated regards the noise threshold. 
 525:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  If the auto reset option is disabled, the baseline stops updating. 
 526:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  Baseline is loaded with raw count value if a signal is greater than zero and  
 527:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  if signal is less than noise threshold.
 528:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  Raw data filters are applied to the values if enabled before baseline 
 529:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  calculation.
 530:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  This API updates the thresholds in the Smartsense Mode.
 531:.\Generated_Source\PSoC4/Slider_CSHL.c **** *
 532:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Parameters:
 533:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  sensor:  Sensor number.
 534:.\Generated_Source\PSoC4/Slider_CSHL.c **** *
 535:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Return:
 536:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  None
 537:.\Generated_Source\PSoC4/Slider_CSHL.c **** *
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 14


 538:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Global Variables:
 539:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  Slider_widgetNumber[]  - stores widget numbers.
 540:.\Generated_Source\PSoC4/Slider_CSHL.c **** * 
 541:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Side Effects:
 542:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  None
 543:.\Generated_Source\PSoC4/Slider_CSHL.c **** * 
 544:.\Generated_Source\PSoC4/Slider_CSHL.c **** *******************************************************************************/
 545:.\Generated_Source\PSoC4/Slider_CSHL.c ****  void Slider_UpdateSensorBaseline(uint32 sensor)
 546:.\Generated_Source\PSoC4/Slider_CSHL.c **** {
 547:.\Generated_Source\PSoC4/Slider_CSHL.c ****     #if (Slider_TOTAL_GENERICS_COUNT)
 548:.\Generated_Source\PSoC4/Slider_CSHL.c **** 		uint32 widget;
 549:.\Generated_Source\PSoC4/Slider_CSHL.c **** 		
 550:.\Generated_Source\PSoC4/Slider_CSHL.c **** 		widget = Slider_widgetNumber[sensor];
 551:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	
 552:.\Generated_Source\PSoC4/Slider_CSHL.c ****         /* Exclude generic widget */
 553:.\Generated_Source\PSoC4/Slider_CSHL.c ****         if(widget < Slider_END_OF_WIDGETS_INDEX)
 554:.\Generated_Source\PSoC4/Slider_CSHL.c ****         {
 555:.\Generated_Source\PSoC4/Slider_CSHL.c ****     #endif  /* Slider_TOTAL_GENERICS_COUNT */
 556:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
 557:.\Generated_Source\PSoC4/Slider_CSHL.c ****     #if (Slider_TUNING_METHOD == Slider__TUNING_AUTO)
 558:.\Generated_Source\PSoC4/Slider_CSHL.c ****     	Slider_UpdateThresholds(sensor);
 559:.\Generated_Source\PSoC4/Slider_CSHL.c ****     #endif /* (Slider_TUNING_METHOD == Slider__TUNING_AUTO) */
 560:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
 561:.\Generated_Source\PSoC4/Slider_CSHL.c ****     Slider_UpdateBaselineNoThreshold(sensor);
 562:.\Generated_Source\PSoC4/Slider_CSHL.c ****     
 563:.\Generated_Source\PSoC4/Slider_CSHL.c ****     #if (Slider_TOTAL_GENERICS_COUNT)
 564:.\Generated_Source\PSoC4/Slider_CSHL.c ****         /* Exclude generic widget */
 565:.\Generated_Source\PSoC4/Slider_CSHL.c ****         }
 566:.\Generated_Source\PSoC4/Slider_CSHL.c ****     #endif  /* Slider_TOTAL_GENERICS_COUNT */
 567:.\Generated_Source\PSoC4/Slider_CSHL.c **** }
 568:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
 569:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
 570:.\Generated_Source\PSoC4/Slider_CSHL.c **** /*******************************************************************************
 571:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Function Name: Slider_UpdateEnabledBaselines
 572:.\Generated_Source\PSoC4/Slider_CSHL.c **** ********************************************************************************
 573:.\Generated_Source\PSoC4/Slider_CSHL.c **** *
 574:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Summary:
 575:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  Checks Slider_sensorEnableMask[] array and calls the 
 576:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  Slider_UpdateSensorBaseline function to update the baselines 
 577:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  for the enabled sensors.
 578:.\Generated_Source\PSoC4/Slider_CSHL.c **** *
 579:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Parameters:
 580:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  None
 581:.\Generated_Source\PSoC4/Slider_CSHL.c **** *
 582:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Return:
 583:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  None
 584:.\Generated_Source\PSoC4/Slider_CSHL.c **** *
 585:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Global Variables:
 586:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  Slider_sensorEnableMask[] - used to store the sensor scanning 
 587:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  state.
 588:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  Slider_sensorEnableMask[0] contains the masked bits for sensors 
 589:.\Generated_Source\PSoC4/Slider_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 590:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  Slider_sensorEnableMask[1] contains the masked bits for 
 591:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 592:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  0 - sensor doesn't scan by Slider_ScanEnabledWidgets().
 593:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  1 - sensor scans by Slider_ScanEnabledWidgets().
 594:.\Generated_Source\PSoC4/Slider_CSHL.c **** * 
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 15


 595:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Side Effects:
 596:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  None
 597:.\Generated_Source\PSoC4/Slider_CSHL.c **** * 
 598:.\Generated_Source\PSoC4/Slider_CSHL.c **** *******************************************************************************/
 599:.\Generated_Source\PSoC4/Slider_CSHL.c ****  void Slider_UpdateEnabledBaselines(void)
 600:.\Generated_Source\PSoC4/Slider_CSHL.c **** {
 601:.\Generated_Source\PSoC4/Slider_CSHL.c ****     uint32 i;
 602:.\Generated_Source\PSoC4/Slider_CSHL.c ****     uint32 isSensorEnabled;
 603:.\Generated_Source\PSoC4/Slider_CSHL.c ****     
 604:.\Generated_Source\PSoC4/Slider_CSHL.c ****     for(i = 0u; i < Slider_TOTAL_SENSOR_COUNT; i++)
 605:.\Generated_Source\PSoC4/Slider_CSHL.c ****     {
 606:.\Generated_Source\PSoC4/Slider_CSHL.c ****         isSensorEnabled = Slider_GetBitValue(Slider_sensorEnableMask, i);
 607:.\Generated_Source\PSoC4/Slider_CSHL.c ****         
 608:.\Generated_Source\PSoC4/Slider_CSHL.c ****         if(0u != isSensorEnabled)
 609:.\Generated_Source\PSoC4/Slider_CSHL.c ****         {
 610:.\Generated_Source\PSoC4/Slider_CSHL.c ****             Slider_UpdateSensorBaseline(i);
 611:.\Generated_Source\PSoC4/Slider_CSHL.c ****         }
 612:.\Generated_Source\PSoC4/Slider_CSHL.c ****     }
 613:.\Generated_Source\PSoC4/Slider_CSHL.c **** }
 614:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
 615:.\Generated_Source\PSoC4/Slider_CSHL.c **** /*******************************************************************************
 616:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Function Name: Slider_UpdateWidgetBaseline
 617:.\Generated_Source\PSoC4/Slider_CSHL.c **** ********************************************************************************
 618:.\Generated_Source\PSoC4/Slider_CSHL.c **** *
 619:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Summary:
 620:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  Checks Slider_sensorEnableMask[] array and calls the 
 621:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  Slider_UpdateSensorBaseline function to update the baselines 
 622:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  for the enabled sensors that belong to widget.
 623:.\Generated_Source\PSoC4/Slider_CSHL.c **** *
 624:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Parameters:
 625:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  widget:  Widget number.
 626:.\Generated_Source\PSoC4/Slider_CSHL.c **** *
 627:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Return:
 628:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  None
 629:.\Generated_Source\PSoC4/Slider_CSHL.c **** *
 630:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Global Variables:
 631:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  Slider_sensorEnableMask[] - used to store the sensor scanning 
 632:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  state.
 633:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  Slider_sensorEnableMask[0] contains the masked bits for sensors 
 634:.\Generated_Source\PSoC4/Slider_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 635:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  Slider_sensorEnableMask[1] contains the masked bits for 
 636:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 637:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  0 - sensor doesn't scan by Slider_ScanEnabledWidgets().
 638:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  1 - sensor scans by Slider_ScanEnabledWidgets().
 639:.\Generated_Source\PSoC4/Slider_CSHL.c **** * 
 640:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Side Effects:
 641:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  None
 642:.\Generated_Source\PSoC4/Slider_CSHL.c **** * 
 643:.\Generated_Source\PSoC4/Slider_CSHL.c **** *******************************************************************************/
 644:.\Generated_Source\PSoC4/Slider_CSHL.c **** void Slider_UpdateWidgetBaseline(uint32 widget)
 645:.\Generated_Source\PSoC4/Slider_CSHL.c **** {
 646:.\Generated_Source\PSoC4/Slider_CSHL.c ****     uint32 sensorsPerWidget;
 647:.\Generated_Source\PSoC4/Slider_CSHL.c ****     uint32 firstSensor;
 648:.\Generated_Source\PSoC4/Slider_CSHL.c ****     uint32 lastSensor;
 649:.\Generated_Source\PSoC4/Slider_CSHL.c ****     uint32 i;
 650:.\Generated_Source\PSoC4/Slider_CSHL.c ****     uint32 isSensorEnabled;
 651:.\Generated_Source\PSoC4/Slider_CSHL.c ****     
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 16


 652:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	/* Get number of sensors in widget */
 653:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	sensorsPerWidget = Slider_numberOfSensors[widget];
 654:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
 655:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	/* Get first sensor in widget */
 656:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	firstSensor = Slider_rawDataIndex[widget];
 657:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	
 658:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	/* Get last sensor in widget */
 659:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	lastSensor = (Slider_rawDataIndex[widget] + sensorsPerWidget);
 660:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	
 661:.\Generated_Source\PSoC4/Slider_CSHL.c ****     for(i = firstSensor; i < lastSensor; i++)
 662:.\Generated_Source\PSoC4/Slider_CSHL.c ****     {
 663:.\Generated_Source\PSoC4/Slider_CSHL.c ****         isSensorEnabled = Slider_GetBitValue(Slider_sensorEnableMask, i);
 664:.\Generated_Source\PSoC4/Slider_CSHL.c ****         
 665:.\Generated_Source\PSoC4/Slider_CSHL.c ****         if(0u != isSensorEnabled)
 666:.\Generated_Source\PSoC4/Slider_CSHL.c ****         {
 667:.\Generated_Source\PSoC4/Slider_CSHL.c ****             Slider_UpdateSensorBaseline(i);
 668:.\Generated_Source\PSoC4/Slider_CSHL.c ****         }
 669:.\Generated_Source\PSoC4/Slider_CSHL.c ****     }
 670:.\Generated_Source\PSoC4/Slider_CSHL.c **** }
 671:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
 672:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
 673:.\Generated_Source\PSoC4/Slider_CSHL.c **** /*******************************************************************************
 674:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Function Name: Slider_GetBaselineData
 675:.\Generated_Source\PSoC4/Slider_CSHL.c **** ********************************************************************************
 676:.\Generated_Source\PSoC4/Slider_CSHL.c **** *
 677:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Summary:
 678:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  This function reads the sensor baseline from the component.
 679:.\Generated_Source\PSoC4/Slider_CSHL.c **** *
 680:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Parameters:
 681:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  sensor:  Sensor number.
 682:.\Generated_Source\PSoC4/Slider_CSHL.c **** *
 683:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Return:
 684:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  This API returns the baseline value of the sensor indicated by an argument.
 685:.\Generated_Source\PSoC4/Slider_CSHL.c **** *
 686:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Global Variables:
 687:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  Slider_sensorBaseline[] - the array with an initial values by scanning
 688:.\Generated_Source\PSoC4/Slider_CSHL.c **** * 
 689:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Side Effects:
 690:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  None
 691:.\Generated_Source\PSoC4/Slider_CSHL.c **** *
 692:.\Generated_Source\PSoC4/Slider_CSHL.c **** *******************************************************************************/
 693:.\Generated_Source\PSoC4/Slider_CSHL.c **** uint16 Slider_GetBaselineData(uint32 sensor)
 694:.\Generated_Source\PSoC4/Slider_CSHL.c **** {
 201              		.loc 1 694 0
 202              		.cfi_startproc
 203              	.LVL20:
 695:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	return (Slider_sensorBaseline[sensor]);
 204              		.loc 1 695 0
 205 0000 4000     		lsl	r0, r0, #1
 206              	.LVL21:
 207 0002 014B     		ldr	r3, .L19
 208 0004 185A     		ldrh	r0, [r3, r0]
 696:.\Generated_Source\PSoC4/Slider_CSHL.c **** }
 209              		.loc 1 696 0
 210              		@ sp needed
 211 0006 7047     		bx	lr
 212              	.L20:
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 17


 213              		.align	2
 214              	.L19:
 215 0008 00000000 		.word	.LANCHOR0
 216              		.cfi_endproc
 217              	.LFE43:
 218              		.size	Slider_GetBaselineData, .-Slider_GetBaselineData
 219              		.section	.text.Slider_SetBaselineData,"ax",%progbits
 220              		.align	2
 221              		.global	Slider_SetBaselineData
 222              		.code	16
 223              		.thumb_func
 224              		.type	Slider_SetBaselineData, %function
 225              	Slider_SetBaselineData:
 226              	.LFB44:
 697:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
 698:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
 699:.\Generated_Source\PSoC4/Slider_CSHL.c **** /*******************************************************************************
 700:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Function Name: Slider_SetBaselineData
 701:.\Generated_Source\PSoC4/Slider_CSHL.c **** ********************************************************************************
 702:.\Generated_Source\PSoC4/Slider_CSHL.c **** *
 703:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Summary:
 704:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  This API writes the data value passed as an argument to the sensor baseline array.
 705:.\Generated_Source\PSoC4/Slider_CSHL.c **** *
 706:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Parameters:
 707:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  sensor:  Sensor number.
 708:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  data:    Sensor baseline.
 709:.\Generated_Source\PSoC4/Slider_CSHL.c **** *
 710:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Return:
 711:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  None.
 712:.\Generated_Source\PSoC4/Slider_CSHL.c **** *
 713:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Global Variables:
 714:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  Slider_sensorBaseline[] - the array with initial values by scanning
 715:.\Generated_Source\PSoC4/Slider_CSHL.c **** * 
 716:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Side Effects:
 717:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  None
 718:.\Generated_Source\PSoC4/Slider_CSHL.c **** *
 719:.\Generated_Source\PSoC4/Slider_CSHL.c **** *******************************************************************************/
 720:.\Generated_Source\PSoC4/Slider_CSHL.c **** void Slider_SetBaselineData(uint32 sensor, uint16 data)
 721:.\Generated_Source\PSoC4/Slider_CSHL.c **** {
 227              		.loc 1 721 0
 228              		.cfi_startproc
 229              	.LVL22:
 722:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	Slider_sensorBaseline[sensor] = data;
 230              		.loc 1 722 0
 231 0000 4000     		lsl	r0, r0, #1
 232              	.LVL23:
 233 0002 014B     		ldr	r3, .L22
 234 0004 C152     		strh	r1, [r0, r3]
 723:.\Generated_Source\PSoC4/Slider_CSHL.c **** }
 235              		.loc 1 723 0
 236              		@ sp needed
 237 0006 7047     		bx	lr
 238              	.L23:
 239              		.align	2
 240              	.L22:
 241 0008 00000000 		.word	.LANCHOR0
 242              		.cfi_endproc
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 18


 243              	.LFE44:
 244              		.size	Slider_SetBaselineData, .-Slider_SetBaselineData
 245              		.section	.text.Slider_GetDiffCountData,"ax",%progbits
 246              		.align	2
 247              		.global	Slider_GetDiffCountData
 248              		.code	16
 249              		.thumb_func
 250              		.type	Slider_GetDiffCountData, %function
 251              	Slider_GetDiffCountData:
 252              	.LFB45:
 724:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
 725:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
 726:.\Generated_Source\PSoC4/Slider_CSHL.c **** /*******************************************************************************
 727:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Function Name: Slider_GetDiffCountData
 728:.\Generated_Source\PSoC4/Slider_CSHL.c **** ********************************************************************************
 729:.\Generated_Source\PSoC4/Slider_CSHL.c **** *
 730:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Summary:
 731:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  This function returns the Sensor Signal from the component.
 732:.\Generated_Source\PSoC4/Slider_CSHL.c **** *
 733:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Parameters:
 734:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  sensor:  Sensor number.
 735:.\Generated_Source\PSoC4/Slider_CSHL.c **** *
 736:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Return:
 737:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  This API returns the difference count value of the sensor indicated by the 
 738:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  argument. 
 739:.\Generated_Source\PSoC4/Slider_CSHL.c **** *
 740:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Global Variables:
 741:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  Slider_sensorSignal[] - the array with difference counts for sensors
 742:.\Generated_Source\PSoC4/Slider_CSHL.c **** * 
 743:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Side Effects:
 744:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  None
 745:.\Generated_Source\PSoC4/Slider_CSHL.c **** *
 746:.\Generated_Source\PSoC4/Slider_CSHL.c **** *******************************************************************************/
 747:.\Generated_Source\PSoC4/Slider_CSHL.c **** uint8 Slider_GetDiffCountData(uint32 sensor)
 748:.\Generated_Source\PSoC4/Slider_CSHL.c **** {
 253              		.loc 1 748 0
 254              		.cfi_startproc
 255              	.LVL24:
 749:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	return (Slider_sensorSignal[sensor]);
 256              		.loc 1 749 0
 257 0000 014B     		ldr	r3, .L25
 258 0002 1818     		add	r0, r3, r0
 259              	.LVL25:
 260 0004 007D     		ldrb	r0, [r0, #20]
 750:.\Generated_Source\PSoC4/Slider_CSHL.c **** }
 261              		.loc 1 750 0
 262              		@ sp needed
 263 0006 7047     		bx	lr
 264              	.L26:
 265              		.align	2
 266              	.L25:
 267 0008 00000000 		.word	.LANCHOR0
 268              		.cfi_endproc
 269              	.LFE45:
 270              		.size	Slider_GetDiffCountData, .-Slider_GetDiffCountData
 271              		.section	.text.Slider_SetDiffCountData,"ax",%progbits
 272              		.align	2
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 19


 273              		.global	Slider_SetDiffCountData
 274              		.code	16
 275              		.thumb_func
 276              		.type	Slider_SetDiffCountData, %function
 277              	Slider_SetDiffCountData:
 278              	.LFB46:
 751:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
 752:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
 753:.\Generated_Source\PSoC4/Slider_CSHL.c **** /*******************************************************************************
 754:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Function Name: Slider_SetDiffCountData
 755:.\Generated_Source\PSoC4/Slider_CSHL.c **** ********************************************************************************
 756:.\Generated_Source\PSoC4/Slider_CSHL.c **** *
 757:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Summary:
 758:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  This API writes the data value passed as an argument to the sensor signal array.
 759:.\Generated_Source\PSoC4/Slider_CSHL.c **** *
 760:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Parameters:
 761:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  sensor:  Sensor number.
 762:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  value:   Sensor signal.
 763:.\Generated_Source\PSoC4/Slider_CSHL.c **** *
 764:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Return:
 765:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  None. 
 766:.\Generated_Source\PSoC4/Slider_CSHL.c **** *
 767:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Global Variables:
 768:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  Slider_sensorSignal[] - the array with difference counts for sensors
 769:.\Generated_Source\PSoC4/Slider_CSHL.c **** * 
 770:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Side Effects:
 771:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  None
 772:.\Generated_Source\PSoC4/Slider_CSHL.c **** *
 773:.\Generated_Source\PSoC4/Slider_CSHL.c **** *******************************************************************************/
 774:.\Generated_Source\PSoC4/Slider_CSHL.c **** void Slider_SetDiffCountData(uint32 sensor, uint8 value)
 775:.\Generated_Source\PSoC4/Slider_CSHL.c **** {
 279              		.loc 1 775 0
 280              		.cfi_startproc
 281              	.LVL26:
 776:.\Generated_Source\PSoC4/Slider_CSHL.c ****     Slider_sensorSignal[sensor] = value;
 282              		.loc 1 776 0
 283 0000 014B     		ldr	r3, .L28
 284 0002 1818     		add	r0, r3, r0
 285              	.LVL27:
 286 0004 0175     		strb	r1, [r0, #20]
 777:.\Generated_Source\PSoC4/Slider_CSHL.c **** }
 287              		.loc 1 777 0
 288              		@ sp needed
 289 0006 7047     		bx	lr
 290              	.L29:
 291              		.align	2
 292              	.L28:
 293 0008 00000000 		.word	.LANCHOR0
 294              		.cfi_endproc
 295              	.LFE46:
 296              		.size	Slider_SetDiffCountData, .-Slider_SetDiffCountData
 297              		.section	.text.Slider_GetFingerThreshold,"ax",%progbits
 298              		.align	2
 299              		.global	Slider_GetFingerThreshold
 300              		.code	16
 301              		.thumb_func
 302              		.type	Slider_GetFingerThreshold, %function
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 20


 303              	Slider_GetFingerThreshold:
 304              	.LFB47:
 778:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
 779:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
 780:.\Generated_Source\PSoC4/Slider_CSHL.c **** /*******************************************************************************
 781:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Function Name: Slider_GetFingerThreshold
 782:.\Generated_Source\PSoC4/Slider_CSHL.c **** ********************************************************************************
 783:.\Generated_Source\PSoC4/Slider_CSHL.c **** *
 784:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Summary:
 785:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  This function reads the finger threshold from the component.
 786:.\Generated_Source\PSoC4/Slider_CSHL.c **** *
 787:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Parameters:
 788:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  widget:  widget number.
 789:.\Generated_Source\PSoC4/Slider_CSHL.c **** *
 790:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Return:
 791:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  This API returns the finger threshold of the widget indicated by the argument. 
 792:.\Generated_Source\PSoC4/Slider_CSHL.c **** *
 793:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Global Variables:
 794:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  Slider_fingerThreshold[] - This array contains the level of signal 
 795:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  for each widget that is determined if a finger is present on the widget.
 796:.\Generated_Source\PSoC4/Slider_CSHL.c **** *
 797:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Side Effects:
 798:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  None
 799:.\Generated_Source\PSoC4/Slider_CSHL.c **** *
 800:.\Generated_Source\PSoC4/Slider_CSHL.c **** *******************************************************************************/
 801:.\Generated_Source\PSoC4/Slider_CSHL.c **** uint8 Slider_GetFingerThreshold(uint32 widget)
 802:.\Generated_Source\PSoC4/Slider_CSHL.c **** {
 305              		.loc 1 802 0
 306              		.cfi_startproc
 307              	.LVL28:
 803:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	return(Slider_fingerThreshold[widget]);
 308              		.loc 1 803 0
 309 0000 014B     		ldr	r3, .L31
 310 0002 185C     		ldrb	r0, [r3, r0]
 311              	.LVL29:
 804:.\Generated_Source\PSoC4/Slider_CSHL.c **** }
 312              		.loc 1 804 0
 313              		@ sp needed
 314 0004 7047     		bx	lr
 315              	.L32:
 316 0006 C046     		.align	2
 317              	.L31:
 318 0008 00000000 		.word	Slider_fingerThreshold
 319              		.cfi_endproc
 320              	.LFE47:
 321              		.size	Slider_GetFingerThreshold, .-Slider_GetFingerThreshold
 322              		.section	.text.Slider_GetNoiseThreshold,"ax",%progbits
 323              		.align	2
 324              		.global	Slider_GetNoiseThreshold
 325              		.code	16
 326              		.thumb_func
 327              		.type	Slider_GetNoiseThreshold, %function
 328              	Slider_GetNoiseThreshold:
 329              	.LFB48:
 805:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
 806:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
 807:.\Generated_Source\PSoC4/Slider_CSHL.c **** /*******************************************************************************
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 21


 808:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Function Name: Slider_GetNoiseThreshold
 809:.\Generated_Source\PSoC4/Slider_CSHL.c **** ********************************************************************************
 810:.\Generated_Source\PSoC4/Slider_CSHL.c **** *
 811:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Summary:
 812:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  This function reads the noise threshold from the component.
 813:.\Generated_Source\PSoC4/Slider_CSHL.c **** *
 814:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Parameters:
 815:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  widget:  widget number.
 816:.\Generated_Source\PSoC4/Slider_CSHL.c **** *
 817:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Return:
 818:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  This API returns the noise threshold of the widget indicated by the argument. 
 819:.\Generated_Source\PSoC4/Slider_CSHL.c **** *
 820:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Global Variables:
 821:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  Slider_noiseThreshold[] - This array contains the level of signal 
 822:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  for each widget that determines the level of noise in the capacitive scan.
 823:.\Generated_Source\PSoC4/Slider_CSHL.c **** * 
 824:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Side Effects:
 825:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  None
 826:.\Generated_Source\PSoC4/Slider_CSHL.c **** *
 827:.\Generated_Source\PSoC4/Slider_CSHL.c **** *******************************************************************************/
 828:.\Generated_Source\PSoC4/Slider_CSHL.c **** uint8 Slider_GetNoiseThreshold(uint32 widget)
 829:.\Generated_Source\PSoC4/Slider_CSHL.c **** {
 330              		.loc 1 829 0
 331              		.cfi_startproc
 332              	.LVL30:
 830:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	return (Slider_noiseThreshold[widget]);
 333              		.loc 1 830 0
 334 0000 014B     		ldr	r3, .L34
 335 0002 185C     		ldrb	r0, [r3, r0]
 336              	.LVL31:
 831:.\Generated_Source\PSoC4/Slider_CSHL.c **** }
 337              		.loc 1 831 0
 338              		@ sp needed
 339 0004 7047     		bx	lr
 340              	.L35:
 341 0006 C046     		.align	2
 342              	.L34:
 343 0008 00000000 		.word	Slider_noiseThreshold
 344              		.cfi_endproc
 345              	.LFE48:
 346              		.size	Slider_GetNoiseThreshold, .-Slider_GetNoiseThreshold
 347              		.section	.text.Slider_GetFingerHysteresis,"ax",%progbits
 348              		.align	2
 349              		.global	Slider_GetFingerHysteresis
 350              		.code	16
 351              		.thumb_func
 352              		.type	Slider_GetFingerHysteresis, %function
 353              	Slider_GetFingerHysteresis:
 354              	.LFB49:
 832:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
 833:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
 834:.\Generated_Source\PSoC4/Slider_CSHL.c **** /*******************************************************************************
 835:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Function Name: Slider_GetFingerHysteresis
 836:.\Generated_Source\PSoC4/Slider_CSHL.c **** ********************************************************************************
 837:.\Generated_Source\PSoC4/Slider_CSHL.c **** *
 838:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Summary:
 839:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  This function reads the Hysteresis value from the component.
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 22


 840:.\Generated_Source\PSoC4/Slider_CSHL.c **** *
 841:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Parameters:
 842:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  widget:  widget number.
 843:.\Generated_Source\PSoC4/Slider_CSHL.c **** *
 844:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Return:
 845:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  This API returns the Hysteresis of the widget indicated by the argument. 
 846:.\Generated_Source\PSoC4/Slider_CSHL.c **** *
 847:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Global Variables:
 848:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  Slider_hysteresis[] - This array contains the hysteresis value 
 849:.\Generated_Source\PSoC4/Slider_CSHL.c **** *   for each widget.
 850:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  Slider_widgetNumberSld - structure with dynamic sliders' parameters.
 851:.\Generated_Source\PSoC4/Slider_CSHL.c **** *
 852:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Side Effects:
 853:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  None
 854:.\Generated_Source\PSoC4/Slider_CSHL.c **** *
 855:.\Generated_Source\PSoC4/Slider_CSHL.c **** *******************************************************************************/
 856:.\Generated_Source\PSoC4/Slider_CSHL.c **** uint8 Slider_GetFingerHysteresis(uint32 widget)
 857:.\Generated_Source\PSoC4/Slider_CSHL.c **** {
 355              		.loc 1 857 0
 356              		.cfi_startproc
 357              	.LVL32:
 858:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	return(Slider_hysteresis[widget]);
 358              		.loc 1 858 0
 359 0000 014B     		ldr	r3, .L37
 360 0002 185C     		ldrb	r0, [r3, r0]
 361              	.LVL33:
 859:.\Generated_Source\PSoC4/Slider_CSHL.c **** }
 362              		.loc 1 859 0
 363              		@ sp needed
 364 0004 7047     		bx	lr
 365              	.L38:
 366 0006 C046     		.align	2
 367              	.L37:
 368 0008 00000000 		.word	Slider_hysteresis
 369              		.cfi_endproc
 370              	.LFE49:
 371              		.size	Slider_GetFingerHysteresis, .-Slider_GetFingerHysteresis
 372              		.section	.text.Slider_GetNegativeNoiseThreshold,"ax",%progbits
 373              		.align	2
 374              		.global	Slider_GetNegativeNoiseThreshold
 375              		.code	16
 376              		.thumb_func
 377              		.type	Slider_GetNegativeNoiseThreshold, %function
 378              	Slider_GetNegativeNoiseThreshold:
 379              	.LFB50:
 860:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
 861:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
 862:.\Generated_Source\PSoC4/Slider_CSHL.c **** /*******************************************************************************
 863:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Function Name: Slider_GetNegativeNoiseThreshold
 864:.\Generated_Source\PSoC4/Slider_CSHL.c **** ********************************************************************************
 865:.\Generated_Source\PSoC4/Slider_CSHL.c **** *
 866:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Summary:
 867:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  This function reads the negative noise threshold from the component.
 868:.\Generated_Source\PSoC4/Slider_CSHL.c **** *
 869:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Parameters: 
 870:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  None.
 871:.\Generated_Source\PSoC4/Slider_CSHL.c **** *
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 23


 872:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Return Value: 
 873:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  This API returns the negative noise threshold
 874:.\Generated_Source\PSoC4/Slider_CSHL.c **** *
 875:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Global Variables:
 876:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  Slider_negativeNoiseThreshold - This variable specifies the negative 
 877:.\Generated_Source\PSoC4/Slider_CSHL.c **** *   difference between the raw count and baseline levels for Baseline resetting
 878:.\Generated_Source\PSoC4/Slider_CSHL.c **** *   to the raw count level.
 879:.\Generated_Source\PSoC4/Slider_CSHL.c **** * 
 880:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Side Effects:
 881:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  None
 882:.\Generated_Source\PSoC4/Slider_CSHL.c **** *
 883:.\Generated_Source\PSoC4/Slider_CSHL.c **** *******************************************************************************/
 884:.\Generated_Source\PSoC4/Slider_CSHL.c **** uint8 Slider_GetNegativeNoiseThreshold(uint32 widget)
 885:.\Generated_Source\PSoC4/Slider_CSHL.c **** {
 380              		.loc 1 885 0
 381              		.cfi_startproc
 382              	.LVL34:
 886:.\Generated_Source\PSoC4/Slider_CSHL.c **** #if (Slider_TUNING_METHOD != Slider__TUNING_NONE)
 887:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	return(Slider_negativeNoiseThreshold[widget]);
 383              		.loc 1 887 0
 384 0000 014B     		ldr	r3, .L40
 385 0002 185C     		ldrb	r0, [r3, r0]
 386              	.LVL35:
 888:.\Generated_Source\PSoC4/Slider_CSHL.c **** #else
 889:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	return(Slider_NEGATIVE_NOISE_THRESHOLD);
 890:.\Generated_Source\PSoC4/Slider_CSHL.c **** #endif /* (Slider_TUNING_METHOD != Slider__TUNING_NONE) */ 
 891:.\Generated_Source\PSoC4/Slider_CSHL.c **** }
 387              		.loc 1 891 0
 388              		@ sp needed
 389 0004 7047     		bx	lr
 390              	.L41:
 391 0006 C046     		.align	2
 392              	.L40:
 393 0008 00000000 		.word	Slider_negativeNoiseThreshold
 394              		.cfi_endproc
 395              	.LFE50:
 396              		.size	Slider_GetNegativeNoiseThreshold, .-Slider_GetNegativeNoiseThreshold
 397              		.section	.text.Slider_SetFingerThreshold,"ax",%progbits
 398              		.align	2
 399              		.global	Slider_SetFingerThreshold
 400              		.code	16
 401              		.thumb_func
 402              		.type	Slider_SetFingerThreshold, %function
 403              	Slider_SetFingerThreshold:
 404              	.LFB51:
 892:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
 893:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
 894:.\Generated_Source\PSoC4/Slider_CSHL.c **** #if(Slider_TUNING_METHOD != Slider__TUNING_NONE)
 895:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	/*******************************************************************************
 896:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	* Function Name: Slider_SetFingerThreshold
 897:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	********************************************************************************
 898:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*
 899:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	* Summary:
 900:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*  This API sets the finger threshold value for a widget. 
 901:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*
 902:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	* Parameters: 
 903:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*  sensorNumber:  widget index. 
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 24


 904:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*  value:  Finger threshold value for the widget.
 905:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*
 906:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	* Return Value: 
 907:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*  None
 908:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*
 909:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	* Global Variables:
 910:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*  Slider_fingerThreshold[] - This array contains the level of signal 
 911:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*   for each widget that determines if a finger is present on the widget.
 912:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	* 
 913:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	* Side Effects:
 914:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*  None
 915:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*
 916:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*******************************************************************************/
 917:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	void Slider_SetFingerThreshold(uint32 widget, uint8 value)
 918:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	{	
 405              		.loc 1 918 0
 406              		.cfi_startproc
 407              	.LVL36:
 919:.\Generated_Source\PSoC4/Slider_CSHL.c **** 		Slider_fingerThreshold[widget] = value;
 408              		.loc 1 919 0
 409 0000 014B     		ldr	r3, .L43
 410 0002 1954     		strb	r1, [r3, r0]
 920:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	}
 411              		.loc 1 920 0
 412              		@ sp needed
 413 0004 7047     		bx	lr
 414              	.L44:
 415 0006 C046     		.align	2
 416              	.L43:
 417 0008 00000000 		.word	Slider_fingerThreshold
 418              		.cfi_endproc
 419              	.LFE51:
 420              		.size	Slider_SetFingerThreshold, .-Slider_SetFingerThreshold
 421              		.section	.text.Slider_SetNoiseThreshold,"ax",%progbits
 422              		.align	2
 423              		.global	Slider_SetNoiseThreshold
 424              		.code	16
 425              		.thumb_func
 426              		.type	Slider_SetNoiseThreshold, %function
 427              	Slider_SetNoiseThreshold:
 428              	.LFB52:
 921:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
 922:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
 923:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	/*******************************************************************************
 924:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	* Function Name: Slider_SetNoiseThreshold
 925:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	********************************************************************************
 926:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*
 927:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	* Summary:
 928:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*  This API sets the Noise Threshold value for each widget.
 929:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*
 930:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	* Parameters:
 931:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*  widget:  Sensor index number.
 932:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*  value:   Noise Threshold value for widget.
 933:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*
 934:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	* Return Value: 
 935:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*  None
 936:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 25


 937:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	* Global Variables:
 938:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*  Slider_noiseThreshold[] - This array contains the level of signal 
 939:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*   for each widget that determines the level of noise in the capacitive scan.
 940:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	* 
 941:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	* Side Effects:
 942:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*  None
 943:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*
 944:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*******************************************************************************/
 945:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	void Slider_SetNoiseThreshold(uint32 widget, uint8 value)
 946:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	{
 429              		.loc 1 946 0
 430              		.cfi_startproc
 431              	.LVL37:
 947:.\Generated_Source\PSoC4/Slider_CSHL.c **** 		Slider_noiseThreshold[widget] = value;
 432              		.loc 1 947 0
 433 0000 014B     		ldr	r3, .L46
 434 0002 1954     		strb	r1, [r3, r0]
 948:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	}
 435              		.loc 1 948 0
 436              		@ sp needed
 437 0004 7047     		bx	lr
 438              	.L47:
 439 0006 C046     		.align	2
 440              	.L46:
 441 0008 00000000 		.word	Slider_noiseThreshold
 442              		.cfi_endproc
 443              	.LFE52:
 444              		.size	Slider_SetNoiseThreshold, .-Slider_SetNoiseThreshold
 445              		.section	.text.Slider_SetFingerHysteresis,"ax",%progbits
 446              		.align	2
 447              		.global	Slider_SetFingerHysteresis
 448              		.code	16
 449              		.thumb_func
 450              		.type	Slider_SetFingerHysteresis, %function
 451              	Slider_SetFingerHysteresis:
 452              	.LFB53:
 949:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
 950:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
 951:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	/*******************************************************************************
 952:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	* Function Name: Slider_SetFingerHysteresis
 953:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	********************************************************************************
 954:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*
 955:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	* Summary:
 956:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*  This API sets the Hysteresis value of a widget
 957:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*
 958:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	* Parameters: 
 959:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*  value:  Hysteresis value for widgets.
 960:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*  widget:  widget number
 961:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*
 962:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	* Return Value: 
 963:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*  None
 964:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*
 965:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	* Global Variables:
 966:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*  Slider_hysteresis[] - This array contains the hysteresis value for each widget.
 967:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*  Slider_widgetNumberSld - structure with dynamic sliders' parameters.
 968:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*
 969:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	* Side Effects:
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 26


 970:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*  None
 971:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*
 972:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*******************************************************************************/
 973:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	void Slider_SetFingerHysteresis(uint32 widget, uint8 value)
 974:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	{
 453              		.loc 1 974 0
 454              		.cfi_startproc
 455              	.LVL38:
 975:.\Generated_Source\PSoC4/Slider_CSHL.c **** 		Slider_hysteresis[widget] = value;
 456              		.loc 1 975 0
 457 0000 014B     		ldr	r3, .L49
 458 0002 1954     		strb	r1, [r3, r0]
 976:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	}
 459              		.loc 1 976 0
 460              		@ sp needed
 461 0004 7047     		bx	lr
 462              	.L50:
 463 0006 C046     		.align	2
 464              	.L49:
 465 0008 00000000 		.word	Slider_hysteresis
 466              		.cfi_endproc
 467              	.LFE53:
 468              		.size	Slider_SetFingerHysteresis, .-Slider_SetFingerHysteresis
 469              		.section	.text.Slider_SetNegativeNoiseThreshold,"ax",%progbits
 470              		.align	2
 471              		.global	Slider_SetNegativeNoiseThreshold
 472              		.code	16
 473              		.thumb_func
 474              		.type	Slider_SetNegativeNoiseThreshold, %function
 475              	Slider_SetNegativeNoiseThreshold:
 476              	.LFB54:
 977:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
 978:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
 979:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	/*******************************************************************************
 980:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	* Function Name: Slider_SetNegativeNoiseThreshold
 981:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	********************************************************************************
 982:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*
 983:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	* Summary:
 984:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*  This API sets the Negative Noise Threshold value of a widget
 985:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*
 986:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	* Parameters: 
 987:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*  value:  Negative Noise Threshold value for widgets.
 988:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*  widget: widget number
 989:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*
 990:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	* Return Value: 
 991:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*  None
 992:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*
 993:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	* Global Variables:
 994:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*  Slider_negativeNoiseThreshold  - This parameter specifies the negative 
 995:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*   difference between the raw count and baseline levels for Baseline resetting to 
 996:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*   the raw count level.
 997:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	* 
 998:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	* Side Effects:
 999:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*  None
1000:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*
1001:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*******************************************************************************/
1002:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	void Slider_SetNegativeNoiseThreshold(uint32 widget, uint8 value)
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 27


1003:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	{
 477              		.loc 1 1003 0
 478              		.cfi_startproc
 479              	.LVL39:
1004:.\Generated_Source\PSoC4/Slider_CSHL.c **** 		Slider_negativeNoiseThreshold[widget] = value;
 480              		.loc 1 1004 0
 481 0000 014B     		ldr	r3, .L52
 482 0002 1954     		strb	r1, [r3, r0]
1005:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	}
 483              		.loc 1 1005 0
 484              		@ sp needed
 485 0004 7047     		bx	lr
 486              	.L53:
 487 0006 C046     		.align	2
 488              	.L52:
 489 0008 00000000 		.word	Slider_negativeNoiseThreshold
 490              		.cfi_endproc
 491              	.LFE54:
 492              		.size	Slider_SetNegativeNoiseThreshold, .-Slider_SetNegativeNoiseThreshold
 493              		.section	.text.Slider_SetDebounce,"ax",%progbits
 494              		.align	2
 495              		.global	Slider_SetDebounce
 496              		.code	16
 497              		.thumb_func
 498              		.type	Slider_SetDebounce, %function
 499              	Slider_SetDebounce:
 500              	.LFB55:
1006:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
1007:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
1008:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	/*******************************************************************************
1009:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	* Function Name: Slider_SetDebounce
1010:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	********************************************************************************
1011:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*
1012:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	* Summary:
1013:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*  This API sets the debounce value for a widget.
1014:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*
1015:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	* Parameters: 
1016:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*  value:  Debounce value for widget.
1017:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*  widget: widget index.
1018:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*
1019:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	* Return Value: 
1020:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*  None
1021:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*
1022:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	* Global Variables:
1023:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*  Slider_debounce[] - This array contains the debounce value for each widget.
1024:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*  Slider_widgetNumberSld - structure with dynamic sliders' parameters.
1025:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*
1026:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	* Side Effects:
1027:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*  None
1028:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*
1029:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*******************************************************************************/
1030:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	void Slider_SetDebounce(uint32 widget, uint8 value)
1031:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	{
 501              		.loc 1 1031 0
 502              		.cfi_startproc
 503              	.LVL40:
1032:.\Generated_Source\PSoC4/Slider_CSHL.c **** 		Slider_debounce[widget] = value;
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 28


 504              		.loc 1 1032 0
 505 0000 014B     		ldr	r3, .L55
 506 0002 1954     		strb	r1, [r3, r0]
1033:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	}
 507              		.loc 1 1033 0
 508              		@ sp needed
 509 0004 7047     		bx	lr
 510              	.L56:
 511 0006 C046     		.align	2
 512              	.L55:
 513 0008 00000000 		.word	.LANCHOR1
 514              		.cfi_endproc
 515              	.LFE55:
 516              		.size	Slider_SetDebounce, .-Slider_SetDebounce
 517              		.section	.text.Slider_SetLowBaselineReset,"ax",%progbits
 518              		.align	2
 519              		.global	Slider_SetLowBaselineReset
 520              		.code	16
 521              		.thumb_func
 522              		.type	Slider_SetLowBaselineReset, %function
 523              	Slider_SetLowBaselineReset:
 524              	.LFB56:
1034:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
1035:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
1036:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	/*******************************************************************************
1037:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	* Function Name: Slider_SetLowBaselineReset
1038:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	********************************************************************************
1039:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*
1040:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	* Summary:
1041:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*  This API sets the low baseline reset threshold value for the sensor.
1042:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*
1043:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	* Parameters: 
1044:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*  value: low baseline reset threshold value.
1045:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*  sensor: Sensor index.
1046:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*
1047:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	* Return Value: 
1048:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*  None
1049:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*
1050:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	* Global Variables:
1051:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*  Slider_lowBaselineReset[] - This array contains the Baseline update 
1052:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*  threshold value for each sensor.
1053:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	* 
1054:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	* Side Effects:
1055:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*  None
1056:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*
1057:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*******************************************************************************/
1058:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	void Slider_SetLowBaselineReset(uint32 sensor, uint8 value)
1059:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	{
 525              		.loc 1 1059 0
 526              		.cfi_startproc
 527              	.LVL41:
1060:.\Generated_Source\PSoC4/Slider_CSHL.c **** 		Slider_lowBaselineReset[sensor] = value;
 528              		.loc 1 1060 0
 529 0000 014B     		ldr	r3, .L58
 530 0002 1818     		add	r0, r3, r0
 531              	.LVL42:
 532 0004 0171     		strb	r1, [r0, #4]
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 29


1061:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	}
 533              		.loc 1 1061 0
 534              		@ sp needed
 535 0006 7047     		bx	lr
 536              	.L59:
 537              		.align	2
 538              	.L58:
 539 0008 00000000 		.word	.LANCHOR1
 540              		.cfi_endproc
 541              	.LFE56:
 542              		.size	Slider_SetLowBaselineReset, .-Slider_SetLowBaselineReset
 543              		.section	.text.Slider_CheckIsSensorActive,"ax",%progbits
 544              		.align	2
 545              		.global	Slider_CheckIsSensorActive
 546              		.code	16
 547              		.thumb_func
 548              		.type	Slider_CheckIsSensorActive, %function
 549              	Slider_CheckIsSensorActive:
 550              	.LFB57:
1062:.\Generated_Source\PSoC4/Slider_CSHL.c **** #endif /* (Slider_TUNING_METHOD != Slider__TUNING_NONE) */
1063:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
1064:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
1065:.\Generated_Source\PSoC4/Slider_CSHL.c **** /*******************************************************************************
1066:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Function Name: Slider_CheckIsSensorActive
1067:.\Generated_Source\PSoC4/Slider_CSHL.c **** ********************************************************************************
1068:.\Generated_Source\PSoC4/Slider_CSHL.c **** *
1069:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Summary:
1070:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  Compares the Slider_sensorSignal[sensor] array element to the finger
1071:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  threshold of the widget it belongs to. The hysteresis and debounce are taken into 
1072:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  account. The hysteresis is added or subtracted from the finger threshold 
1073:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  based on whether the sensor is currently active. 
1074:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  If the sensor is active, the threshold is lowered by the hysteresis amount.
1075:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  If the sensor is inactive, the threshold is raised by the hysteresis amount.
1076:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  The debounce counter is added to the sensor active transition.
1077:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  This function updates the Slider_sensorOnMask[] array element.
1078:.\Generated_Source\PSoC4/Slider_CSHL.c **** *
1079:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Parameters:
1080:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  sensor:  Sensor number.
1081:.\Generated_Source\PSoC4/Slider_CSHL.c **** *
1082:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Return:
1083:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  Returns sensor state 1 if active, 0 if not active.
1084:.\Generated_Source\PSoC4/Slider_CSHL.c **** *
1085:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Global Variables:
1086:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  Slider_sensorSignal[] - used to store the difference between 
1087:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  the current value of raw data and a previous value of the baseline.
1088:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  Slider_debounceCounter[]   - used to store the current debounce 
1089:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  counter of the sensor. the widget which have this parameter are buttons, matrix 
1090:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  buttons, proximity, and guard. All other widgets don't have the  debounce parameter
1091:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  and use the last element of this array with value 0 (it means no debounce).
1092:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  Slider_sensorOnMask[] - used to store the sensors on/off state.
1093:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  Slider_sensorOnMask[0] contains the masked bits for sensors 
1094:.\Generated_Source\PSoC4/Slider_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1095:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  Slider_sensorEnableMask[1] contains the masked bits for 
1096:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1097:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  0 - sensor is inactive.
1098:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  1 - sensor is active.
1099:.\Generated_Source\PSoC4/Slider_CSHL.c **** * 
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 30


1100:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Side Effects:
1101:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  None
1102:.\Generated_Source\PSoC4/Slider_CSHL.c **** *
1103:.\Generated_Source\PSoC4/Slider_CSHL.c **** *******************************************************************************/
1104:.\Generated_Source\PSoC4/Slider_CSHL.c **** uint32 Slider_CheckIsSensorActive(uint32 sensor)
1105:.\Generated_Source\PSoC4/Slider_CSHL.c **** {	
 551              		.loc 1 1105 0
 552              		.cfi_startproc
 553              	.LVL43:
 554 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 555              		.cfi_def_cfa_offset 24
 556              		.cfi_offset 3, -24
 557              		.cfi_offset 4, -20
 558              		.cfi_offset 5, -16
 559              		.cfi_offset 6, -12
 560              		.cfi_offset 7, -8
 561              		.cfi_offset 14, -4
 562 0002 041C     		mov	r4, r0
1106:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	uint8 widget;
1107:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	uint8 debounce;
1108:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	uint8 debounceIndex;
1109:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
1110:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	uint8 fingerThreshold;
1111:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	uint8 hysteresis;
1112:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	static uint8 Slider_debounceCounter[] = {
1113:.\Generated_Source\PSoC4/Slider_CSHL.c ****     0u, 
1114:.\Generated_Source\PSoC4/Slider_CSHL.c **** };
1115:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
1116:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
1117:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	
1118:.\Generated_Source\PSoC4/Slider_CSHL.c ****     /* Prepare to find debounce counter index */
1119:.\Generated_Source\PSoC4/Slider_CSHL.c ****     widget = Slider_widgetNumber[sensor];
 563              		.loc 1 1119 0
 564 0004 204B     		ldr	r3, .L66
 565 0006 1B5C     		ldrb	r3, [r3, r0]
 566              	.LVL44:
1120:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	
1121:.\Generated_Source\PSoC4/Slider_CSHL.c ****     fingerThreshold = Slider_fingerThreshold[widget];
 567              		.loc 1 1121 0
 568 0008 204A     		ldr	r2, .L66+4
 569 000a D65C     		ldrb	r6, [r2, r3]
 570              	.LVL45:
1122:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	hysteresis = Slider_hysteresis[widget];
 571              		.loc 1 1122 0
 572 000c 204A     		ldr	r2, .L66+8
 573              	.LVL46:
 574 000e D55C     		ldrb	r5, [r2, r3]
 575              	.LVL47:
1123:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	debounce = Slider_debounce[widget];	
 576              		.loc 1 1123 0
 577 0010 204A     		ldr	r2, .L66+12
 578              	.LVL48:
 579 0012 D75C     		ldrb	r7, [r2, r3]
 580              	.LVL49:
1124:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	
1125:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	    debounceIndex = Slider_UNUSED_DEBOUNCE_COUNTER_INDEX;
1126:.\Generated_Source\PSoC4/Slider_CSHL.c ****     Slider_debounceCounter[debounceIndex] = 1u;
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 31


 581              		.loc 1 1126 0
 582 0014 2048     		ldr	r0, .L66+16
 583              	.LVL50:
 584 0016 0123     		mov	r3, #1
 585              	.LVL51:
 586 0018 0377     		strb	r3, [r0, #28]
1127:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
1128:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	
1129:.\Generated_Source\PSoC4/Slider_CSHL.c ****     /* Was on */
1130:.\Generated_Source\PSoC4/Slider_CSHL.c ****     if (0u != Slider_GetBitValue(Slider_sensorOnMask, sensor))
 587              		.loc 1 1130 0
 588 001a 2030     		add	r0, r0, #32
 589 001c 211C     		mov	r1, r4
 590 001e FFF7FEFF 		bl	Slider_GetBitValue
 591              	.LVL52:
 592 0022 0028     		cmp	r0, #0
 593 0024 0ED0     		beq	.L61
1131:.\Generated_Source\PSoC4/Slider_CSHL.c ****     {
1132:.\Generated_Source\PSoC4/Slider_CSHL.c ****         /* Hysteresis minus */
1133:.\Generated_Source\PSoC4/Slider_CSHL.c ****         if (Slider_sensorSignal[sensor] < (fingerThreshold - hysteresis))
 594              		.loc 1 1133 0
 595 0026 1C4B     		ldr	r3, .L66+16
 596 0028 1B19     		add	r3, r3, r4
 597 002a 1B7D     		ldrb	r3, [r3, #20]
 598 002c 751B     		sub	r5, r6, r5
 599              	.LVL53:
 600 002e AB42     		cmp	r3, r5
 601 0030 1EDA     		bge	.L62
1134:.\Generated_Source\PSoC4/Slider_CSHL.c ****         {
1135:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	   		Slider_SetBitValue(Slider_sensorOnMask, sensor, 0u);
 602              		.loc 1 1135 0
 603 0032 194D     		ldr	r5, .L66+16
 604 0034 281C     		mov	r0, r5
 605 0036 2030     		add	r0, r0, #32
 606 0038 211C     		mov	r1, r4
 607 003a 0022     		mov	r2, #0
 608 003c FFF7FEFF 		bl	Slider_SetBitValue
 609              	.LVL54:
1136:.\Generated_Source\PSoC4/Slider_CSHL.c **** 			/* Sensor inactive - reset Debounce counter */
1137:.\Generated_Source\PSoC4/Slider_CSHL.c ****             Slider_debounceCounter[debounceIndex] = debounce;
 610              		.loc 1 1137 0
 611 0040 2F77     		strb	r7, [r5, #28]
 612 0042 15E0     		b	.L62
 613              	.LVL55:
 614              	.L61:
1138:.\Generated_Source\PSoC4/Slider_CSHL.c ****         }
1139:.\Generated_Source\PSoC4/Slider_CSHL.c ****     }
1140:.\Generated_Source\PSoC4/Slider_CSHL.c ****     else    /* Was off */
1141:.\Generated_Source\PSoC4/Slider_CSHL.c ****     {
1142:.\Generated_Source\PSoC4/Slider_CSHL.c ****         /* Hysteresis plus */
1143:.\Generated_Source\PSoC4/Slider_CSHL.c ****         if (Slider_sensorSignal[sensor] >= (fingerThreshold + hysteresis))
 615              		.loc 1 1143 0
 616 0044 144B     		ldr	r3, .L66+16
 617 0046 1B19     		add	r3, r3, r4
 618 0048 1B7D     		ldrb	r3, [r3, #20]
 619 004a 7519     		add	r5, r6, r5
 620              	.LVL56:
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 32


 621 004c AB42     		cmp	r3, r5
 622 004e 0DDB     		blt	.L63
1144:.\Generated_Source\PSoC4/Slider_CSHL.c ****         {
1145:.\Generated_Source\PSoC4/Slider_CSHL.c **** 			Slider_debounceCounter[debounceIndex]--;
 623              		.loc 1 1145 0
 624 0050 114A     		ldr	r2, .L66+16
 625 0052 137F     		ldrb	r3, [r2, #28]
 626 0054 013B     		sub	r3, r3, #1
 627 0056 DBB2     		uxtb	r3, r3
 628 0058 1377     		strb	r3, [r2, #28]
1146:.\Generated_Source\PSoC4/Slider_CSHL.c ****             /* Sensor active, decrement debounce counter */
1147:.\Generated_Source\PSoC4/Slider_CSHL.c ****             if(Slider_debounceCounter[debounceIndex] == 0u)
 629              		.loc 1 1147 0
 630 005a 002B     		cmp	r3, #0
 631 005c 08D1     		bne	.L62
1148:.\Generated_Source\PSoC4/Slider_CSHL.c ****             {
1149:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 Slider_SetBitValue(Slider_sensorOnMask, sensor, 1u); 
 632              		.loc 1 1149 0
 633 005e 101C     		mov	r0, r2
 634 0060 2030     		add	r0, r0, #32
 635 0062 211C     		mov	r1, r4
 636 0064 0122     		mov	r2, #1
 637 0066 FFF7FEFF 		bl	Slider_SetBitValue
 638              	.LVL57:
 639 006a 01E0     		b	.L62
 640              	.L63:
1150:.\Generated_Source\PSoC4/Slider_CSHL.c ****             }
1151:.\Generated_Source\PSoC4/Slider_CSHL.c ****         }
1152:.\Generated_Source\PSoC4/Slider_CSHL.c ****         else
1153:.\Generated_Source\PSoC4/Slider_CSHL.c ****         {
1154:.\Generated_Source\PSoC4/Slider_CSHL.c ****             /* Sensor inactive - reset Debounce counter */
1155:.\Generated_Source\PSoC4/Slider_CSHL.c ****             Slider_debounceCounter[debounceIndex] = debounce;
 641              		.loc 1 1155 0
 642 006c 0A4B     		ldr	r3, .L66+16
 643 006e 1F77     		strb	r7, [r3, #28]
 644              	.L62:
1156:.\Generated_Source\PSoC4/Slider_CSHL.c ****         }
1157:.\Generated_Source\PSoC4/Slider_CSHL.c ****     }
1158:.\Generated_Source\PSoC4/Slider_CSHL.c ****     
1159:.\Generated_Source\PSoC4/Slider_CSHL.c ****     return ((uint32)((0u != Slider_GetBitValue(Slider_sensorOnMask, sensor)) ? 1u : 0u));
 645              		.loc 1 1159 0
 646 0070 0948     		ldr	r0, .L66+16
 647 0072 2030     		add	r0, r0, #32
 648 0074 211C     		mov	r1, r4
 649 0076 FFF7FEFF 		bl	Slider_GetBitValue
 650              	.LVL58:
 651 007a 0028     		cmp	r0, #0
 652 007c 01D0     		beq	.L65
 653 007e 0120     		mov	r0, #1
 654 0080 00E0     		b	.L64
 655              	.L65:
 656 0082 0020     		mov	r0, #0
 657              	.L64:
1160:.\Generated_Source\PSoC4/Slider_CSHL.c **** }
 658              		.loc 1 1160 0 discriminator 3
 659              		@ sp needed
 660              	.LVL59:
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 33


 661              	.LVL60:
 662              	.LVL61:
 663 0084 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 664              	.L67:
 665 0086 C046     		.align	2
 666              	.L66:
 667 0088 00000000 		.word	Slider_widgetNumber
 668 008c 00000000 		.word	Slider_fingerThreshold
 669 0090 00000000 		.word	Slider_hysteresis
 670 0094 00000000 		.word	.LANCHOR1
 671 0098 00000000 		.word	.LANCHOR0
 672              		.cfi_endproc
 673              	.LFE57:
 674              		.size	Slider_CheckIsSensorActive, .-Slider_CheckIsSensorActive
 675              		.section	.text.Slider_CheckIsWidgetActive,"ax",%progbits
 676              		.align	2
 677              		.global	Slider_CheckIsWidgetActive
 678              		.code	16
 679              		.thumb_func
 680              		.type	Slider_CheckIsWidgetActive, %function
 681              	Slider_CheckIsWidgetActive:
 682              	.LFB58:
1161:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
1162:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
1163:.\Generated_Source\PSoC4/Slider_CSHL.c **** /*******************************************************************************
1164:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Function Name: Slider_CheckIsWidgetActive
1165:.\Generated_Source\PSoC4/Slider_CSHL.c **** ********************************************************************************
1166:.\Generated_Source\PSoC4/Slider_CSHL.c **** *
1167:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Summary:
1168:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  Compares the CapSense_sensorSignal[] array element to the finger threshold of 
1169:.\Generated_Source\PSoC4/Slider_CSHL.c **** * the widget it belongs to. The hysteresis and debounce are taken into account. 
1170:.\Generated_Source\PSoC4/Slider_CSHL.c **** * The hysteresis is added or subtracted from the finger threshold based on whether
1171:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  the sensor is currently active. If the sensor is active, the threshold is 
1172:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  lowered by the hysteresis amount. If the sensor is inactive, the threshold 
1173:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  is raised by the hysteresis amount. 
1174:.\Generated_Source\PSoC4/Slider_CSHL.c **** * The debounce counter added to the sensor active transition. 
1175:.\Generated_Source\PSoC4/Slider_CSHL.c **** * This function updates CapSense_sensorOnMask[] array element
1176:.\Generated_Source\PSoC4/Slider_CSHL.c **** *
1177:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Parameters:
1178:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  widget:  widget number.
1179:.\Generated_Source\PSoC4/Slider_CSHL.c **** *
1180:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Return:
1181:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  Returns widget sensor state 1 if one or more sensors within widget is/are 
1182:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  active, 0 if all sensors within widget are inactive.
1183:.\Generated_Source\PSoC4/Slider_CSHL.c **** *
1184:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Global Variables:
1185:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  rawDataIndex[]: Contains the  1st sensor position in the widget
1186:.\Generated_Source\PSoC4/Slider_CSHL.c **** * 
1187:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Side Effects:
1188:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  None
1189:.\Generated_Source\PSoC4/Slider_CSHL.c **** *
1190:.\Generated_Source\PSoC4/Slider_CSHL.c **** *******************************************************************************/
1191:.\Generated_Source\PSoC4/Slider_CSHL.c **** uint32 Slider_CheckIsWidgetActive(uint32 widget)
1192:.\Generated_Source\PSoC4/Slider_CSHL.c **** {
 683              		.loc 1 1192 0
 684              		.cfi_startproc
 685              	.LVL62:
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 34


 686 0000 70B5     		push	{r4, r5, r6, lr}
 687              		.cfi_def_cfa_offset 16
 688              		.cfi_offset 4, -16
 689              		.cfi_offset 5, -12
 690              		.cfi_offset 6, -8
 691              		.cfi_offset 14, -4
 692              	.LVL63:
1193:.\Generated_Source\PSoC4/Slider_CSHL.c ****     uint32 rawIndex = (uint32)Slider_rawDataIndex[widget];
1194:.\Generated_Source\PSoC4/Slider_CSHL.c ****     uint32 numOfSensors = (uint32)Slider_numberOfSensors[widget] + rawIndex;
1195:.\Generated_Source\PSoC4/Slider_CSHL.c ****     uint32 state = 0u;
 693              		.loc 1 1195 0
 694 0002 0025     		mov	r5, #0
1193:.\Generated_Source\PSoC4/Slider_CSHL.c ****     uint32 rawIndex = (uint32)Slider_rawDataIndex[widget];
 695              		.loc 1 1193 0
 696 0004 0024     		mov	r4, #0
1196:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
1197:.\Generated_Source\PSoC4/Slider_CSHL.c ****     /* Check all sensors of widget */
1198:.\Generated_Source\PSoC4/Slider_CSHL.c ****     do
1199:.\Generated_Source\PSoC4/Slider_CSHL.c ****     {
1200:.\Generated_Source\PSoC4/Slider_CSHL.c ****         if(Slider_CheckIsSensorActive((uint32)rawIndex) != 0u)
1201:.\Generated_Source\PSoC4/Slider_CSHL.c ****         {
1202:.\Generated_Source\PSoC4/Slider_CSHL.c ****             state = Slider_SENSOR_IS_ACTIVE;
 697              		.loc 1 1202 0
 698 0006 0126     		mov	r6, #1
 699              	.LVL64:
 700              	.L70:
1200:.\Generated_Source\PSoC4/Slider_CSHL.c ****         if(Slider_CheckIsSensorActive((uint32)rawIndex) != 0u)
 701              		.loc 1 1200 0
 702 0008 201C     		mov	r0, r4
 703 000a FFF7FEFF 		bl	Slider_CheckIsSensorActive
 704              	.LVL65:
 705 000e 0028     		cmp	r0, #0
 706 0010 00D0     		beq	.L69
 707              		.loc 1 1202 0
 708 0012 351C     		mov	r5, r6
 709              	.LVL66:
 710              	.L69:
1203:.\Generated_Source\PSoC4/Slider_CSHL.c ****         }
1204:.\Generated_Source\PSoC4/Slider_CSHL.c ****         rawIndex++;
 711              		.loc 1 1204 0
 712 0014 0134     		add	r4, r4, #1
 713              	.LVL67:
1205:.\Generated_Source\PSoC4/Slider_CSHL.c ****     }
1206:.\Generated_Source\PSoC4/Slider_CSHL.c ****     while(rawIndex < numOfSensors);
 714              		.loc 1 1206 0
 715 0016 042C     		cmp	r4, #4
 716 0018 F6D9     		bls	.L70
1207:.\Generated_Source\PSoC4/Slider_CSHL.c ****     
1208:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
1209:.\Generated_Source\PSoC4/Slider_CSHL.c ****     
1210:.\Generated_Source\PSoC4/Slider_CSHL.c ****     return state;
1211:.\Generated_Source\PSoC4/Slider_CSHL.c **** }
 717              		.loc 1 1211 0
 718 001a 281C     		mov	r0, r5
 719              		@ sp needed
 720              	.LVL68:
 721              	.LVL69:
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 35


 722 001c 70BD     		pop	{r4, r5, r6, pc}
 723              		.cfi_endproc
 724              	.LFE58:
 725              		.size	Slider_CheckIsWidgetActive, .-Slider_CheckIsWidgetActive
 726 001e C046     		.section	.text.Slider_CheckIsAnyWidgetActive,"ax",%progbits
 727              		.align	2
 728              		.global	Slider_CheckIsAnyWidgetActive
 729              		.code	16
 730              		.thumb_func
 731              		.type	Slider_CheckIsAnyWidgetActive, %function
 732              	Slider_CheckIsAnyWidgetActive:
 733              	.LFB59:
1212:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
1213:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
1214:.\Generated_Source\PSoC4/Slider_CSHL.c **** /*******************************************************************************
1215:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Function Name: Slider_CheckIsAnyWidgetActive
1216:.\Generated_Source\PSoC4/Slider_CSHL.c **** ********************************************************************************
1217:.\Generated_Source\PSoC4/Slider_CSHL.c **** *
1218:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Summary:
1219:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  Compares all the sensors of the Slider_Signal[] array to their finger 
1220:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  threshold. Calls Slider_CheckIsWidgetActive() for each widget so 
1221:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  the Slider_sensorOnMask[] array is up to date after calling this 
1222:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  function.
1223:.\Generated_Source\PSoC4/Slider_CSHL.c **** *
1224:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Parameters:
1225:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  widget:  widget number.
1226:.\Generated_Source\PSoC4/Slider_CSHL.c **** *
1227:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Return:
1228:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  Returns 1 if any widget is active, 0 none of widgets are active.
1229:.\Generated_Source\PSoC4/Slider_CSHL.c **** *
1230:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Global Variables:
1231:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  None
1232:.\Generated_Source\PSoC4/Slider_CSHL.c **** * 
1233:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Side Effects:
1234:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  None
1235:.\Generated_Source\PSoC4/Slider_CSHL.c **** *
1236:.\Generated_Source\PSoC4/Slider_CSHL.c **** *******************************************************************************/
1237:.\Generated_Source\PSoC4/Slider_CSHL.c **** uint32 Slider_CheckIsAnyWidgetActive(void)
1238:.\Generated_Source\PSoC4/Slider_CSHL.c **** {
 734              		.loc 1 1238 0
 735              		.cfi_startproc
 736 0000 70B5     		push	{r4, r5, r6, lr}
 737              		.cfi_def_cfa_offset 16
 738              		.cfi_offset 4, -16
 739              		.cfi_offset 5, -12
 740              		.cfi_offset 6, -8
 741              		.cfi_offset 14, -4
 742              	.LVL70:
1239:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
1240:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	    uint32 i;
1241:.\Generated_Source\PSoC4/Slider_CSHL.c ****     uint32 state = 0u;
 743              		.loc 1 1241 0
 744 0002 0025     		mov	r5, #0
1242:.\Generated_Source\PSoC4/Slider_CSHL.c ****     
1243:.\Generated_Source\PSoC4/Slider_CSHL.c ****     for(i = 0u; i < Slider_TOTAL_WIDGET_COUNT; i++)
 745              		.loc 1 1243 0
 746 0004 0024     		mov	r4, #0
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 36


1244:.\Generated_Source\PSoC4/Slider_CSHL.c ****     {
1245:.\Generated_Source\PSoC4/Slider_CSHL.c ****         if (Slider_CheckIsWidgetActive(i) != 0u)
1246:.\Generated_Source\PSoC4/Slider_CSHL.c ****         {
1247:.\Generated_Source\PSoC4/Slider_CSHL.c ****             state = Slider_WIDGET_IS_ACTIVE;
 747              		.loc 1 1247 0
 748 0006 0126     		mov	r6, #1
1243:.\Generated_Source\PSoC4/Slider_CSHL.c ****     for(i = 0u; i < Slider_TOTAL_WIDGET_COUNT; i++)
 749              		.loc 1 1243 0
 750 0008 06E0     		b	.L74
 751              	.LVL71:
 752              	.L76:
1245:.\Generated_Source\PSoC4/Slider_CSHL.c ****         if (Slider_CheckIsWidgetActive(i) != 0u)
 753              		.loc 1 1245 0
 754 000a 201C     		mov	r0, r4
 755 000c FFF7FEFF 		bl	Slider_CheckIsWidgetActive
 756              	.LVL72:
 757 0010 0028     		cmp	r0, #0
 758 0012 00D0     		beq	.L75
 759              		.loc 1 1247 0
 760 0014 351C     		mov	r5, r6
 761              	.LVL73:
 762              	.L75:
1243:.\Generated_Source\PSoC4/Slider_CSHL.c ****     for(i = 0u; i < Slider_TOTAL_WIDGET_COUNT; i++)
 763              		.loc 1 1243 0
 764 0016 0134     		add	r4, r4, #1
 765              	.LVL74:
 766              	.L74:
1243:.\Generated_Source\PSoC4/Slider_CSHL.c ****     for(i = 0u; i < Slider_TOTAL_WIDGET_COUNT; i++)
 767              		.loc 1 1243 0 is_stmt 0 discriminator 1
 768 0018 002C     		cmp	r4, #0
 769 001a F6D0     		beq	.L76
1248:.\Generated_Source\PSoC4/Slider_CSHL.c ****         }
1249:.\Generated_Source\PSoC4/Slider_CSHL.c ****     }
1250:.\Generated_Source\PSoC4/Slider_CSHL.c ****     
1251:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
1252:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
1253:.\Generated_Source\PSoC4/Slider_CSHL.c ****     return state;
1254:.\Generated_Source\PSoC4/Slider_CSHL.c **** }
 770              		.loc 1 1254 0 is_stmt 1
 771 001c 281C     		mov	r0, r5
 772              		@ sp needed
 773              	.LVL75:
 774              	.LVL76:
 775 001e 70BD     		pop	{r4, r5, r6, pc}
 776              		.cfi_endproc
 777              	.LFE59:
 778              		.size	Slider_CheckIsAnyWidgetActive, .-Slider_CheckIsAnyWidgetActive
 779              		.section	.text.Slider_EnableWidget,"ax",%progbits
 780              		.align	2
 781              		.global	Slider_EnableWidget
 782              		.code	16
 783              		.thumb_func
 784              		.type	Slider_EnableWidget, %function
 785              	Slider_EnableWidget:
 786              	.LFB60:
1255:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
1256:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 37


1257:.\Generated_Source\PSoC4/Slider_CSHL.c **** /*******************************************************************************
1258:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Function Name: Slider_EnableWidget
1259:.\Generated_Source\PSoC4/Slider_CSHL.c **** ********************************************************************************
1260:.\Generated_Source\PSoC4/Slider_CSHL.c **** *
1261:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Summary:
1262:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  Enables all the widget elements (sensors) to the scanning process.
1263:.\Generated_Source\PSoC4/Slider_CSHL.c **** *
1264:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Parameters:
1265:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  widget:  widget number.
1266:.\Generated_Source\PSoC4/Slider_CSHL.c **** *
1267:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Return:
1268:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  None
1269:.\Generated_Source\PSoC4/Slider_CSHL.c **** *
1270:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Global Variables:
1271:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  Slider_sensorEnableMask[] - used to store the sensor scanning 
1272:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  state.
1273:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  Slider_sensorEnableMask[0] contains the masked bits for sensors 
1274:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1275:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  Slider_sensorEnableMask[1] contains the masked bits for 
1276:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1277:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  0 - sensor doesn't scan by Slider_ScanEnabledWidgets().
1278:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  1 - sensor scans by Slider_ScanEnabledWidgets().
1279:.\Generated_Source\PSoC4/Slider_CSHL.c **** * 
1280:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Side Effects:
1281:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  None
1282:.\Generated_Source\PSoC4/Slider_CSHL.c **** *
1283:.\Generated_Source\PSoC4/Slider_CSHL.c **** *******************************************************************************/
1284:.\Generated_Source\PSoC4/Slider_CSHL.c **** void Slider_EnableWidget(uint32 widget)
1285:.\Generated_Source\PSoC4/Slider_CSHL.c **** {
 787              		.loc 1 1285 0
 788              		.cfi_startproc
 789              	.LVL77:
 790 0000 38B5     		push	{r3, r4, r5, lr}
 791              		.cfi_def_cfa_offset 16
 792              		.cfi_offset 3, -16
 793              		.cfi_offset 4, -12
 794              		.cfi_offset 5, -8
 795              		.cfi_offset 14, -4
 796              	.LVL78:
1286:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
1287:.\Generated_Source\PSoC4/Slider_CSHL.c ****     uint8 rawIndex = Slider_rawDataIndex[widget];
 797              		.loc 1 1287 0
 798 0002 0024     		mov	r4, #0
1288:.\Generated_Source\PSoC4/Slider_CSHL.c ****     uint8 numOfSensors = Slider_numberOfSensors[widget] + rawIndex;
1289:.\Generated_Source\PSoC4/Slider_CSHL.c ****     
1290:.\Generated_Source\PSoC4/Slider_CSHL.c ****     /* Enable all sensors of widget */
1291:.\Generated_Source\PSoC4/Slider_CSHL.c ****     do
1292:.\Generated_Source\PSoC4/Slider_CSHL.c ****     {
1293:.\Generated_Source\PSoC4/Slider_CSHL.c ****         Slider_SetBitValue(Slider_sensorEnableMask, (uint32)rawIndex, 1u);
 799              		.loc 1 1293 0
 800 0004 054D     		ldr	r5, .L81
 801              	.LVL79:
 802              	.L79:
 803              		.loc 1 1293 0 is_stmt 0 discriminator 1
 804 0006 281C     		mov	r0, r5
 805 0008 211C     		mov	r1, r4
 806 000a 0122     		mov	r2, #1
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 38


 807 000c FFF7FEFF 		bl	Slider_SetBitValue
 808              	.LVL80:
1294:.\Generated_Source\PSoC4/Slider_CSHL.c ****         rawIndex++;
 809              		.loc 1 1294 0 is_stmt 1 discriminator 1
 810 0010 0134     		add	r4, r4, #1
 811              	.LVL81:
 812 0012 E4B2     		uxtb	r4, r4
 813              	.LVL82:
1295:.\Generated_Source\PSoC4/Slider_CSHL.c ****     }
1296:.\Generated_Source\PSoC4/Slider_CSHL.c ****     while(rawIndex < numOfSensors);
 814              		.loc 1 1296 0 discriminator 1
 815 0014 042C     		cmp	r4, #4
 816 0016 F6D9     		bls	.L79
1297:.\Generated_Source\PSoC4/Slider_CSHL.c **** }
 817              		.loc 1 1297 0
 818              		@ sp needed
 819              	.LVL83:
 820 0018 38BD     		pop	{r3, r4, r5, pc}
 821              	.L82:
 822 001a C046     		.align	2
 823              	.L81:
 824 001c 00000000 		.word	Slider_sensorEnableMask
 825              		.cfi_endproc
 826              	.LFE60:
 827              		.size	Slider_EnableWidget, .-Slider_EnableWidget
 828              		.section	.text.Slider_DisableWidget,"ax",%progbits
 829              		.align	2
 830              		.global	Slider_DisableWidget
 831              		.code	16
 832              		.thumb_func
 833              		.type	Slider_DisableWidget, %function
 834              	Slider_DisableWidget:
 835              	.LFB61:
1298:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
1299:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
1300:.\Generated_Source\PSoC4/Slider_CSHL.c **** /*******************************************************************************
1301:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Function Name: Slider_DisableWidget
1302:.\Generated_Source\PSoC4/Slider_CSHL.c **** ********************************************************************************
1303:.\Generated_Source\PSoC4/Slider_CSHL.c **** *
1304:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Summary:
1305:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  Disables all the widget elements (sensors) from the scanning process.
1306:.\Generated_Source\PSoC4/Slider_CSHL.c **** *
1307:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Parameters:
1308:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  widget:  widget number.
1309:.\Generated_Source\PSoC4/Slider_CSHL.c **** *
1310:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Return:
1311:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  None
1312:.\Generated_Source\PSoC4/Slider_CSHL.c **** *
1313:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Global Variables:
1314:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  Slider_sensorEnableMask[] - used to store the sensor scanning 
1315:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  state.
1316:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  Slider_sensorEnableMask[0] contains the masked bits for sensors 
1317:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1318:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  Slider_sensorEnableMask[1] contains the masked bits for 
1319:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1320:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  0 - sensor isn't scanned by Slider_ScanEnabledWidgets().
1321:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  1 - sensor is scanned by Slider_ScanEnabledWidgets().
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 39


1322:.\Generated_Source\PSoC4/Slider_CSHL.c **** * 
1323:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Side Effects:
1324:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  None
1325:.\Generated_Source\PSoC4/Slider_CSHL.c **** *
1326:.\Generated_Source\PSoC4/Slider_CSHL.c **** *******************************************************************************/
1327:.\Generated_Source\PSoC4/Slider_CSHL.c **** void Slider_DisableWidget(uint32 widget)
1328:.\Generated_Source\PSoC4/Slider_CSHL.c **** {
 836              		.loc 1 1328 0
 837              		.cfi_startproc
 838              	.LVL84:
 839 0000 38B5     		push	{r3, r4, r5, lr}
 840              		.cfi_def_cfa_offset 16
 841              		.cfi_offset 3, -16
 842              		.cfi_offset 4, -12
 843              		.cfi_offset 5, -8
 844              		.cfi_offset 14, -4
 845              	.LVL85:
1329:.\Generated_Source\PSoC4/Slider_CSHL.c ****     uint8 rawIndex = Slider_rawDataIndex[widget];
 846              		.loc 1 1329 0
 847 0002 0024     		mov	r4, #0
1330:.\Generated_Source\PSoC4/Slider_CSHL.c ****     uint8 numOfSensors = Slider_numberOfSensors[widget] + rawIndex;
1331:.\Generated_Source\PSoC4/Slider_CSHL.c ****    
1332:.\Generated_Source\PSoC4/Slider_CSHL.c ****     /* Disable all sensors of widget */
1333:.\Generated_Source\PSoC4/Slider_CSHL.c ****     do
1334:.\Generated_Source\PSoC4/Slider_CSHL.c ****     {
1335:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
1336:.\Generated_Source\PSoC4/Slider_CSHL.c ****         Slider_SetBitValue(Slider_sensorEnableMask, (uint32)rawIndex, 0u);
 848              		.loc 1 1336 0
 849 0004 054D     		ldr	r5, .L86
 850              	.LVL86:
 851              	.L84:
 852              		.loc 1 1336 0 is_stmt 0 discriminator 1
 853 0006 281C     		mov	r0, r5
 854 0008 211C     		mov	r1, r4
 855 000a 0022     		mov	r2, #0
 856 000c FFF7FEFF 		bl	Slider_SetBitValue
 857              	.LVL87:
1337:.\Generated_Source\PSoC4/Slider_CSHL.c ****         rawIndex++;
 858              		.loc 1 1337 0 is_stmt 1 discriminator 1
 859 0010 0134     		add	r4, r4, #1
 860              	.LVL88:
 861 0012 E4B2     		uxtb	r4, r4
 862              	.LVL89:
1338:.\Generated_Source\PSoC4/Slider_CSHL.c ****     }
1339:.\Generated_Source\PSoC4/Slider_CSHL.c ****     while(rawIndex < numOfSensors);
 863              		.loc 1 1339 0 discriminator 1
 864 0014 042C     		cmp	r4, #4
 865 0016 F6D9     		bls	.L84
1340:.\Generated_Source\PSoC4/Slider_CSHL.c **** }
 866              		.loc 1 1340 0
 867              		@ sp needed
 868              	.LVL90:
 869 0018 38BD     		pop	{r3, r4, r5, pc}
 870              	.L87:
 871 001a C046     		.align	2
 872              	.L86:
 873 001c 00000000 		.word	Slider_sensorEnableMask
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 40


 874              		.cfi_endproc
 875              	.LFE61:
 876              		.size	Slider_DisableWidget, .-Slider_DisableWidget
 877              		.section	.text.Slider_FindMaximum,"ax",%progbits
 878              		.align	2
 879              		.global	Slider_FindMaximum
 880              		.code	16
 881              		.thumb_func
 882              		.type	Slider_FindMaximum, %function
 883              	Slider_FindMaximum:
 884              	.LFB62:
1341:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
1342:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
1343:.\Generated_Source\PSoC4/Slider_CSHL.c **** #if(Slider_TOTAL_CENTROIDS_BASIC_COUNT)
1344:.\Generated_Source\PSoC4/Slider_CSHL.c ****     /*******************************************************************************
1345:.\Generated_Source\PSoC4/Slider_CSHL.c ****     * Function Name: Slider_FindMaximum
1346:.\Generated_Source\PSoC4/Slider_CSHL.c ****     ********************************************************************************
1347:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *
1348:.\Generated_Source\PSoC4/Slider_CSHL.c ****     * Summary:
1349:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *  Finds the index of the maximum element within a defined centroid. Checks 
1350:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *  Slider_sensorSignal[] within a defined centroid and 
1351:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *  returns the index of the maximum element. The values below the finger threshold are 
1352:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *  ignored.
1353:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *  The centroid is defined by offset of the first element and a number of elements - count.
1354:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *  The diplexed centroid requires at least two consecutive elements above
1355:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *  FingerThreshold to find the index of the maximum element.
1356:.\Generated_Source\PSoC4/Slider_CSHL.c ****     * 
1357:.\Generated_Source\PSoC4/Slider_CSHL.c ****     * Parameters:
1358:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *  offset:  Start index of centroid in Slider_sensorSignal[] array.
1359:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *  count:   number of elements within centroid.
1360:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *  fingerThreshold:  Finger threshold.
1361:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *  diplex:   pointer to diplex table.
1362:.\Generated_Source\PSoC4/Slider_CSHL.c ****     * 
1363:.\Generated_Source\PSoC4/Slider_CSHL.c ****     * Return:
1364:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *  Returns the index of the maximum element within a defined centroid.
1365:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *  If the index of the maximum element isn't found it returns 0xFF.
1366:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*
1367:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	* Global Variables:
1368:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*  Slider_startOfSlider[] - contains the index of the first slider element
1369:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	* 
1370:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	* Side Effects: 
1371:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*  None
1372:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	* 
1373:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *******************************************************************************/
1374:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	#if (Slider_IS_DIPLEX_SLIDER)
1375:.\Generated_Source\PSoC4/Slider_CSHL.c **** 		uint8 Slider_FindMaximum(uint8 offset, uint8 count, uint8 fingerThreshold, const uint8 *diplex)
1376:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	#else 
1377:.\Generated_Source\PSoC4/Slider_CSHL.c **** 		uint8 Slider_FindMaximum(uint8 offset, uint8 count, uint8 fingerThreshold)
1378:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	#endif /* (Slider_IS_DIPLEX_SLIDER) */
1379:.\Generated_Source\PSoC4/Slider_CSHL.c ****     {
 885              		.loc 1 1379 0
 886              		.cfi_startproc
 887              	.LVL91:
 888 0000 70B5     		push	{r4, r5, r6, lr}
 889              		.cfi_def_cfa_offset 16
 890              		.cfi_offset 4, -16
 891              		.cfi_offset 5, -12
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 41


 892              		.cfi_offset 6, -8
 893              		.cfi_offset 14, -4
 894              	.LVL92:
1380:.\Generated_Source\PSoC4/Slider_CSHL.c ****         uint8 i;
1381:.\Generated_Source\PSoC4/Slider_CSHL.c ****         #if (Slider_IS_DIPLEX_SLIDER)        
1382:.\Generated_Source\PSoC4/Slider_CSHL.c ****             uint8 curPos = 0u;
1383:.\Generated_Source\PSoC4/Slider_CSHL.c ****             /* No centroid at Start */
1384:.\Generated_Source\PSoC4/Slider_CSHL.c ****             uint8 curCntrdSize = 0u;
1385:.\Generated_Source\PSoC4/Slider_CSHL.c ****             uint8 curCtrdStartPos = Slider_MAXIMUM_CENTROID;
1386:.\Generated_Source\PSoC4/Slider_CSHL.c ****             /* Biggest centroid is zero */
1387:.\Generated_Source\PSoC4/Slider_CSHL.c ****             uint8 biggestCtrdSize = 0u;
1388:.\Generated_Source\PSoC4/Slider_CSHL.c ****             uint8 biggestCtrdStartPos = 0u;
1389:.\Generated_Source\PSoC4/Slider_CSHL.c ****         #endif /* (Slider_IS_DIPLEX_SLIDER) */
1390:.\Generated_Source\PSoC4/Slider_CSHL.c ****         uint8 maximum = Slider_MAXIMUM_CENTROID;
1391:.\Generated_Source\PSoC4/Slider_CSHL.c **** 		
1392:.\Generated_Source\PSoC4/Slider_CSHL.c ****         uint8 temp = 0u;
1393:.\Generated_Source\PSoC4/Slider_CSHL.c ****         uint8 *startOfSlider = &Slider_sensorSignal[offset];
 895              		.loc 1 1393 0
 896 0002 094D     		ldr	r5, .L93
 897 0004 1435     		add	r5, r5, #20
 898 0006 2D18     		add	r5, r5, r0
 899              	.LVL93:
1392:.\Generated_Source\PSoC4/Slider_CSHL.c ****         uint8 temp = 0u;
 900              		.loc 1 1392 0
 901 0008 0026     		mov	r6, #0
1390:.\Generated_Source\PSoC4/Slider_CSHL.c ****         uint8 maximum = Slider_MAXIMUM_CENTROID;
 902              		.loc 1 1390 0
 903 000a FF20     		mov	r0, #255
 904              	.LVL94:
1394:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
1395:.\Generated_Source\PSoC4/Slider_CSHL.c ****         #if (Slider_IS_DIPLEX_SLIDER)        
1396:.\Generated_Source\PSoC4/Slider_CSHL.c ****             if(diplex != 0u)
1397:.\Generated_Source\PSoC4/Slider_CSHL.c ****             {
1398:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 /* Initialize */
1399:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 i = 0u;
1400:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 
1401:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 /* Make slider x2 as Diplexed */
1402:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 count <<= 1u;
1403:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 while(1u)
1404:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 { 
1405:.\Generated_Source\PSoC4/Slider_CSHL.c ****                     if (startOfSlider[curPos] > 0u)    /* Looking for centroids */
1406:.\Generated_Source\PSoC4/Slider_CSHL.c ****                     {
1407:.\Generated_Source\PSoC4/Slider_CSHL.c ****                         if (curCtrdStartPos == Slider_MAXIMUM_CENTROID)
1408:.\Generated_Source\PSoC4/Slider_CSHL.c ****                         {
1409:.\Generated_Source\PSoC4/Slider_CSHL.c ****                             /* Start of centroid */
1410:.\Generated_Source\PSoC4/Slider_CSHL.c ****                             curCtrdStartPos = i;
1411:.\Generated_Source\PSoC4/Slider_CSHL.c ****                             curCntrdSize++;
1412:.\Generated_Source\PSoC4/Slider_CSHL.c ****                         }
1413:.\Generated_Source\PSoC4/Slider_CSHL.c ****                         else
1414:.\Generated_Source\PSoC4/Slider_CSHL.c ****                         {
1415:.\Generated_Source\PSoC4/Slider_CSHL.c ****                             curCntrdSize++;
1416:.\Generated_Source\PSoC4/Slider_CSHL.c ****                         }
1417:.\Generated_Source\PSoC4/Slider_CSHL.c ****                     }
1418:.\Generated_Source\PSoC4/Slider_CSHL.c ****                     else   /* Select biggest and indicate zero start */
1419:.\Generated_Source\PSoC4/Slider_CSHL.c ****                     {          
1420:.\Generated_Source\PSoC4/Slider_CSHL.c ****                         if(curCntrdSize > 0u)
1421:.\Generated_Source\PSoC4/Slider_CSHL.c ****                         {
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 42


1422:.\Generated_Source\PSoC4/Slider_CSHL.c ****                             /* We are at the end of current */
1423:.\Generated_Source\PSoC4/Slider_CSHL.c ****                             if(curCntrdSize > biggestCtrdSize)
1424:.\Generated_Source\PSoC4/Slider_CSHL.c ****                             {
1425:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                 biggestCtrdSize = curCntrdSize;
1426:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                 biggestCtrdStartPos = curCtrdStartPos;
1427:.\Generated_Source\PSoC4/Slider_CSHL.c ****                             }
1428:.\Generated_Source\PSoC4/Slider_CSHL.c ****                             
1429:.\Generated_Source\PSoC4/Slider_CSHL.c ****                             curCntrdSize = 0u;
1430:.\Generated_Source\PSoC4/Slider_CSHL.c ****                             curCtrdStartPos = Slider_MAXIMUM_CENTROID;
1431:.\Generated_Source\PSoC4/Slider_CSHL.c ****                         }
1432:.\Generated_Source\PSoC4/Slider_CSHL.c ****                     }
1433:.\Generated_Source\PSoC4/Slider_CSHL.c ****                     
1434:.\Generated_Source\PSoC4/Slider_CSHL.c ****                     i++; 
1435:.\Generated_Source\PSoC4/Slider_CSHL.c ****                     curPos = diplex[i];
1436:.\Generated_Source\PSoC4/Slider_CSHL.c ****                     if(i == count)
1437:.\Generated_Source\PSoC4/Slider_CSHL.c ****                     {
1438:.\Generated_Source\PSoC4/Slider_CSHL.c ****                         break;
1439:.\Generated_Source\PSoC4/Slider_CSHL.c ****                     }            
1440:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 }
1441:.\Generated_Source\PSoC4/Slider_CSHL.c ****                     
1442:.\Generated_Source\PSoC4/Slider_CSHL.c ****                     /* Find biggest centroid if two are same size, last one wins
1443:.\Generated_Source\PSoC4/Slider_CSHL.c ****                        We are at the end of current */
1444:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 if (curCntrdSize >= biggestCtrdSize) 
1445:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 {
1446:.\Generated_Source\PSoC4/Slider_CSHL.c ****                     biggestCtrdSize = curCntrdSize;
1447:.\Generated_Source\PSoC4/Slider_CSHL.c ****                     biggestCtrdStartPos = curCtrdStartPos;
1448:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 }
1449:.\Generated_Source\PSoC4/Slider_CSHL.c ****             }
1450:.\Generated_Source\PSoC4/Slider_CSHL.c ****             else
1451:.\Generated_Source\PSoC4/Slider_CSHL.c ****             {
1452:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 /* Without diplexing */ 
1453:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 biggestCtrdSize = count;
1454:.\Generated_Source\PSoC4/Slider_CSHL.c ****             }
1455:.\Generated_Source\PSoC4/Slider_CSHL.c ****                         
1456:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
1457:.\Generated_Source\PSoC4/Slider_CSHL.c ****             /* Check centroid size */
1458:.\Generated_Source\PSoC4/Slider_CSHL.c ****             #if (Slider_IS_NON_DIPLEX_SLIDER)
1459:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 if((biggestCtrdSize >= 2u) || ((biggestCtrdSize == 1u) && (diplex == 0u)))
1460:.\Generated_Source\PSoC4/Slider_CSHL.c ****             #else                    
1461:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 if(biggestCtrdSize >= 2u)
1462:.\Generated_Source\PSoC4/Slider_CSHL.c ****             #endif /* (Slider_IS_NON_DIPLEX_SLIDER) */
1463:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 {
1464:.\Generated_Source\PSoC4/Slider_CSHL.c ****                     for (i = biggestCtrdStartPos; i < (biggestCtrdStartPos + biggestCtrdSize); i++)
1465:.\Generated_Source\PSoC4/Slider_CSHL.c ****                     {
1466:.\Generated_Source\PSoC4/Slider_CSHL.c ****                         #if (Slider_IS_DIPLEX_SLIDER && Slider_IS_NON_DIPLEX_SLIDER)
1467:.\Generated_Source\PSoC4/Slider_CSHL.c ****                             if (diplex == 0u)
1468:.\Generated_Source\PSoC4/Slider_CSHL.c ****                             {
1469:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                 curPos = i;
1470:.\Generated_Source\PSoC4/Slider_CSHL.c ****                             }
1471:.\Generated_Source\PSoC4/Slider_CSHL.c ****                             else
1472:.\Generated_Source\PSoC4/Slider_CSHL.c ****                             {
1473:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                 curPos = diplex[i];
1474:.\Generated_Source\PSoC4/Slider_CSHL.c ****                             }                    
1475:.\Generated_Source\PSoC4/Slider_CSHL.c ****                         #elif (Slider_IS_DIPLEX_SLIDER)                    
1476:.\Generated_Source\PSoC4/Slider_CSHL.c ****                             curPos = diplex[i];                    
1477:.\Generated_Source\PSoC4/Slider_CSHL.c ****                         #endif /* (Slider_IS_DIPLEX_SLIDER && Slider_IS_NON_DIPLEX_SLIDER) */
1478:.\Generated_Source\PSoC4/Slider_CSHL.c ****                         /* Looking for greater element within centroid */
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 43


1479:.\Generated_Source\PSoC4/Slider_CSHL.c ****                         if(startOfSlider[curPos] > fingerThreshold)
1480:.\Generated_Source\PSoC4/Slider_CSHL.c ****                         {
1481:.\Generated_Source\PSoC4/Slider_CSHL.c ****                             if(startOfSlider[curPos] > temp)
1482:.\Generated_Source\PSoC4/Slider_CSHL.c ****                             {
1483:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                 maximum = i;
1484:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                 temp = startOfSlider[curPos];
1485:.\Generated_Source\PSoC4/Slider_CSHL.c ****                             }
1486:.\Generated_Source\PSoC4/Slider_CSHL.c ****                         }
1487:.\Generated_Source\PSoC4/Slider_CSHL.c ****                     }
1488:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 } 
1489:.\Generated_Source\PSoC4/Slider_CSHL.c ****         #else
1490:.\Generated_Source\PSoC4/Slider_CSHL.c ****             for (i = 0u; i < count; i++)
 905              		.loc 1 1490 0
 906 000c 0023     		mov	r3, #0
 907 000e 08E0     		b	.L89
 908              	.LVL95:
 909              	.L91:
1491:.\Generated_Source\PSoC4/Slider_CSHL.c ****             {                      
1492:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 /* Looking for greater element within centroid */
1493:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 if(startOfSlider[i] > fingerThreshold)
 910              		.loc 1 1493 0
 911 0010 EC5C     		ldrb	r4, [r5, r3]
 912 0012 9442     		cmp	r4, r2
 913 0014 03D9     		bls	.L90
1494:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 {
1495:.\Generated_Source\PSoC4/Slider_CSHL.c ****                     if(startOfSlider[i] > temp)
 914              		.loc 1 1495 0
 915 0016 A642     		cmp	r6, r4
 916 0018 01D2     		bcs	.L90
1496:.\Generated_Source\PSoC4/Slider_CSHL.c ****                     {
1497:.\Generated_Source\PSoC4/Slider_CSHL.c ****                         maximum = i;
1498:.\Generated_Source\PSoC4/Slider_CSHL.c ****                         temp = startOfSlider[i];
 917              		.loc 1 1498 0
 918 001a 261C     		mov	r6, r4
 919              	.LVL96:
1497:.\Generated_Source\PSoC4/Slider_CSHL.c ****                         maximum = i;
 920              		.loc 1 1497 0
 921 001c 181C     		mov	r0, r3
 922              	.LVL97:
 923              	.L90:
1490:.\Generated_Source\PSoC4/Slider_CSHL.c ****             for (i = 0u; i < count; i++)
 924              		.loc 1 1490 0
 925 001e 0133     		add	r3, r3, #1
 926              	.LVL98:
 927 0020 DBB2     		uxtb	r3, r3
 928              	.LVL99:
 929              	.L89:
1490:.\Generated_Source\PSoC4/Slider_CSHL.c ****             for (i = 0u; i < count; i++)
 930              		.loc 1 1490 0 is_stmt 0 discriminator 1
 931 0022 8B42     		cmp	r3, r1
 932 0024 F4D3     		bcc	.L91
1499:.\Generated_Source\PSoC4/Slider_CSHL.c ****                     }
1500:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 }
1501:.\Generated_Source\PSoC4/Slider_CSHL.c ****             }    
1502:.\Generated_Source\PSoC4/Slider_CSHL.c ****         #endif /* (Slider_IS_DIPLEX_SLIDER) */
1503:.\Generated_Source\PSoC4/Slider_CSHL.c ****         return (maximum);
1504:.\Generated_Source\PSoC4/Slider_CSHL.c ****     }
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 44


 933              		.loc 1 1504 0 is_stmt 1
 934              		@ sp needed
 935              	.LVL100:
 936              	.LVL101:
 937 0026 70BD     		pop	{r4, r5, r6, pc}
 938              	.L94:
 939              		.align	2
 940              	.L93:
 941 0028 00000000 		.word	.LANCHOR0
 942              		.cfi_endproc
 943              	.LFE62:
 944              		.size	Slider_FindMaximum, .-Slider_FindMaximum
 945              		.global	__aeabi_idiv
 946              		.section	.text.Slider_CalcCentroid,"ax",%progbits
 947              		.align	2
 948              		.global	Slider_CalcCentroid
 949              		.code	16
 950              		.thumb_func
 951              		.type	Slider_CalcCentroid, %function
 952              	Slider_CalcCentroid:
 953              	.LFB63:
1505:.\Generated_Source\PSoC4/Slider_CSHL.c ****     
1506:.\Generated_Source\PSoC4/Slider_CSHL.c ****     
1507:.\Generated_Source\PSoC4/Slider_CSHL.c ****     /*******************************************************************************
1508:.\Generated_Source\PSoC4/Slider_CSHL.c ****     * Function Name: Slider_CalcCentroid
1509:.\Generated_Source\PSoC4/Slider_CSHL.c ****     ********************************************************************************
1510:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *
1511:.\Generated_Source\PSoC4/Slider_CSHL.c ****     * Summary:
1512:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *  Returns a position value calculated according to the index of the maximum element and API
1513:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *  resolution.
1514:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *
1515:.\Generated_Source\PSoC4/Slider_CSHL.c ****     * Parameters:
1516:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *  type:  widget type.
1517:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *  diplex:  pointer to diplex table.
1518:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *  maximum:  Index of maximum element within centroid.
1519:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *  offset:   Start index of centroid in Slider_sensorSignal[] array.
1520:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *  count:    Number of elements within centroid.
1521:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *  resolution:  multiplicator calculated according to centroid type and
1522:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *  API resolution.
1523:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *  noiseThreshold:  Noise threshold.
1524:.\Generated_Source\PSoC4/Slider_CSHL.c ****     * 
1525:.\Generated_Source\PSoC4/Slider_CSHL.c ****     * Return:
1526:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *  Returns a position value of the slider.
1527:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*
1528:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	* Side Effects: 
1529:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*  None
1530:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	* 
1531:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *******************************************************************************/
1532:.\Generated_Source\PSoC4/Slider_CSHL.c **** #if (Slider_TOTAL_TRACKPAD_GESTURES_COUNT > 0u)
1533:.\Generated_Source\PSoC4/Slider_CSHL.c ****     uint8 Slider_CalcCentroid(uint8 maximum, uint8 offset, 
1534:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                         uint8 count, uint32 resolution, uint8 noiseThreshold)
1535:.\Generated_Source\PSoC4/Slider_CSHL.c **** #else								
1536:.\Generated_Source\PSoC4/Slider_CSHL.c ****     uint8 Slider_CalcCentroid(uint8 maximum, uint8 offset, 
1537:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                         uint8 count, uint16 resolution, uint8 noiseThreshold)						
1538:.\Generated_Source\PSoC4/Slider_CSHL.c **** #endif /* (Slider_TOTAL_TRACKPAD_GESTURES_COUNT > 0u) */
1539:.\Generated_Source\PSoC4/Slider_CSHL.c ****     {
 954              		.loc 1 1539 0
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 45


 955              		.cfi_startproc
 956              	.LVL102:
 957 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 958              		.cfi_def_cfa_offset 20
 959              		.cfi_offset 4, -20
 960              		.cfi_offset 5, -16
 961              		.cfi_offset 6, -12
 962              		.cfi_offset 7, -8
 963              		.cfi_offset 14, -4
 964 0002 4746     		mov	r7, r8
 965 0004 80B4     		push	{r7}
 966              		.cfi_def_cfa_offset 24
 967              		.cfi_offset 8, -24
 968 0006 041C     		mov	r4, r0
 969 0008 1E1C     		mov	r6, r3
 970 000a 06AB     		add	r3, sp, #24
 971              	.LVL103:
 972 000c 1878     		ldrb	r0, [r3]
 973              	.LVL104:
1540:.\Generated_Source\PSoC4/Slider_CSHL.c ****         #if ((Slider_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (Slider_TOTAL_TOUCH_PADS_BASIC_COUNT > 0u)
1541:.\Generated_Source\PSoC4/Slider_CSHL.c ****             uint8 posPrev;
1542:.\Generated_Source\PSoC4/Slider_CSHL.c ****             uint8 posNext;
1543:.\Generated_Source\PSoC4/Slider_CSHL.c ****         #endif /* ((Slider_TOTAL_LINEAR_SLIDERS_COUNT>0u) || (Slider_TOTAL_TOUCH_PADS_BASIC_COUNT>0
1544:.\Generated_Source\PSoC4/Slider_CSHL.c ****         
1545:.\Generated_Source\PSoC4/Slider_CSHL.c ****         /* Helps during centroid calculation */
1546:.\Generated_Source\PSoC4/Slider_CSHL.c ****         #if (Slider_TOTAL_CENTROIDS_BASIC_COUNT)
1547:.\Generated_Source\PSoC4/Slider_CSHL.c **** 		    static uint8 Slider_centroid[3u];
1548:.\Generated_Source\PSoC4/Slider_CSHL.c ****         #endif  /* (Slider_TOTAL_CENTROIDS_BASIC_COUNT) */
1549:.\Generated_Source\PSoC4/Slider_CSHL.c ****                
1550:.\Generated_Source\PSoC4/Slider_CSHL.c ****         #if (Slider_IS_DIPLEX_SLIDER)                
1551:.\Generated_Source\PSoC4/Slider_CSHL.c ****             uint8 pos;
1552:.\Generated_Source\PSoC4/Slider_CSHL.c ****         #endif /* (Slider_IS_DIPLEX_SLIDER) */
1553:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
1554:.\Generated_Source\PSoC4/Slider_CSHL.c ****         uint8 position;
1555:.\Generated_Source\PSoC4/Slider_CSHL.c ****         uint32 numerator;
1556:.\Generated_Source\PSoC4/Slider_CSHL.c ****         int32 denominator;
1557:.\Generated_Source\PSoC4/Slider_CSHL.c **** 		
1558:.\Generated_Source\PSoC4/Slider_CSHL.c **** 		uint8  *startOfSlider = &Slider_sensorSignal[offset];
 974              		.loc 1 1558 0
 975 000e 354B     		ldr	r3, .L105
 976              	.LVL105:
 977 0010 1433     		add	r3, r3, #20
 978 0012 5918     		add	r1, r3, r1
 979              	.LVL106:
1559:.\Generated_Source\PSoC4/Slider_CSHL.c **** 		
1560:.\Generated_Source\PSoC4/Slider_CSHL.c ****         #if ((Slider_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (Slider_TOTAL_TOUCH_PADS_BASIC_COUNT > 0u)
1561:.\Generated_Source\PSoC4/Slider_CSHL.c ****             posPrev = 0u;
1562:.\Generated_Source\PSoC4/Slider_CSHL.c ****         #endif /* ((Slider_TOTAL_LINEAR_SLIDERS_COUNT>0u) || (Slider_TOTAL_TOUCH_PADS_BASIC_COUNT>0
1563:.\Generated_Source\PSoC4/Slider_CSHL.c ****      
1564:.\Generated_Source\PSoC4/Slider_CSHL.c ****         #if (Slider_ADD_SLIDER_TYPE)
1565:.\Generated_Source\PSoC4/Slider_CSHL.c ****             if(type == Slider_TYPE_RADIAL_SLIDER)
1566:.\Generated_Source\PSoC4/Slider_CSHL.c ****             {
1567:.\Generated_Source\PSoC4/Slider_CSHL.c ****         #endif /* (Slider_ADD_SLIDER_TYPE) */
1568:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
1569:.\Generated_Source\PSoC4/Slider_CSHL.c ****             #if (Slider_TOTAL_RADIAL_SLIDERS_COUNT > 0u)                
1570:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 /* Copy Signal to the centroid array */
1571:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 Slider_centroid[Slider_POS] = startOfSlider[maximum];
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 46


1572:.\Generated_Source\PSoC4/Slider_CSHL.c ****                  
1573:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 /* Check borders for ROTARY Slider */
1574:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
1575:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 { 
1576:.\Generated_Source\PSoC4/Slider_CSHL.c ****                     Slider_centroid[Slider_POS_PREV] = startOfSlider[count - 1u];
1577:.\Generated_Source\PSoC4/Slider_CSHL.c ****                     Slider_centroid[Slider_POS_NEXT] = startOfSlider[1u];
1578:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 }
1579:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 else if (maximum == (count - 1u))    /* End of centroid */
1580:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 {
1581:.\Generated_Source\PSoC4/Slider_CSHL.c ****                     Slider_centroid[Slider_POS_PREV] = startOfSlider[maximum - 1u];
1582:.\Generated_Source\PSoC4/Slider_CSHL.c ****                     Slider_centroid[Slider_POS_NEXT] = startOfSlider[0u];
1583:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 }
1584:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 else                                /* Not first Not last */
1585:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 {
1586:.\Generated_Source\PSoC4/Slider_CSHL.c ****                     Slider_centroid[Slider_POS_PREV] = startOfSlider[maximum - 1u];
1587:.\Generated_Source\PSoC4/Slider_CSHL.c ****                     Slider_centroid[Slider_POS_NEXT] = startOfSlider[maximum + 1u];
1588:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 }
1589:.\Generated_Source\PSoC4/Slider_CSHL.c ****             #endif /* (Slider_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1590:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
1591:.\Generated_Source\PSoC4/Slider_CSHL.c ****         #if (Slider_ADD_SLIDER_TYPE)
1592:.\Generated_Source\PSoC4/Slider_CSHL.c ****             }
1593:.\Generated_Source\PSoC4/Slider_CSHL.c ****             else
1594:.\Generated_Source\PSoC4/Slider_CSHL.c ****             {
1595:.\Generated_Source\PSoC4/Slider_CSHL.c ****         #endif /* (Slider_ADD_SLIDER_TYPE) */
1596:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
1597:.\Generated_Source\PSoC4/Slider_CSHL.c ****             #if ((Slider_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (Slider_TOTAL_TOUCH_PADS_BASIC_COUNT >
1598:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 #if (Slider_IS_DIPLEX_SLIDER && Slider_IS_NON_DIPLEX_SLIDER)                    
1599:.\Generated_Source\PSoC4/Slider_CSHL.c ****                     /* Calculate next and previous near to maximum */
1600:.\Generated_Source\PSoC4/Slider_CSHL.c ****                     if(diplex == 0u)
1601:.\Generated_Source\PSoC4/Slider_CSHL.c ****                     {
1602:.\Generated_Source\PSoC4/Slider_CSHL.c ****                         pos     = maximum;
1603:.\Generated_Source\PSoC4/Slider_CSHL.c ****                         posPrev = maximum - 1u;
1604:.\Generated_Source\PSoC4/Slider_CSHL.c ****                         posNext = maximum + 1u; 
1605:.\Generated_Source\PSoC4/Slider_CSHL.c ****                     }
1606:.\Generated_Source\PSoC4/Slider_CSHL.c ****                     else
1607:.\Generated_Source\PSoC4/Slider_CSHL.c ****                     {
1608:.\Generated_Source\PSoC4/Slider_CSHL.c ****                         pos     = diplex[maximum];
1609:.\Generated_Source\PSoC4/Slider_CSHL.c ****                         posPrev = diplex[maximum - 1u];
1610:.\Generated_Source\PSoC4/Slider_CSHL.c ****                         posNext = diplex[maximum + 1u];
1611:.\Generated_Source\PSoC4/Slider_CSHL.c ****                         count <<= 1u;
1612:.\Generated_Source\PSoC4/Slider_CSHL.c ****                     }                    
1613:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 #elif (Slider_IS_DIPLEX_SLIDER)
1614:.\Generated_Source\PSoC4/Slider_CSHL.c ****                     /* Calculate next and previous near to maximum */
1615:.\Generated_Source\PSoC4/Slider_CSHL.c ****                     pos     = diplex[maximum];
1616:.\Generated_Source\PSoC4/Slider_CSHL.c ****                     posPrev = diplex[maximum - 1u];
1617:.\Generated_Source\PSoC4/Slider_CSHL.c ****                     posNext = diplex[maximum + 1u];
1618:.\Generated_Source\PSoC4/Slider_CSHL.c ****                     count <<= 1u;                    
1619:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 #else                    
1620:.\Generated_Source\PSoC4/Slider_CSHL.c ****                     /* Calculate next and previous near to maximum */
1621:.\Generated_Source\PSoC4/Slider_CSHL.c ****                     if (maximum >= 1u)
 980              		.loc 1 1621 0
 981 0014 002C     		cmp	r4, #0
 982 0016 03D0     		beq	.L104
1622:.\Generated_Source\PSoC4/Slider_CSHL.c ****                     {
1623:.\Generated_Source\PSoC4/Slider_CSHL.c ****                         posPrev = maximum - 1u;
 983              		.loc 1 1623 0
 984 0018 631E     		sub	r3, r4, #1
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 47


 985 001a DBB2     		uxtb	r3, r3
 986 001c 9846     		mov	r8, r3
 987              	.LVL107:
 988 001e 01E0     		b	.L96
 989              	.LVL108:
 990              	.L104:
1561:.\Generated_Source\PSoC4/Slider_CSHL.c ****             posPrev = 0u;
 991              		.loc 1 1561 0
 992 0020 0023     		mov	r3, #0
 993 0022 9846     		mov	r8, r3
 994              	.LVL109:
 995              	.L96:
1624:.\Generated_Source\PSoC4/Slider_CSHL.c ****                     }
1625:.\Generated_Source\PSoC4/Slider_CSHL.c ****                     posNext = maximum + 1u;
 996              		.loc 1 1625 0
 997 0024 631C     		add	r3, r4, #1
 998 0026 DBB2     		uxtb	r3, r3
 999 0028 9C46     		mov	ip, r3
 1000              	.LVL110:
1626:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 #endif /* (Slider_IS_DIPLEX_SLIDER && Slider_IS_NON_DIPLEX_SLIDER) */
1627:.\Generated_Source\PSoC4/Slider_CSHL.c ****                         
1628:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 /* Copy Signal to the centroid array */
1629:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 #if (Slider_IS_DIPLEX_SLIDER)
1630:.\Generated_Source\PSoC4/Slider_CSHL.c ****                     Slider_centroid[Slider_POS] = startOfSlider[pos];
1631:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 #else
1632:.\Generated_Source\PSoC4/Slider_CSHL.c ****                     Slider_centroid[Slider_POS] = startOfSlider[maximum];
 1001              		.loc 1 1632 0
 1002 002a 0F5D     		ldrb	r7, [r1, r4]
 1003 002c 2D4D     		ldr	r5, .L105
 1004 002e 2435     		add	r5, r5, #36
 1005 0030 6F70     		strb	r7, [r5, #1]
1633:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 #endif /* (Slider_IS_DIPLEX_SLIDER) */
1634:.\Generated_Source\PSoC4/Slider_CSHL.c ****                     
1635:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 /* Check borders for LINEAR Slider */
1636:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
 1006              		.loc 1 1636 0
 1007 0032 002C     		cmp	r4, #0
 1008 0034 08D1     		bne	.L97
1637:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 { 
1638:.\Generated_Source\PSoC4/Slider_CSHL.c ****                     Slider_centroid[Slider_POS_PREV] = 0u;
 1009              		.loc 1 1638 0
 1010 0036 2B4B     		ldr	r3, .L105
 1011              	.LVL111:
 1012 0038 0025     		mov	r5, #0
 1013 003a 2422     		mov	r2, #36
 1014              	.LVL112:
 1015 003c 9D54     		strb	r5, [r3, r2]
1639:.\Generated_Source\PSoC4/Slider_CSHL.c ****                     Slider_centroid[Slider_POS_NEXT] = startOfSlider[posNext];
 1016              		.loc 1 1639 0
 1017 003e 6546     		mov	r5, ip
 1018 0040 4A5D     		ldrb	r2, [r1, r5]
 1019 0042 2433     		add	r3, r3, #36
 1020 0044 9A70     		strb	r2, [r3, #2]
 1021 0046 14E0     		b	.L98
 1022              	.LVL113:
 1023              	.L97:
1640:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 }
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 48


1641:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 else if (maximum == ((count) - 1u)) /* End of centroid */
 1024              		.loc 1 1641 0
 1025 0048 013A     		sub	r2, r2, #1
 1026              	.LVL114:
 1027 004a 9442     		cmp	r4, r2
 1028 004c 08D1     		bne	.L99
1642:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 {
1643:.\Generated_Source\PSoC4/Slider_CSHL.c ****                     Slider_centroid[Slider_POS_PREV] = startOfSlider[posPrev];
 1029              		.loc 1 1643 0
 1030 004e 4346     		mov	r3, r8
 1031              	.LVL115:
 1032 0050 C95C     		ldrb	r1, [r1, r3]
 1033              	.LVL116:
 1034 0052 244B     		ldr	r3, .L105
 1035 0054 2422     		mov	r2, #36
 1036 0056 9954     		strb	r1, [r3, r2]
1644:.\Generated_Source\PSoC4/Slider_CSHL.c ****                     Slider_centroid[Slider_POS_NEXT] = 0u;
 1037              		.loc 1 1644 0
 1038 0058 2433     		add	r3, r3, #36
 1039 005a 0022     		mov	r2, #0
 1040 005c 9A70     		strb	r2, [r3, #2]
 1041 005e 08E0     		b	.L98
 1042              	.LVL117:
 1043              	.L99:
1645:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 }
1646:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 else                                /* Not first Not last */
1647:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 {
1648:.\Generated_Source\PSoC4/Slider_CSHL.c ****                     Slider_centroid[Slider_POS_PREV] = startOfSlider[posPrev];
 1044              		.loc 1 1648 0
 1045 0060 4346     		mov	r3, r8
 1046              	.LVL118:
 1047 0062 CD5C     		ldrb	r5, [r1, r3]
 1048 0064 1F4B     		ldr	r3, .L105
 1049 0066 2422     		mov	r2, #36
 1050 0068 9D54     		strb	r5, [r3, r2]
1649:.\Generated_Source\PSoC4/Slider_CSHL.c ****                     Slider_centroid[Slider_POS_NEXT] = startOfSlider[posNext];
 1051              		.loc 1 1649 0
 1052 006a 6546     		mov	r5, ip
 1053 006c 4A5D     		ldrb	r2, [r1, r5]
 1054 006e 2433     		add	r3, r3, #36
 1055 0070 9A70     		strb	r2, [r3, #2]
 1056              	.LVL119:
 1057              	.L98:
1650:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 }
1651:.\Generated_Source\PSoC4/Slider_CSHL.c ****             #endif /* ((Slider_TOTAL_LINEAR_SLIDERS_COUNT>0u)||(Slider_TOTAL_TOUCH_PADS_BASIC_COUNT
1652:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
1653:.\Generated_Source\PSoC4/Slider_CSHL.c ****         #if (Slider_ADD_SLIDER_TYPE)
1654:.\Generated_Source\PSoC4/Slider_CSHL.c ****             }
1655:.\Generated_Source\PSoC4/Slider_CSHL.c ****         #endif /* (Slider_ADD_SLIDER_TYPE) */
1656:.\Generated_Source\PSoC4/Slider_CSHL.c ****     
1657:.\Generated_Source\PSoC4/Slider_CSHL.c ****         /* Subtract noiseThreshold */
1658:.\Generated_Source\PSoC4/Slider_CSHL.c ****         if(Slider_centroid[Slider_POS_PREV] > noiseThreshold)
 1058              		.loc 1 1658 0
 1059 0072 2423     		mov	r3, #36
 1060 0074 1B4A     		ldr	r2, .L105
 1061 0076 D35C     		ldrb	r3, [r2, r3]
 1062 0078 8342     		cmp	r3, r0
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 49


 1063 007a 04D9     		bls	.L100
1659:.\Generated_Source\PSoC4/Slider_CSHL.c ****         {
1660:.\Generated_Source\PSoC4/Slider_CSHL.c ****             Slider_centroid[Slider_POS_PREV] -= noiseThreshold;
 1064              		.loc 1 1660 0
 1065 007c 1B1A     		sub	r3, r3, r0
 1066 007e 2422     		mov	r2, #36
 1067 0080 1849     		ldr	r1, .L105
 1068 0082 8B54     		strb	r3, [r1, r2]
 1069 0084 03E0     		b	.L101
 1070              	.L100:
1661:.\Generated_Source\PSoC4/Slider_CSHL.c ****         }
1662:.\Generated_Source\PSoC4/Slider_CSHL.c ****         else
1663:.\Generated_Source\PSoC4/Slider_CSHL.c ****         {
1664:.\Generated_Source\PSoC4/Slider_CSHL.c ****             Slider_centroid[Slider_POS_PREV] = 0u;
 1071              		.loc 1 1664 0
 1072 0086 0021     		mov	r1, #0
 1073 0088 2423     		mov	r3, #36
 1074 008a 164A     		ldr	r2, .L105
 1075 008c D154     		strb	r1, [r2, r3]
 1076              	.L101:
1665:.\Generated_Source\PSoC4/Slider_CSHL.c ****         }
1666:.\Generated_Source\PSoC4/Slider_CSHL.c ****         
1667:.\Generated_Source\PSoC4/Slider_CSHL.c ****         /* Maximum always greater than fingerThreshold, so greater than noiseThreshold */
1668:.\Generated_Source\PSoC4/Slider_CSHL.c ****         Slider_centroid[Slider_POS] -= noiseThreshold;
 1077              		.loc 1 1668 0
 1078 008e 154A     		ldr	r2, .L105
 1079 0090 2432     		add	r2, r2, #36
 1080 0092 5178     		ldrb	r1, [r2, #1]
 1081 0094 091A     		sub	r1, r1, r0
 1082 0096 C9B2     		uxtb	r1, r1
 1083 0098 5170     		strb	r1, [r2, #1]
1669:.\Generated_Source\PSoC4/Slider_CSHL.c ****         
1670:.\Generated_Source\PSoC4/Slider_CSHL.c ****         /* Subtract noiseThreshold */
1671:.\Generated_Source\PSoC4/Slider_CSHL.c ****         if(Slider_centroid[Slider_POS_NEXT] > noiseThreshold)
 1084              		.loc 1 1671 0
 1085 009a 9378     		ldrb	r3, [r2, #2]
 1086 009c 8342     		cmp	r3, r0
 1087 009e 04D9     		bls	.L102
1672:.\Generated_Source\PSoC4/Slider_CSHL.c ****         {
1673:.\Generated_Source\PSoC4/Slider_CSHL.c ****             Slider_centroid[Slider_POS_NEXT] -= noiseThreshold;
 1088              		.loc 1 1673 0
 1089 00a0 181A     		sub	r0, r3, r0
 1090 00a2 104A     		ldr	r2, .L105
 1091 00a4 2432     		add	r2, r2, #36
 1092 00a6 9070     		strb	r0, [r2, #2]
 1093 00a8 03E0     		b	.L103
 1094              	.L102:
1674:.\Generated_Source\PSoC4/Slider_CSHL.c ****         }
1675:.\Generated_Source\PSoC4/Slider_CSHL.c ****         else
1676:.\Generated_Source\PSoC4/Slider_CSHL.c ****         {
1677:.\Generated_Source\PSoC4/Slider_CSHL.c ****             Slider_centroid[Slider_POS_NEXT] = 0u;
 1095              		.loc 1 1677 0
 1096 00aa 0022     		mov	r2, #0
 1097 00ac 0D4B     		ldr	r3, .L105
 1098 00ae 2433     		add	r3, r3, #36
 1099 00b0 9A70     		strb	r2, [r3, #2]
 1100              	.L103:
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 50


1678:.\Generated_Source\PSoC4/Slider_CSHL.c ****         }
1679:.\Generated_Source\PSoC4/Slider_CSHL.c ****         
1680:.\Generated_Source\PSoC4/Slider_CSHL.c ****         
1681:.\Generated_Source\PSoC4/Slider_CSHL.c ****         /* Si+1 - Si-1 */
1682:.\Generated_Source\PSoC4/Slider_CSHL.c ****         numerator = (uint32) Slider_centroid[Slider_POS_NEXT] -
 1101              		.loc 1 1682 0
 1102 00b2 0C4B     		ldr	r3, .L105
 1103 00b4 1A1C     		mov	r2, r3
 1104 00b6 2432     		add	r2, r2, #36
 1105 00b8 9278     		ldrb	r2, [r2, #2]
1683:.\Generated_Source\PSoC4/Slider_CSHL.c ****                     (uint32) Slider_centroid[Slider_POS_PREV];
 1106              		.loc 1 1683 0
 1107 00ba 2420     		mov	r0, #36
 1108 00bc 1D5C     		ldrb	r5, [r3, r0]
1682:.\Generated_Source\PSoC4/Slider_CSHL.c ****         numerator = (uint32) Slider_centroid[Slider_POS_NEXT] -
 1109              		.loc 1 1682 0
 1110 00be 501B     		sub	r0, r2, r5
 1111              	.LVL120:
1684:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
1685:.\Generated_Source\PSoC4/Slider_CSHL.c ****         /* Si+1 + Si + Si-1 */
1686:.\Generated_Source\PSoC4/Slider_CSHL.c ****         denominator = (int32) Slider_centroid[Slider_POS_PREV] + 
 1112              		.loc 1 1686 0
 1113 00c0 6918     		add	r1, r5, r1
 1114 00c2 8918     		add	r1, r1, r2
 1115              	.LVL121:
1687:.\Generated_Source\PSoC4/Slider_CSHL.c ****                       (int32) Slider_centroid[Slider_POS] + 
1688:.\Generated_Source\PSoC4/Slider_CSHL.c ****                       (int32) Slider_centroid[Slider_POS_NEXT];
1689:.\Generated_Source\PSoC4/Slider_CSHL.c ****         
1690:.\Generated_Source\PSoC4/Slider_CSHL.c ****         /* (numerator/denominator) + maximum */
1691:.\Generated_Source\PSoC4/Slider_CSHL.c ****         denominator = (((int32)(uint32)((uint32)numerator << 8u)/denominator) + (int32)(uint32)((ui
 1116              		.loc 1 1691 0
 1117 00c4 0002     		lsl	r0, r0, #8
 1118              	.LVL122:
 1119 00c6 FFF7FEFF 		bl	__aeabi_idiv
 1120              	.LVL123:
 1121 00ca 2402     		lsl	r4, r4, #8
 1122              	.LVL124:
 1123 00cc 0019     		add	r0, r0, r4
 1124              	.LVL125:
1692:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
1693:.\Generated_Source\PSoC4/Slider_CSHL.c ****         #if(Slider_TOTAL_RADIAL_SLIDERS_COUNT > 0u)
1694:.\Generated_Source\PSoC4/Slider_CSHL.c ****             /* Only required for RADIAL Slider */
1695:.\Generated_Source\PSoC4/Slider_CSHL.c ****             if(denominator < 0)
1696:.\Generated_Source\PSoC4/Slider_CSHL.c ****             {
1697:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 denominator += (int32)((uint16)((uint16) count << 8u));
1698:.\Generated_Source\PSoC4/Slider_CSHL.c ****             }
1699:.\Generated_Source\PSoC4/Slider_CSHL.c ****         #endif /* (Slider_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1700:.\Generated_Source\PSoC4/Slider_CSHL.c ****         
1701:.\Generated_Source\PSoC4/Slider_CSHL.c ****         denominator *= (int16)resolution;
 1125              		.loc 1 1701 0
 1126 00ce 36B2     		sxth	r6, r6
 1127 00d0 7043     		mul	r0, r6
 1128              	.LVL126:
1702:.\Generated_Source\PSoC4/Slider_CSHL.c ****         
1703:.\Generated_Source\PSoC4/Slider_CSHL.c ****         /* Round result and put it to uint8 */
1704:.\Generated_Source\PSoC4/Slider_CSHL.c ****         position = ((uint8) HI16((uint32)denominator + Slider_CENTROID_ROUND_VALUE));
 1129              		.loc 1 1704 0
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 51


 1130 00d2 FE23     		mov	r3, #254
 1131 00d4 DB01     		lsl	r3, r3, #7
 1132 00d6 C018     		add	r0, r0, r3
 1133              	.LVL127:
 1134 00d8 000C     		lsr	r0, r0, #16
 1135              	.LVL128:
 1136 00da C0B2     		uxtb	r0, r0
 1137              	.LVL129:
1705:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
1706:.\Generated_Source\PSoC4/Slider_CSHL.c ****         return (position);
1707:.\Generated_Source\PSoC4/Slider_CSHL.c ****     }    
 1138              		.loc 1 1707 0
 1139              		@ sp needed
 1140              	.LVL130:
 1141 00dc 04BC     		pop	{r2}
 1142 00de 9046     		mov	r8, r2
 1143 00e0 F0BD     		pop	{r4, r5, r6, r7, pc}
 1144              	.L106:
 1145 00e2 C046     		.align	2
 1146              	.L105:
 1147 00e4 00000000 		.word	.LANCHOR0
 1148              		.cfi_endproc
 1149              	.LFE63:
 1150              		.size	Slider_CalcCentroid, .-Slider_CalcCentroid
 1151              		.section	.text.Slider_GetRadialCentroidPos,"ax",%progbits
 1152              		.align	2
 1153              		.global	Slider_GetRadialCentroidPos
 1154              		.code	16
 1155              		.thumb_func
 1156              		.type	Slider_GetRadialCentroidPos, %function
 1157              	Slider_GetRadialCentroidPos:
 1158              	.LFB65:
1708:.\Generated_Source\PSoC4/Slider_CSHL.c **** #endif /* (Slider_TOTAL_CENTROIDS_BASIC_COUNT) */
1709:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
1710:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
1711:.\Generated_Source\PSoC4/Slider_CSHL.c **** #if((Slider_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (Slider_TOTAL_LINEAR_SLIDERS_COUNT > 0u))
1712:.\Generated_Source\PSoC4/Slider_CSHL.c ****     /*******************************************************************************
1713:.\Generated_Source\PSoC4/Slider_CSHL.c ****     * Function Name: Slider_GetCentroidPos
1714:.\Generated_Source\PSoC4/Slider_CSHL.c ****     ********************************************************************************
1715:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *
1716:.\Generated_Source\PSoC4/Slider_CSHL.c ****     * Summary:
1717:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *  Checks the Slider_Signal[ ] array for a centroid within
1718:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *  a slider specified range. The centroid position is calculated according to the resolution
1719:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1720:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *  result if enabled.
1721:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *
1722:.\Generated_Source\PSoC4/Slider_CSHL.c ****     * Parameters:
1723:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *  widget:  Widget number.
1724:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *  For every linear slider widget there are defines in this format:
1725:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *  #define Slider_"widget_name"__LS           5
1726:.\Generated_Source\PSoC4/Slider_CSHL.c ****     * 
1727:.\Generated_Source\PSoC4/Slider_CSHL.c ****     * Return:
1728:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *  Returns a position value of the linear slider.
1729:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*
1730:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	* Global Variables:
1731:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*  None
1732:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 52


1733:.\Generated_Source\PSoC4/Slider_CSHL.c ****     * Side Effects:
1734:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1735:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1736:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *  sensors are active, the function returns 0xFFFF. If an error occurs during
1737:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *  execution of the centroid/diplexing algorithm, the function returns 0xFFFF.
1738:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *  There are no checks of the widget type argument provided to this function.
1739:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1740:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *
1741:.\Generated_Source\PSoC4/Slider_CSHL.c ****     * Note:
1742:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1743:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1744:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so
1745:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *  that noise will not generate a false centroid.
1746:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *******************************************************************************/
1747:.\Generated_Source\PSoC4/Slider_CSHL.c ****     uint16 Slider_GetCentroidPos(uint32 widget)
1748:.\Generated_Source\PSoC4/Slider_CSHL.c ****     {
1749:.\Generated_Source\PSoC4/Slider_CSHL.c ****         #if (Slider_IS_DIPLEX_SLIDER)
1750:.\Generated_Source\PSoC4/Slider_CSHL.c ****             const uint8 *diplex;
1751:.\Generated_Source\PSoC4/Slider_CSHL.c ****         #endif /* (Slider_IS_DIPLEX_SLIDER) */
1752:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 
1753:.\Generated_Source\PSoC4/Slider_CSHL.c ****         #if (0u != Slider_LINEAR_SLIDERS_POS_FILTERS_MASK)
1754:.\Generated_Source\PSoC4/Slider_CSHL.c ****             uint8 posIndex;
1755:.\Generated_Source\PSoC4/Slider_CSHL.c ****             uint8 firstTimeIndex = Slider_posFiltersData[widget];
1756:.\Generated_Source\PSoC4/Slider_CSHL.c ****             uint8 posFiltersMask = Slider_posFiltersMask[widget];  
1757:.\Generated_Source\PSoC4/Slider_CSHL.c ****         #endif /* (0u != Slider_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1758:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
1759:.\Generated_Source\PSoC4/Slider_CSHL.c ****         #if ((0u != (Slider_MEDIAN_FILTER & Slider_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1760:.\Generated_Source\PSoC4/Slider_CSHL.c ****              (0u != (Slider_AVERAGING_FILTER & Slider_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1761:.\Generated_Source\PSoC4/Slider_CSHL.c ****             uint8 tempPos;
1762:.\Generated_Source\PSoC4/Slider_CSHL.c ****         #endif /* ((0u != (Slider_MEDIAN_FILTER & Slider_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1763:.\Generated_Source\PSoC4/Slider_CSHL.c ****                *   (0u != (Slider_AVERAGING_FILTER & Slider_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1764:.\Generated_Source\PSoC4/Slider_CSHL.c ****                */
1765:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
1766:.\Generated_Source\PSoC4/Slider_CSHL.c ****         uint8 maximum;
1767:.\Generated_Source\PSoC4/Slider_CSHL.c ****         uint16 position;
1768:.\Generated_Source\PSoC4/Slider_CSHL.c ****         uint8 offset = Slider_rawDataIndex[widget];
1769:.\Generated_Source\PSoC4/Slider_CSHL.c ****         uint8 count = Slider_numberOfSensors[widget];
1770:.\Generated_Source\PSoC4/Slider_CSHL.c ****                         
1771:.\Generated_Source\PSoC4/Slider_CSHL.c ****         #if (Slider_IS_DIPLEX_SLIDER)
1772:.\Generated_Source\PSoC4/Slider_CSHL.c ****             if(widget < Slider_TOTAL_DIPLEXED_SLIDERS_COUNT)
1773:.\Generated_Source\PSoC4/Slider_CSHL.c ****             {
1774:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 maximum = Slider_diplexTable[widget];
1775:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 diplex = &Slider_diplexTable[maximum];
1776:.\Generated_Source\PSoC4/Slider_CSHL.c ****             }
1777:.\Generated_Source\PSoC4/Slider_CSHL.c ****             else
1778:.\Generated_Source\PSoC4/Slider_CSHL.c ****             {
1779:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 diplex = 0u;
1780:.\Generated_Source\PSoC4/Slider_CSHL.c ****             }
1781:.\Generated_Source\PSoC4/Slider_CSHL.c ****         #endif /* (Slider_IS_DIPLEX_SLIDER) */
1782:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
1783:.\Generated_Source\PSoC4/Slider_CSHL.c **** 		/* Find Maximum within centroid */      
1784:.\Generated_Source\PSoC4/Slider_CSHL.c **** 		#if (Slider_IS_DIPLEX_SLIDER)        
1785:.\Generated_Source\PSoC4/Slider_CSHL.c **** 			maximum = Slider_FindMaximum(offset, count, (uint8)Slider_fingerThreshold[widget], diplex);
1786:.\Generated_Source\PSoC4/Slider_CSHL.c **** 		#else
1787:.\Generated_Source\PSoC4/Slider_CSHL.c **** 			maximum = Slider_FindMaximum(offset, count, (uint8)Slider_fingerThreshold[widget]);
1788:.\Generated_Source\PSoC4/Slider_CSHL.c **** 		#endif /* (Slider_IS_DIPLEX_SLIDER) */
1789:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 53


1790:.\Generated_Source\PSoC4/Slider_CSHL.c ****         if (maximum != 0xFFu)
1791:.\Generated_Source\PSoC4/Slider_CSHL.c ****         {
1792:.\Generated_Source\PSoC4/Slider_CSHL.c ****             /* Calculate centroid */
1793:.\Generated_Source\PSoC4/Slider_CSHL.c ****             position = (uint16) Slider_CalcCentroid(maximum, 
1794:.\Generated_Source\PSoC4/Slider_CSHL.c ****                          offset, count, Slider_centroidMult[widget], Slider_noiseThreshold[widget])
1795:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
1796:.\Generated_Source\PSoC4/Slider_CSHL.c ****             #if (0u != Slider_LINEAR_SLIDERS_POS_FILTERS_MASK)
1797:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 /* Check if this linear slider has enabled filters */
1798:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 if (0u != (posFiltersMask & Slider_ANY_POS_FILTER))
1799:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 {
1800:.\Generated_Source\PSoC4/Slider_CSHL.c ****                     /* Calculate position to store filters data */
1801:.\Generated_Source\PSoC4/Slider_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
1802:.\Generated_Source\PSoC4/Slider_CSHL.c ****                     
1803:.\Generated_Source\PSoC4/Slider_CSHL.c ****                     if (0u == Slider_posFiltersData[firstTimeIndex])
1804:.\Generated_Source\PSoC4/Slider_CSHL.c ****                     {
1805:.\Generated_Source\PSoC4/Slider_CSHL.c ****                         /* Init filters */
1806:.\Generated_Source\PSoC4/Slider_CSHL.c ****                         Slider_posFiltersData[posIndex] = (uint8) position;
1807:.\Generated_Source\PSoC4/Slider_CSHL.c ****                         #if ((0u != (Slider_MEDIAN_FILTER & \
1808:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                      Slider_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1809:.\Generated_Source\PSoC4/Slider_CSHL.c ****                              (0u != (Slider_AVERAGING_FILTER & \
1810:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                      Slider_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1811:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
1812:.\Generated_Source\PSoC4/Slider_CSHL.c ****                             if ( (0u != (posFiltersMask & Slider_MEDIAN_FILTER)) || 
1813:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                  (0u != (posFiltersMask & Slider_AVERAGING_FILTER)) )
1814:.\Generated_Source\PSoC4/Slider_CSHL.c ****                             {
1815:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                 Slider_posFiltersData[posIndex + 1u] = (uint8) position;
1816:.\Generated_Source\PSoC4/Slider_CSHL.c ****                             }
1817:.\Generated_Source\PSoC4/Slider_CSHL.c ****                         #endif /* ((0u != (Slider_MEDIAN_FILTER & \
1818:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                *           Slider_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1819:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                *   (0u != (Slider_AVERAGING_FILTER & \
1820:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                *           Slider_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1821:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                */
1822:.\Generated_Source\PSoC4/Slider_CSHL.c ****                         
1823:.\Generated_Source\PSoC4/Slider_CSHL.c ****                         Slider_posFiltersData[firstTimeIndex] = 1u;
1824:.\Generated_Source\PSoC4/Slider_CSHL.c ****                     }
1825:.\Generated_Source\PSoC4/Slider_CSHL.c ****                     else
1826:.\Generated_Source\PSoC4/Slider_CSHL.c ****                     {
1827:.\Generated_Source\PSoC4/Slider_CSHL.c ****                         /* Do filtering */
1828:.\Generated_Source\PSoC4/Slider_CSHL.c ****                         #if (0u != (Slider_MEDIAN_FILTER & Slider_LINEAR_SLIDERS_POS_FILTERS_MASK))
1829:.\Generated_Source\PSoC4/Slider_CSHL.c ****                             if (0u != (posFiltersMask & Slider_MEDIAN_FILTER))
1830:.\Generated_Source\PSoC4/Slider_CSHL.c ****                             {
1831:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                 tempPos = (uint8) position;
1832:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                 position = Slider_MedianFilter(position,
1833:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                                                 (uint16)Slider_posFiltersData[posIn
1834:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                                                 (uint16)Slider_posFiltersData[posIn
1835:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                 Slider_posFiltersData[posIndex + 1u] =
1836:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                                                              Slider_posFiltersData[
1837:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                 Slider_posFiltersData[posIndex] = tempPos;
1838:.\Generated_Source\PSoC4/Slider_CSHL.c ****                             }
1839:.\Generated_Source\PSoC4/Slider_CSHL.c ****                         #endif /*(0u != (Slider_MEDIAN_FILTER &
1840:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                *         Slider_LINEAR_SLIDERS_POS_FILTERS_MASK))
1841:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                */
1842:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
1843:.\Generated_Source\PSoC4/Slider_CSHL.c ****                         #if(0u!=(Slider_AVERAGING_FILTER & Slider_LINEAR_SLIDERS_POS_FILTERS_MASK))
1844:.\Generated_Source\PSoC4/Slider_CSHL.c ****                             if (0u != (posFiltersMask & Slider_AVERAGING_FILTER)) 
1845:.\Generated_Source\PSoC4/Slider_CSHL.c ****                             {
1846:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                 tempPos = (uint8) position;
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 54


1847:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                 position = Slider_AveragingFilter(position,
1848:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                                                 (uint16)Slider_posFiltersData[posIn
1849:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                                                 (uint16)Slider_posFiltersData[posIn
1850:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                 Slider_posFiltersData[posIndex+1u]=Slider_posFiltersData[posIndex];
1851:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                 Slider_posFiltersData[posIndex] = tempPos;
1852:.\Generated_Source\PSoC4/Slider_CSHL.c ****                             }
1853:.\Generated_Source\PSoC4/Slider_CSHL.c ****                         #endif /* (0u != (Slider_AVERAGING_FILTER & \
1854:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                *           Slider_LINEAR_SLIDERS_POS_FILTERS_MASK))
1855:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                */
1856:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
1857:.\Generated_Source\PSoC4/Slider_CSHL.c ****                         #if (0u != (Slider_IIR2_FILTER & Slider_LINEAR_SLIDERS_POS_FILTERS_MASK)) 
1858:.\Generated_Source\PSoC4/Slider_CSHL.c ****                             if (0u != (posFiltersMask & Slider_IIR2_FILTER)) 
1859:.\Generated_Source\PSoC4/Slider_CSHL.c ****                             {
1860:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                 position = Slider_IIR2Filter(position,
1861:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                                                     (uint16)Slider_posFiltersData[p
1862:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                 Slider_posFiltersData[posIndex] = (uint8) position;
1863:.\Generated_Source\PSoC4/Slider_CSHL.c ****                             }
1864:.\Generated_Source\PSoC4/Slider_CSHL.c ****                         #endif /* (0u != (Slider_IIR2_FILTER & \
1865:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                *          Slider_LINEAR_SLIDERS_POS_FILTERS_MASK))
1866:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                */
1867:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
1868:.\Generated_Source\PSoC4/Slider_CSHL.c ****                         #if (0u != (Slider_IIR4_FILTER & Slider_LINEAR_SLIDERS_POS_FILTERS_MASK))
1869:.\Generated_Source\PSoC4/Slider_CSHL.c ****                             if (0u != (posFiltersMask & Slider_IIR4_FILTER))
1870:.\Generated_Source\PSoC4/Slider_CSHL.c ****                             {
1871:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                 position = Slider_IIR4Filter(position,
1872:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                                                     (uint16)Slider_posFiltersData[p
1873:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                 Slider_posFiltersData[posIndex] = (uint8) position;
1874:.\Generated_Source\PSoC4/Slider_CSHL.c ****                             }                                
1875:.\Generated_Source\PSoC4/Slider_CSHL.c ****                         #endif /* (0u != (Slider_IIR4_FILTER & \
1876:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                *          Slider_LINEAR_SLIDERS_POS_FILTERS_MASK))
1877:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                */
1878:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
1879:.\Generated_Source\PSoC4/Slider_CSHL.c ****                         #if (0u != (Slider_JITTER_FILTER & Slider_LINEAR_SLIDERS_POS_FILTERS_MASK))
1880:.\Generated_Source\PSoC4/Slider_CSHL.c ****                             if (0u != (posFiltersMask & Slider_JITTER_FILTER))
1881:.\Generated_Source\PSoC4/Slider_CSHL.c ****                             {
1882:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                 position = Slider_JitterFilter(position,
1883:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                                                     (uint16)Slider_posFiltersData[p
1884:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                 Slider_posFiltersData[posIndex] = (uint8) position;
1885:.\Generated_Source\PSoC4/Slider_CSHL.c ****                             }
1886:.\Generated_Source\PSoC4/Slider_CSHL.c ****                         #endif /* (0u != (Slider_JITTER_FILTER & \
1887:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                *           Slider_LINEAR_SLIDERS_POS_FILTERS_MASK))
1888:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                */
1889:.\Generated_Source\PSoC4/Slider_CSHL.c ****                     }
1890:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 }
1891:.\Generated_Source\PSoC4/Slider_CSHL.c ****             #endif /* (0u != Slider_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1892:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
1893:.\Generated_Source\PSoC4/Slider_CSHL.c ****         }
1894:.\Generated_Source\PSoC4/Slider_CSHL.c ****         else
1895:.\Generated_Source\PSoC4/Slider_CSHL.c ****         {
1896:.\Generated_Source\PSoC4/Slider_CSHL.c ****             /* Maximum wasn't found */
1897:.\Generated_Source\PSoC4/Slider_CSHL.c ****             position = 0xFFFFu;
1898:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
1899:.\Generated_Source\PSoC4/Slider_CSHL.c ****             #if(0u != Slider_LINEAR_SLIDERS_POS_FILTERS_MASK)
1900:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 /* Reset filters */
1901:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 if(0u != (posFiltersMask & Slider_ANY_POS_FILTER))
1902:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 {
1903:.\Generated_Source\PSoC4/Slider_CSHL.c ****                     Slider_posFiltersData[firstTimeIndex] = 0u;
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 55


1904:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 }
1905:.\Generated_Source\PSoC4/Slider_CSHL.c ****             #endif /* (0u != Slider_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1906:.\Generated_Source\PSoC4/Slider_CSHL.c ****         }
1907:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
1908:.\Generated_Source\PSoC4/Slider_CSHL.c ****         
1909:.\Generated_Source\PSoC4/Slider_CSHL.c ****         return (position);
1910:.\Generated_Source\PSoC4/Slider_CSHL.c ****     }
1911:.\Generated_Source\PSoC4/Slider_CSHL.c **** #endif /* ((Slider_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (Slider_TOTAL_LINEAR_SLIDERS_COUNT > 0u)) */
1912:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
1913:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
1914:.\Generated_Source\PSoC4/Slider_CSHL.c **** #if((Slider_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (Slider_TOTAL_LINEAR_SLIDERS_COUNT > 0u))
1915:.\Generated_Source\PSoC4/Slider_CSHL.c ****     /*******************************************************************************
1916:.\Generated_Source\PSoC4/Slider_CSHL.c ****     * Function Name: Slider_GetRadialCentroidPos
1917:.\Generated_Source\PSoC4/Slider_CSHL.c ****     ********************************************************************************
1918:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *
1919:.\Generated_Source\PSoC4/Slider_CSHL.c ****     * Summary:
1920:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *  Checks the Slider_Signal[ ] array for a centroid within
1921:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *  a slider specified range. The centroid position is calculated according to the resolution
1922:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1923:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *  result if enabled.
1924:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *
1925:.\Generated_Source\PSoC4/Slider_CSHL.c ****     * Parameters:
1926:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *  widget:  Widget number.
1927:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *  For every radial slider widget there are defines in this format:
1928:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *  #define Slider_"widget_name"__RS           5
1929:.\Generated_Source\PSoC4/Slider_CSHL.c ****     * 
1930:.\Generated_Source\PSoC4/Slider_CSHL.c ****     * Return:
1931:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *  Returns a position value of the radial slider.
1932:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *
1933:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	* Global Variables:
1934:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*  None.
1935:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*
1936:.\Generated_Source\PSoC4/Slider_CSHL.c ****     * Side Effects:
1937:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1938:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1939:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *  sensors are active, the function returns 0xFFFF.
1940:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *  There are no checks of the widget type argument provided to this function.
1941:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1942:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *
1943:.\Generated_Source\PSoC4/Slider_CSHL.c ****     * Note:
1944:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1945:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1946:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so 
1947:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *  that noise will not generate a false centroid.
1948:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *
1949:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *******************************************************************************/
1950:.\Generated_Source\PSoC4/Slider_CSHL.c ****      uint16 Slider_GetRadialCentroidPos(uint32 widget)
1951:.\Generated_Source\PSoC4/Slider_CSHL.c ****     {
 1159              		.loc 1 1951 0
 1160              		.cfi_startproc
 1161              	.LVL131:
 1162 0000 10B5     		push	{r4, lr}
 1163              		.cfi_def_cfa_offset 8
 1164              		.cfi_offset 4, -8
 1165              		.cfi_offset 14, -4
 1166 0002 82B0     		sub	sp, sp, #8
 1167              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 56


 1168 0004 041C     		mov	r4, r0
 1169              	.LVL132:
1952:.\Generated_Source\PSoC4/Slider_CSHL.c ****         #if (0u != Slider_RADIAL_SLIDERS_POS_FILTERS_MASK)
1953:.\Generated_Source\PSoC4/Slider_CSHL.c ****             uint8 posIndex;
1954:.\Generated_Source\PSoC4/Slider_CSHL.c ****             uint8 firstTimeIndex = Slider_posFiltersData[widget];
1955:.\Generated_Source\PSoC4/Slider_CSHL.c ****             uint8 posFiltersMask = Slider_posFiltersMask[widget]; 
1956:.\Generated_Source\PSoC4/Slider_CSHL.c ****         #endif /* (0u != Slider_RADIAL_SLIDERS_POS_FILTERS_MASK) */
1957:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
1958:.\Generated_Source\PSoC4/Slider_CSHL.c ****         #if ((0u != (Slider_MEDIAN_FILTER & Slider_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1959:.\Generated_Source\PSoC4/Slider_CSHL.c ****              (0u != (Slider_AVERAGING_FILTER & Slider_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1960:.\Generated_Source\PSoC4/Slider_CSHL.c ****             uint8 tempPos;
1961:.\Generated_Source\PSoC4/Slider_CSHL.c ****         #endif /* ((0u != (Slider_MEDIAN_FILTER & Slider_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1962:.\Generated_Source\PSoC4/Slider_CSHL.c ****                *   (0u != (Slider_AVERAGING_FILTER & Slider_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1963:.\Generated_Source\PSoC4/Slider_CSHL.c ****                */
1964:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
1965:.\Generated_Source\PSoC4/Slider_CSHL.c ****         uint8 maximum;
1966:.\Generated_Source\PSoC4/Slider_CSHL.c ****         uint16 position;
1967:.\Generated_Source\PSoC4/Slider_CSHL.c ****         uint8 offset = Slider_rawDataIndex[widget];
1968:.\Generated_Source\PSoC4/Slider_CSHL.c ****         uint8 count = Slider_numberOfSensors[widget];
1969:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
1970:.\Generated_Source\PSoC4/Slider_CSHL.c **** 		/* Find Maximum within centroid */      
1971:.\Generated_Source\PSoC4/Slider_CSHL.c **** 		#if (Slider_IS_DIPLEX_SLIDER)        
1972:.\Generated_Source\PSoC4/Slider_CSHL.c **** 			maximum = Slider_FindMaximum(offset, count, (uint8)Slider_fingerThreshold[widget], 0u);
1973:.\Generated_Source\PSoC4/Slider_CSHL.c **** 		#else
1974:.\Generated_Source\PSoC4/Slider_CSHL.c **** 			maximum = Slider_FindMaximum(offset, count, (uint8)Slider_fingerThreshold[widget]);
 1170              		.loc 1 1974 0
 1171 0006 0A4B     		ldr	r3, .L110
 1172 0008 1A5C     		ldrb	r2, [r3, r0]
 1173 000a 0020     		mov	r0, #0
 1174              	.LVL133:
 1175 000c 0521     		mov	r1, #5
 1176 000e FFF7FEFF 		bl	Slider_FindMaximum
 1177              	.LVL134:
1975:.\Generated_Source\PSoC4/Slider_CSHL.c **** 		#endif /* (Slider_IS_DIPLEX_SLIDER) */
1976:.\Generated_Source\PSoC4/Slider_CSHL.c ****         
1977:.\Generated_Source\PSoC4/Slider_CSHL.c ****         if (maximum != Slider_MAXIMUM_CENTROID)
 1178              		.loc 1 1977 0
 1179 0012 FF28     		cmp	r0, #255
 1180 0014 09D0     		beq	.L109
1978:.\Generated_Source\PSoC4/Slider_CSHL.c ****         {
1979:.\Generated_Source\PSoC4/Slider_CSHL.c ****             /* Calculate centroid */
1980:.\Generated_Source\PSoC4/Slider_CSHL.c ****             position = (uint16) Slider_CalcCentroid(maximum, 
 1181              		.loc 1 1980 0
 1182 0016 074B     		ldr	r3, .L110+4
 1183 0018 1B5D     		ldrb	r3, [r3, r4]
 1184 001a 0093     		str	r3, [sp]
 1185 001c 0021     		mov	r1, #0
 1186 001e 0522     		mov	r2, #5
 1187 0020 C823     		mov	r3, #200
 1188 0022 5B01     		lsl	r3, r3, #5
 1189 0024 FFF7FEFF 		bl	Slider_CalcCentroid
 1190              	.LVL135:
 1191 0028 00E0     		b	.L108
 1192              	.LVL136:
 1193              	.L109:
1981:.\Generated_Source\PSoC4/Slider_CSHL.c ****                          offset, count, Slider_centroidMult[widget], Slider_noiseThreshold[widget])
1982:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 57


1983:.\Generated_Source\PSoC4/Slider_CSHL.c ****             #if (0u != Slider_RADIAL_SLIDERS_POS_FILTERS_MASK)
1984:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 /* Check if this Radial slider has enabled filters */
1985:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 if (0u != (posFiltersMask & Slider_ANY_POS_FILTER))
1986:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 {
1987:.\Generated_Source\PSoC4/Slider_CSHL.c ****                     /* Calculate position to store filters data */
1988:.\Generated_Source\PSoC4/Slider_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
1989:.\Generated_Source\PSoC4/Slider_CSHL.c ****                     
1990:.\Generated_Source\PSoC4/Slider_CSHL.c ****                     if (0u == Slider_posFiltersData[firstTimeIndex])
1991:.\Generated_Source\PSoC4/Slider_CSHL.c ****                     {
1992:.\Generated_Source\PSoC4/Slider_CSHL.c ****                         /* Init filters */
1993:.\Generated_Source\PSoC4/Slider_CSHL.c ****                         Slider_posFiltersData[posIndex] = (uint8) position;
1994:.\Generated_Source\PSoC4/Slider_CSHL.c ****                         #if ((0u != (Slider_MEDIAN_FILTER & \
1995:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                      Slider_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1996:.\Generated_Source\PSoC4/Slider_CSHL.c ****                              (0u != (Slider_AVERAGING_FILTER & \
1997:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                      Slider_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1998:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
1999:.\Generated_Source\PSoC4/Slider_CSHL.c ****                             if ( (0u != (posFiltersMask & Slider_MEDIAN_FILTER))  || 
2000:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                  (0u != (posFiltersMask & Slider_AVERAGING_FILTER)) )
2001:.\Generated_Source\PSoC4/Slider_CSHL.c ****                             {
2002:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                 Slider_posFiltersData[posIndex + 1u] = (uint8) position;
2003:.\Generated_Source\PSoC4/Slider_CSHL.c ****                             }
2004:.\Generated_Source\PSoC4/Slider_CSHL.c ****                         #endif /* ((0u != (Slider_MEDIAN_FILTER & \
2005:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                *           Slider_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
2006:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                *   (0u != (Slider_AVERAGING_FILTER & \
2007:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                *           Slider_RADIAL_SLIDERS_POS_FILTERS_MASK)))
2008:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                */
2009:.\Generated_Source\PSoC4/Slider_CSHL.c ****                         
2010:.\Generated_Source\PSoC4/Slider_CSHL.c ****                         Slider_posFiltersData[firstTimeIndex] = 1u;
2011:.\Generated_Source\PSoC4/Slider_CSHL.c ****                     }
2012:.\Generated_Source\PSoC4/Slider_CSHL.c ****                     else
2013:.\Generated_Source\PSoC4/Slider_CSHL.c ****                     {
2014:.\Generated_Source\PSoC4/Slider_CSHL.c ****                         /* Do filtering */
2015:.\Generated_Source\PSoC4/Slider_CSHL.c ****                         #if (0u != (Slider_MEDIAN_FILTER & Slider_RADIAL_SLIDERS_POS_FILTERS_MASK))
2016:.\Generated_Source\PSoC4/Slider_CSHL.c ****                             if (0u != (posFiltersMask & Slider_MEDIAN_FILTER))
2017:.\Generated_Source\PSoC4/Slider_CSHL.c ****                             {
2018:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                 tempPos = (uint8) position;
2019:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                 position = Slider_MedianFilter(position,
2020:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                                                         Slider_posFiltersData[posIn
2021:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                                                         Slider_posFiltersData[posIn
2022:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                 Slider_posFiltersData[posIndex + 1u] = 
2023:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                                                               Slider_posFiltersData
2024:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                 Slider_posFiltersData[posIndex] = tempPos;
2025:.\Generated_Source\PSoC4/Slider_CSHL.c ****                             }
2026:.\Generated_Source\PSoC4/Slider_CSHL.c ****                         #endif /* (0u != (Slider_MEDIAN_FILTER & 
2027:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                *          Slider_RADIAL_SLIDERS_POS_FILTERS_MASK))
2028:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                */
2029:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
2030:.\Generated_Source\PSoC4/Slider_CSHL.c ****                         #if (0u != (Slider_AVERAGING_FILTER & \
2031:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                     Slider_RADIAL_SLIDERS_POS_FILTERS_MASK))
2032:.\Generated_Source\PSoC4/Slider_CSHL.c ****                             if (0u != (posFiltersMask & Slider_AVERAGING_FILTER))
2033:.\Generated_Source\PSoC4/Slider_CSHL.c ****                             {
2034:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                 tempPos = (uint8) position;
2035:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                 position = Slider_AveragingFilter(position, 
2036:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                                                        Slider_posFiltersData[posInd
2037:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                                                        Slider_posFiltersData[posInd
2038:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                 Slider_posFiltersData[posIndex+1u]= Slider_posFiltersData[posIndex]
2039:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                 Slider_posFiltersData[posIndex] = tempPos;
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 58


2040:.\Generated_Source\PSoC4/Slider_CSHL.c ****                             }
2041:.\Generated_Source\PSoC4/Slider_CSHL.c ****                         #endif /* (0u != (Slider_AVERAGING_FILTER & \
2042:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                *          Slider_RADIAL_SLIDERS_POS_FILTERS_MASK))
2043:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                */
2044:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
2045:.\Generated_Source\PSoC4/Slider_CSHL.c ****                         #if (0u != (Slider_IIR2_FILTER & Slider_RADIAL_SLIDERS_POS_FILTERS_MASK))
2046:.\Generated_Source\PSoC4/Slider_CSHL.c ****                             if (0u != (posFiltersMask & Slider_IIR2_FILTER))
2047:.\Generated_Source\PSoC4/Slider_CSHL.c ****                             {
2048:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                 position = Slider_IIR2Filter(position,
2049:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                                                     (uint16)Slider_posFiltersData[p
2050:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                 Slider_posFiltersData[posIndex] = (uint8) position;
2051:.\Generated_Source\PSoC4/Slider_CSHL.c ****                             }
2052:.\Generated_Source\PSoC4/Slider_CSHL.c ****                         #endif /* (0u != (Slider_IIR2_FILTER & 
2053:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                *          Slider_RADIAL_SLIDERS_POS_FILTERS_MASK))
2054:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                */
2055:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
2056:.\Generated_Source\PSoC4/Slider_CSHL.c ****                         #if (0u != (Slider_IIR4_FILTER & Slider_RADIAL_SLIDERS_POS_FILTERS_MASK))
2057:.\Generated_Source\PSoC4/Slider_CSHL.c ****                             if (0u != (posFiltersMask & Slider_IIR4_FILTER))
2058:.\Generated_Source\PSoC4/Slider_CSHL.c ****                             {
2059:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                 position = Slider_IIR4Filter(position,
2060:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                                                     (uint16)Slider_posFiltersData[p
2061:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                 Slider_posFiltersData[posIndex] = (uint8) position;
2062:.\Generated_Source\PSoC4/Slider_CSHL.c ****                             }
2063:.\Generated_Source\PSoC4/Slider_CSHL.c ****                         #endif /* (0u != (Slider_IIR4_FILTER & 
2064:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                *          Slider_RADIAL_SLIDERS_POS_FILTERS_MASK))
2065:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                */
2066:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
2067:.\Generated_Source\PSoC4/Slider_CSHL.c ****                         #if (0u != (Slider_JITTER_FILTER & Slider_RADIAL_SLIDERS_POS_FILTERS_MASK))
2068:.\Generated_Source\PSoC4/Slider_CSHL.c ****                             if (0u != (posFiltersMask & Slider_JITTER_FILTER))
2069:.\Generated_Source\PSoC4/Slider_CSHL.c ****                             {
2070:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                 position = Slider_JitterFilter(position, 
2071:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                                                          Slider_posFiltersData[posI
2072:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                 Slider_posFiltersData[posIndex] = (uint8) position;
2073:.\Generated_Source\PSoC4/Slider_CSHL.c ****                             }
2074:.\Generated_Source\PSoC4/Slider_CSHL.c ****                         #endif /* (0u != (Slider_JITTER_FILTER &
2075:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                *           Slider_RADIAL_SLIDERS_POS_FILTERS_MASK))
2076:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                */
2077:.\Generated_Source\PSoC4/Slider_CSHL.c ****                     }
2078:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 }
2079:.\Generated_Source\PSoC4/Slider_CSHL.c ****             #endif /* (0u != Slider_RADIAL_SLIDERS_POS_FILTERS_MASK) */
2080:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
2081:.\Generated_Source\PSoC4/Slider_CSHL.c ****         }
2082:.\Generated_Source\PSoC4/Slider_CSHL.c ****         else
2083:.\Generated_Source\PSoC4/Slider_CSHL.c ****         {
2084:.\Generated_Source\PSoC4/Slider_CSHL.c ****             /* Maximum was not found */
2085:.\Generated_Source\PSoC4/Slider_CSHL.c ****             position = 0xFFFFu;
 1194              		.loc 1 2085 0
 1195 002a 0348     		ldr	r0, .L110+8
 1196              	.LVL137:
 1197              	.L108:
2086:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
2087:.\Generated_Source\PSoC4/Slider_CSHL.c ****             #if (0u != Slider_RADIAL_SLIDERS_POS_FILTERS_MASK)
2088:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 /* Reset filters */
2089:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 if((posFiltersMask & Slider_ANY_POS_FILTER) != 0u)
2090:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 {
2091:.\Generated_Source\PSoC4/Slider_CSHL.c ****                     Slider_posFiltersData[firstTimeIndex] = 0u;
2092:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 }
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 59


2093:.\Generated_Source\PSoC4/Slider_CSHL.c ****             #endif /* (0u != Slider_RADIAL_SLIDERS_POS_FILTERS_MASK) */
2094:.\Generated_Source\PSoC4/Slider_CSHL.c ****         }
2095:.\Generated_Source\PSoC4/Slider_CSHL.c ****         
2096:.\Generated_Source\PSoC4/Slider_CSHL.c ****         return (position);
2097:.\Generated_Source\PSoC4/Slider_CSHL.c ****     }
 1198              		.loc 1 2097 0
 1199 002c 02B0     		add	sp, sp, #8
 1200              		@ sp needed
 1201              	.LVL138:
 1202 002e 10BD     		pop	{r4, pc}
 1203              	.L111:
 1204              		.align	2
 1205              	.L110:
 1206 0030 00000000 		.word	Slider_fingerThreshold
 1207 0034 00000000 		.word	Slider_noiseThreshold
 1208 0038 FFFF0000 		.word	65535
 1209              		.cfi_endproc
 1210              	.LFE65:
 1211              		.size	Slider_GetRadialCentroidPos, .-Slider_GetRadialCentroidPos
 1212              		.section	.text.Slider_MedianFilter,"ax",%progbits
 1213              		.align	2
 1214              		.global	Slider_MedianFilter
 1215              		.code	16
 1216              		.thumb_func
 1217              		.type	Slider_MedianFilter, %function
 1218              	Slider_MedianFilter:
 1219              	.LFB66:
2098:.\Generated_Source\PSoC4/Slider_CSHL.c **** #endif /* ((Slider_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (Slider_TOTAL_LINEAR_SLIDERS_COUNT > 0u)) */
2099:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
2100:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
2101:.\Generated_Source\PSoC4/Slider_CSHL.c **** #if(Slider_TOTAL_TOUCH_PADS_BASIC_COUNT > 0u)
2102:.\Generated_Source\PSoC4/Slider_CSHL.c ****     /*******************************************************************************
2103:.\Generated_Source\PSoC4/Slider_CSHL.c ****     * Function Name: Slider_GetTouchCentroidPos
2104:.\Generated_Source\PSoC4/Slider_CSHL.c ****     ********************************************************************************
2105:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *
2106:.\Generated_Source\PSoC4/Slider_CSHL.c ****     * Summary:
2107:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *  If a finger is present on a touchpad, this function calculates the X and Y
2108:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *  position of the finger by calculating the centroids within touchpad specified
2109:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *  range. The X and Y positions are calculated according to the API resolutions set in the
2110:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *  CapSense customizer. Returns 1 if a finger is on the touchpad.
2111:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *  The position filter is applied to the result if enabled.
2112:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *  This function is available only if a touch pad is defined by the CapSense
2113:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *  customizer.
2114:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *
2115:.\Generated_Source\PSoC4/Slider_CSHL.c ****     * Parameters:
2116:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *  widget:  Widget number. 
2117:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *  For every touchpad widget there are defines in this format:
2118:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *  #define Slider_"widget_name"__TP            5
2119:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *
2120:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *  pos:     Pointer to the array of two uint16 elements, where result
2121:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *  result of calculation of X and Y position are stored.
2122:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *  pos[0u]  - position of X
2123:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *  pos[1u]  - position of Y
2124:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *
2125:.\Generated_Source\PSoC4/Slider_CSHL.c ****     * Return:
2126:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *  Returns a 1 if a finger is on the touch pad, 0 - if not.
2127:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 60


2128:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	* Global Variables:
2129:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*  None.
2130:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*
2131:.\Generated_Source\PSoC4/Slider_CSHL.c ****     * Side Effects:
2132:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *   There are no checks of the widget type argument provided to this function.
2133:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *   The unproper widget type provided will cause unexpected position
2134:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *   calculations.
2135:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *
2136:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *******************************************************************************/
2137:.\Generated_Source\PSoC4/Slider_CSHL.c ****     uint32 Slider_GetTouchCentroidPos(uint32 widget, uint16* pos)
2138:.\Generated_Source\PSoC4/Slider_CSHL.c ****     {
2139:.\Generated_Source\PSoC4/Slider_CSHL.c ****         #if (0u != Slider_TOUCH_PADS_POS_FILTERS_MASK)
2140:.\Generated_Source\PSoC4/Slider_CSHL.c ****             uint8 posXIndex;
2141:.\Generated_Source\PSoC4/Slider_CSHL.c ****             uint8 posYIndex;
2142:.\Generated_Source\PSoC4/Slider_CSHL.c ****             uint8 firstTimeIndex = Slider_posFiltersData[widget];
2143:.\Generated_Source\PSoC4/Slider_CSHL.c ****             uint8 posFiltersMask = Slider_posFiltersMask[widget];
2144:.\Generated_Source\PSoC4/Slider_CSHL.c ****         #endif /* (0u != Slider_TOUCH_PADS_POS_FILTERS_MASK) */
2145:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
2146:.\Generated_Source\PSoC4/Slider_CSHL.c ****         #if ((0u != (Slider_MEDIAN_FILTER & Slider_TOUCH_PADS_POS_FILTERS_MASK)) || \
2147:.\Generated_Source\PSoC4/Slider_CSHL.c ****              (0u != (Slider_AVERAGING_FILTER & Slider_TOUCH_PADS_POS_FILTERS_MASK)))
2148:.\Generated_Source\PSoC4/Slider_CSHL.c ****             uint16 tempPos;
2149:.\Generated_Source\PSoC4/Slider_CSHL.c ****         #endif /* ((0u != (Slider_MEDIAN_FILTER & Slider_TOUCH_PADS_POS_FILTERS_MASK)) || \
2150:.\Generated_Source\PSoC4/Slider_CSHL.c ****                *   (0u != (Slider_AVERAGING_FILTER & Slider_TOUCH_PADS_POS_FILTERS_MASK)))
2151:.\Generated_Source\PSoC4/Slider_CSHL.c ****                */
2152:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
2153:.\Generated_Source\PSoC4/Slider_CSHL.c ****         uint8 MaxX;
2154:.\Generated_Source\PSoC4/Slider_CSHL.c ****         uint8 MaxY;
2155:.\Generated_Source\PSoC4/Slider_CSHL.c ****         uint8 posX;
2156:.\Generated_Source\PSoC4/Slider_CSHL.c ****         uint8 posY;
2157:.\Generated_Source\PSoC4/Slider_CSHL.c ****         uint32 touch = 0u;
2158:.\Generated_Source\PSoC4/Slider_CSHL.c ****         uint8 offset = Slider_rawDataIndex[widget];
2159:.\Generated_Source\PSoC4/Slider_CSHL.c ****         uint8 count = Slider_numberOfSensors[widget];
2160:.\Generated_Source\PSoC4/Slider_CSHL.c ****         
2161:.\Generated_Source\PSoC4/Slider_CSHL.c ****         /* Find Maximum within X centroid */
2162:.\Generated_Source\PSoC4/Slider_CSHL.c ****         #if (Slider_IS_DIPLEX_SLIDER)
2163:.\Generated_Source\PSoC4/Slider_CSHL.c ****             MaxX = Slider_FindMaximum(offset, count, Slider_fingerThreshold[widget], 0u);
2164:.\Generated_Source\PSoC4/Slider_CSHL.c ****         #else
2165:.\Generated_Source\PSoC4/Slider_CSHL.c ****             MaxX = Slider_FindMaximum(offset, count, Slider_fingerThreshold[widget]);
2166:.\Generated_Source\PSoC4/Slider_CSHL.c ****         #endif /* (Slider_IS_DIPLEX_SLIDER) */
2167:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
2168:.\Generated_Source\PSoC4/Slider_CSHL.c ****         if (MaxX != Slider_MAXIMUM_CENTROID)
2169:.\Generated_Source\PSoC4/Slider_CSHL.c ****         {
2170:.\Generated_Source\PSoC4/Slider_CSHL.c ****             offset = Slider_rawDataIndex[widget + 1u];
2171:.\Generated_Source\PSoC4/Slider_CSHL.c ****             count = Slider_numberOfSensors[widget + 1u];
2172:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
2173:.\Generated_Source\PSoC4/Slider_CSHL.c ****             /* Find Maximum within Y centroid */
2174:.\Generated_Source\PSoC4/Slider_CSHL.c ****             #if (Slider_IS_DIPLEX_SLIDER)
2175:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 MaxY = Slider_FindMaximum(offset, count, Slider_fingerThreshold[widget + 1u], 0u);
2176:.\Generated_Source\PSoC4/Slider_CSHL.c ****             #else
2177:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 MaxY = Slider_FindMaximum(offset, count, Slider_fingerThreshold[widget + 1u]);
2178:.\Generated_Source\PSoC4/Slider_CSHL.c ****             #endif /* (Slider_IS_DIPLEX_SLIDER) */
2179:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
2180:.\Generated_Source\PSoC4/Slider_CSHL.c ****             if (MaxY != Slider_MAXIMUM_CENTROID)
2181:.\Generated_Source\PSoC4/Slider_CSHL.c ****             {
2182:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 /* X and Y maximums are found = true touch */
2183:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 touch = 1u;
2184:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 61


2185:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 /* Calculate Y centroid */
2186:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 posY = Slider_CalcCentroid(MaxY, offset, count, 
2187:.\Generated_Source\PSoC4/Slider_CSHL.c ****                             Slider_centroidMult[widget + 1u], Slider_noiseThreshold[widget + 1u]);
2188:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 
2189:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 /* Calculate X centroid */
2190:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 offset = Slider_rawDataIndex[widget];
2191:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 count = Slider_numberOfSensors[widget];
2192:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 
2193:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 posX = Slider_CalcCentroid(MaxX, offset, count, 
2194:.\Generated_Source\PSoC4/Slider_CSHL.c ****                             Slider_centroidMult[widget],Slider_noiseThreshold[widget]);
2195:.\Generated_Source\PSoC4/Slider_CSHL.c ****     
2196:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 #if (0u != Slider_TOUCH_PADS_POS_FILTERS_MASK)
2197:.\Generated_Source\PSoC4/Slider_CSHL.c ****                     /* Check if this TP has enabled filters */
2198:.\Generated_Source\PSoC4/Slider_CSHL.c ****                     if (0u != (posFiltersMask & Slider_ANY_POS_FILTER))
2199:.\Generated_Source\PSoC4/Slider_CSHL.c ****                     {
2200:.\Generated_Source\PSoC4/Slider_CSHL.c ****                         /* Calculate position to store filters data */
2201:.\Generated_Source\PSoC4/Slider_CSHL.c ****                         posXIndex  = firstTimeIndex + 1u;
2202:.\Generated_Source\PSoC4/Slider_CSHL.c ****                         posYIndex  = Slider_posFiltersData[widget + 1u];
2203:.\Generated_Source\PSoC4/Slider_CSHL.c ****                         
2204:.\Generated_Source\PSoC4/Slider_CSHL.c ****                         if (0u == Slider_posFiltersData[firstTimeIndex])
2205:.\Generated_Source\PSoC4/Slider_CSHL.c ****                         {
2206:.\Generated_Source\PSoC4/Slider_CSHL.c ****                             /* Init filters */
2207:.\Generated_Source\PSoC4/Slider_CSHL.c ****                             Slider_posFiltersData[posXIndex] = posX;
2208:.\Generated_Source\PSoC4/Slider_CSHL.c ****                             Slider_posFiltersData[posYIndex] = posY;
2209:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
2210:.\Generated_Source\PSoC4/Slider_CSHL.c ****                             #if((0u != (Slider_MEDIAN_FILTER & \
2211:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                         Slider_TOUCH_PADS_POS_FILTERS_MASK))|| \
2212:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                 (0u != (Slider_AVERAGING_FILTER & \
2213:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                         Slider_TOUCH_PADS_POS_FILTERS_MASK)))
2214:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
2215:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                 if ( (0u != (posFiltersMask & Slider_MEDIAN_FILTER)) || 
2216:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                      (0u != (posFiltersMask & Slider_AVERAGING_FILTER)) )
2217:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                 {
2218:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                     Slider_posFiltersData[posXIndex + 1u] = posX;
2219:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                     Slider_posFiltersData[posYIndex + 1u] = posY;
2220:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                 }
2221:.\Generated_Source\PSoC4/Slider_CSHL.c ****                             #endif /* ((0u != (Slider_MEDIAN_FILTER & \
2222:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                    *           Slider_TOUCH_PADS_POS_FILTERS_MASK)) || \
2223:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                    *    (0u != (Slider_AVERAGING_FILTER & \
2224:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                    *            Slider_TOUCH_PADS_POS_FILTERS_MASK)))
2225:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                    */
2226:.\Generated_Source\PSoC4/Slider_CSHL.c ****                             
2227:.\Generated_Source\PSoC4/Slider_CSHL.c ****                             Slider_posFiltersData[firstTimeIndex] = 1u;
2228:.\Generated_Source\PSoC4/Slider_CSHL.c ****                         }
2229:.\Generated_Source\PSoC4/Slider_CSHL.c ****                         else
2230:.\Generated_Source\PSoC4/Slider_CSHL.c ****                         {
2231:.\Generated_Source\PSoC4/Slider_CSHL.c ****                             /* Do filtering */
2232:.\Generated_Source\PSoC4/Slider_CSHL.c ****                             #if (0u != (Slider_MEDIAN_FILTER & Slider_TOUCH_PADS_POS_FILTERS_MASK))
2233:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                 if (0u != (posFiltersMask & Slider_MEDIAN_FILTER))
2234:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                 {
2235:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                     tempPos = posX;
2236:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                     posX = (uint8) Slider_MedianFilter(posX,
2237:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                                                       Slider_posFiltersData[posXInd
2238:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                                                       Slider_posFiltersData[posXInd
2239:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                     Slider_posFiltersData[posXIndex + 1u] = 
2240:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                                                              Slider_posFiltersData[
2241:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                     Slider_posFiltersData[posXIndex] = tempPos;
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 62


2242:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                     
2243:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                     tempPos = posY;
2244:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                     posY = (uint8) Slider_MedianFilter(posY,
2245:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                                                        Slider_posFiltersData[posYIn
2246:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                                                        Slider_posFiltersData[posYIn
2247:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                     Slider_posFiltersData[posYIndex + 1u] = 
2248:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                                                              Slider_posFiltersData[
2249:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                     Slider_posFiltersData[posYIndex] = tempPos;
2250:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                 }
2251:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                 
2252:.\Generated_Source\PSoC4/Slider_CSHL.c ****                             #endif /* (0u != (Slider_MEDIAN_FILTER & \
2253:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                    *          Slider_TOUCH_PADS_POS_FILTERS_MASK))
2254:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                    */
2255:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
2256:.\Generated_Source\PSoC4/Slider_CSHL.c ****                             #if(0u !=(Slider_AVERAGING_FILTER & Slider_TOUCH_PADS_POS_FILTERS_MASK)
2257:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                 if (0u != (posFiltersMask & Slider_AVERAGING_FILTER))
2258:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                 {
2259:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                     tempPos = posX;
2260:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                     posX = (uint8) Slider_AveragingFilter(posX,
2261:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                                                        Slider_posFiltersData[posXIn
2262:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                                                        Slider_posFiltersData[posXIn
2263:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                     Slider_posFiltersData[posXIndex + 1u] = 
2264:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                                                              Slider_posFiltersData[
2265:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                     Slider_posFiltersData[posXIndex] = tempPos;
2266:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                     
2267:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                     tempPos = posY;
2268:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                     posY = (uint8) Slider_AveragingFilter(posY, 
2269:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                                                       Slider_posFiltersData[posYInd
2270:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                                                       Slider_posFiltersData[posYInd
2271:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                     Slider_posFiltersData[posYIndex + 1u] = 
2272:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                                                             Slider_posFiltersData[p
2273:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                     Slider_posFiltersData[posYIndex] = tempPos;
2274:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                 }
2275:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
2276:.\Generated_Source\PSoC4/Slider_CSHL.c ****                             #endif /* (0u != (Slider_AVERAGING_FILTER & \
2277:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                    *           Slider_TOUCH_PADS_POS_FILTERS_MASK))
2278:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                    */
2279:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
2280:.\Generated_Source\PSoC4/Slider_CSHL.c ****                             #if (0u != (Slider_IIR2_FILTER & Slider_TOUCH_PADS_POS_FILTERS_MASK))
2281:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                 if (0u != (posFiltersMask & Slider_IIR2_FILTER))
2282:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                 {
2283:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                     posX = (uint8) Slider_IIR2Filter(posX, 
2284:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                                                            Slider_posFiltersData[po
2285:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                     Slider_posFiltersData[posXIndex] = posX;
2286:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                     
2287:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                     posY = (uint8) Slider_IIR2Filter(posY, 
2288:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                                                             Slider_posFiltersData[p
2289:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                     Slider_posFiltersData[posYIndex] = posY;
2290:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                 }
2291:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                 
2292:.\Generated_Source\PSoC4/Slider_CSHL.c ****                             #endif /* (0u != (Slider_IIR2_FILTER & \
2293:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                    *          Slider_TOUCH_PADS_POS_FILTERS_MASK))
2294:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                    */
2295:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
2296:.\Generated_Source\PSoC4/Slider_CSHL.c ****                             #if (0u != (Slider_IIR4_FILTER & Slider_TOUCH_PADS_POS_FILTERS_MASK))
2297:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                 if (0u != (posFiltersMask & Slider_IIR4_FILTER))
2298:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                 {
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 63


2299:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                     posX = (uint8) Slider_IIR4Filter((uint16)posX,
2300:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                                                     (uint16)Slider_posFiltersData[p
2301:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                     Slider_posFiltersData[posXIndex] = posX;
2302:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
2303:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                     posY = (uint8) Slider_IIR4Filter((uint16)posY,
2304:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                                                     (uint16)Slider_posFiltersData[p
2305:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                     Slider_posFiltersData[posYIndex] = posY;
2306:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                 }
2307:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                 
2308:.\Generated_Source\PSoC4/Slider_CSHL.c ****                             #endif /* (0u != (Slider_IIR4_FILTER & \
2309:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                    *           Slider_TOUCH_PADS_POS_FILTERS_MASK))
2310:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                    */
2311:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
2312:.\Generated_Source\PSoC4/Slider_CSHL.c ****                             #if (0u != (Slider_JITTER_FILTER & Slider_TOUCH_PADS_POS_FILTERS_MASK))
2313:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                 if (0u != (posFiltersMask & Slider_JITTER_FILTER))
2314:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                     {
2315:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                         posX = (uint8) Slider_JitterFilter(posX, 
2316:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                                                             Slider_posFiltersData[p
2317:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                         Slider_posFiltersData[posXIndex] = posX;
2318:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                         
2319:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                         posY = (uint8) Slider_JitterFilter(posY, 
2320:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                                                             Slider_posFiltersData[p
2321:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                         Slider_posFiltersData[posYIndex] = posY;
2322:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                     }
2323:.\Generated_Source\PSoC4/Slider_CSHL.c ****                             #endif /* (0u != (Slider_JITTER_FILTER & \
2324:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                    *           Slider_TOUCH_PADS_POS_FILTERS_MASK))
2325:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                    */
2326:.\Generated_Source\PSoC4/Slider_CSHL.c ****                         }
2327:.\Generated_Source\PSoC4/Slider_CSHL.c ****                     }
2328:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 #endif /* (0u != Slider_TOUCH_PADS_POS_FILTERS_MASK) */
2329:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
2330:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 /* Save positions */
2331:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 pos[0u] = posX;
2332:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 pos[1u] = posY;
2333:.\Generated_Source\PSoC4/Slider_CSHL.c ****             }
2334:.\Generated_Source\PSoC4/Slider_CSHL.c ****         }
2335:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
2336:.\Generated_Source\PSoC4/Slider_CSHL.c ****         #if (0u != Slider_TOUCH_PADS_POS_FILTERS_MASK)
2337:.\Generated_Source\PSoC4/Slider_CSHL.c ****             if(touch == 0u)
2338:.\Generated_Source\PSoC4/Slider_CSHL.c ****             {
2339:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 /* Reset filters */
2340:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 if ((posFiltersMask & Slider_ANY_POS_FILTER) != 0u)
2341:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 {
2342:.\Generated_Source\PSoC4/Slider_CSHL.c ****                     Slider_posFiltersData[firstTimeIndex] = 0u;
2343:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 }
2344:.\Generated_Source\PSoC4/Slider_CSHL.c ****             }
2345:.\Generated_Source\PSoC4/Slider_CSHL.c ****         #endif /* (0u != Slider_TOUCH_PADS_POS_FILTERS_MASK) */
2346:.\Generated_Source\PSoC4/Slider_CSHL.c ****         
2347:.\Generated_Source\PSoC4/Slider_CSHL.c ****         return (touch);
2348:.\Generated_Source\PSoC4/Slider_CSHL.c ****     }
2349:.\Generated_Source\PSoC4/Slider_CSHL.c **** #endif /* (Slider_TOTAL_TOUCH_PADS_BASIC_COUNT > 0u) */
2350:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
2351:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
2352:.\Generated_Source\PSoC4/Slider_CSHL.c **** #if ( (0u != (Slider_RAW_FILTER_MASK & Slider_MEDIAN_FILTER)) || \
2353:.\Generated_Source\PSoC4/Slider_CSHL.c ****       (0u != (Slider_POS_FILTERS_MASK & Slider_MEDIAN_FILTER)) || \
2354:.\Generated_Source\PSoC4/Slider_CSHL.c ****       ((Slider_TUNING_METHOD == Slider__TUNING_AUTO)) )
2355:.\Generated_Source\PSoC4/Slider_CSHL.c ****     /*******************************************************************************
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 64


2356:.\Generated_Source\PSoC4/Slider_CSHL.c ****     * Function Name: Slider_MedianFilter
2357:.\Generated_Source\PSoC4/Slider_CSHL.c ****     ********************************************************************************
2358:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *
2359:.\Generated_Source\PSoC4/Slider_CSHL.c ****     * Summary:
2360:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *  This is the Median filter function. 
2361:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *  The median filter looks at the three most recent samples and reports the 
2362:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *  median value.
2363:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *
2364:.\Generated_Source\PSoC4/Slider_CSHL.c ****     * Parameters:
2365:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *  x1:  Current value.
2366:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *  x2:  Previous value.
2367:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *  x3:  Before previous value.
2368:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *
2369:.\Generated_Source\PSoC4/Slider_CSHL.c ****     * Return:
2370:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *  Returns filtered value.
2371:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*
2372:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	* Global Variables:
2373:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*  None.
2374:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*
2375:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	* Side Effects:
2376:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*  None
2377:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	* 
2378:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *******************************************************************************/
2379:.\Generated_Source\PSoC4/Slider_CSHL.c ****     uint16 Slider_MedianFilter(uint16 x1, uint16 x2, uint16 x3)
2380:.\Generated_Source\PSoC4/Slider_CSHL.c ****     {
 1220              		.loc 1 2380 0
 1221              		.cfi_startproc
 1222              	.LVL139:
2381:.\Generated_Source\PSoC4/Slider_CSHL.c ****         uint16 tmp;
2382:.\Generated_Source\PSoC4/Slider_CSHL.c ****         
2383:.\Generated_Source\PSoC4/Slider_CSHL.c ****         if (x1 > x2)
 1223              		.loc 1 2383 0
 1224 0000 8842     		cmp	r0, r1
 1225 0002 02D9     		bls	.L113
 1226 0004 031C     		mov	r3, r0
2384:.\Generated_Source\PSoC4/Slider_CSHL.c ****         {
2385:.\Generated_Source\PSoC4/Slider_CSHL.c ****             tmp = x2;
2386:.\Generated_Source\PSoC4/Slider_CSHL.c ****             x2 = x1;
2387:.\Generated_Source\PSoC4/Slider_CSHL.c ****             x1 = tmp;
 1227              		.loc 1 2387 0
 1228 0006 081C     		mov	r0, r1
 1229              	.LVL140:
2386:.\Generated_Source\PSoC4/Slider_CSHL.c ****             x2 = x1;
 1230              		.loc 1 2386 0
 1231 0008 191C     		mov	r1, r3
 1232              	.LVL141:
 1233              	.L113:
2388:.\Generated_Source\PSoC4/Slider_CSHL.c ****         }
2389:.\Generated_Source\PSoC4/Slider_CSHL.c ****         
2390:.\Generated_Source\PSoC4/Slider_CSHL.c ****         if (x2 > x3)
 1234              		.loc 1 2390 0
 1235 000a 9142     		cmp	r1, r2
 1236 000c 00D9     		bls	.L114
2391:.\Generated_Source\PSoC4/Slider_CSHL.c ****         {
2392:.\Generated_Source\PSoC4/Slider_CSHL.c ****             x2 = x3;
 1237              		.loc 1 2392 0
 1238 000e 111C     		mov	r1, r2
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 65


 1239              	.LVL142:
 1240              	.L114:
2393:.\Generated_Source\PSoC4/Slider_CSHL.c ****         }
2394:.\Generated_Source\PSoC4/Slider_CSHL.c ****         
2395:.\Generated_Source\PSoC4/Slider_CSHL.c ****         return ((x1 > x2) ? x1 : x2);
 1241              		.loc 1 2395 0
 1242 0010 0B1C     		add	r3, r1, #0
 1243 0012 8142     		cmp	r1, r0
 1244 0014 00D2     		bcs	.L115
 1245 0016 031C     		add	r3, r0, #0
 1246              	.L115:
 1247 0018 98B2     		uxth	r0, r3
 1248              	.LVL143:
2396:.\Generated_Source\PSoC4/Slider_CSHL.c ****     }
 1249              		.loc 1 2396 0
 1250              		@ sp needed
 1251 001a 7047     		bx	lr
 1252              		.cfi_endproc
 1253              	.LFE66:
 1254              		.size	Slider_MedianFilter, .-Slider_MedianFilter
 1255              		.section	.text.Slider_IIR4Filter,"ax",%progbits
 1256              		.align	2
 1257              		.global	Slider_IIR4Filter
 1258              		.code	16
 1259              		.thumb_func
 1260              		.type	Slider_IIR4Filter, %function
 1261              	Slider_IIR4Filter:
 1262              	.LFB67:
2397:.\Generated_Source\PSoC4/Slider_CSHL.c **** #endif /* ( (0u != (Slider_RAW_FILTER_MASK & Slider_MEDIAN_FILTER)) || \
2398:.\Generated_Source\PSoC4/Slider_CSHL.c ****       (0u != (Slider_POS_FILTERS_MASK & Slider_MEDIAN_FILTER)) || \
2399:.\Generated_Source\PSoC4/Slider_CSHL.c ****       ((Slider_TUNING_METHOD == Slider__TUNING_AUTO)) ) */
2400:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
2401:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
2402:.\Generated_Source\PSoC4/Slider_CSHL.c **** #if ( (0u != (Slider_RAW_FILTER_MASK & Slider_AVERAGING_FILTER)) || \
2403:.\Generated_Source\PSoC4/Slider_CSHL.c ****       (0u != (Slider_POS_FILTERS_MASK & Slider_AVERAGING_FILTER)) )
2404:.\Generated_Source\PSoC4/Slider_CSHL.c ****     /*******************************************************************************
2405:.\Generated_Source\PSoC4/Slider_CSHL.c ****     * Function Name: Slider_AveragingFilter
2406:.\Generated_Source\PSoC4/Slider_CSHL.c ****     ********************************************************************************
2407:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *
2408:.\Generated_Source\PSoC4/Slider_CSHL.c ****     * Summary:
2409:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *  This is the Averaging filter function.
2410:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *  The averaging filter looks at the three most recent samples of a position and
2411:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *  reports the averaging value.
2412:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *
2413:.\Generated_Source\PSoC4/Slider_CSHL.c ****     * Parameters:
2414:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *  x1:  Current value.
2415:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *  x2:  Previous value.
2416:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *  x3:  Before previous value.
2417:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *
2418:.\Generated_Source\PSoC4/Slider_CSHL.c ****     * Return:
2419:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *  Returns filtered value.
2420:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*
2421:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	* Global Variables:
2422:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*  None.
2423:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*
2424:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	* Side Effects:
2425:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*  None
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 66


2426:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	* 
2427:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *******************************************************************************/
2428:.\Generated_Source\PSoC4/Slider_CSHL.c ****     uint16 Slider_AveragingFilter(uint16 x1, uint16 x2, uint16 x3)
2429:.\Generated_Source\PSoC4/Slider_CSHL.c ****     {
2430:.\Generated_Source\PSoC4/Slider_CSHL.c ****         uint32 tmp = ((uint32)x1 + (uint32)x2 + (uint32)x3) / 3u;
2431:.\Generated_Source\PSoC4/Slider_CSHL.c ****         
2432:.\Generated_Source\PSoC4/Slider_CSHL.c ****         return ((uint16) tmp);
2433:.\Generated_Source\PSoC4/Slider_CSHL.c ****     }
2434:.\Generated_Source\PSoC4/Slider_CSHL.c **** #endif /* ( (0u != (Slider_RAW_FILTER_MASK & Slider_AVERAGING_FILTER) || \
2435:.\Generated_Source\PSoC4/Slider_CSHL.c ****       (0u != (Slider_POS_FILTERS_MASK & Slider_AVERAGING_FILTER) ) */
2436:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
2437:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
2438:.\Generated_Source\PSoC4/Slider_CSHL.c **** #if ( (0u != (Slider_RAW_FILTER_MASK & Slider_IIR2_FILTER)) || \
2439:.\Generated_Source\PSoC4/Slider_CSHL.c ****       (0u != (Slider_POS_FILTERS_MASK & Slider_IIR2_FILTER)) )
2440:.\Generated_Source\PSoC4/Slider_CSHL.c ****     /*******************************************************************************
2441:.\Generated_Source\PSoC4/Slider_CSHL.c ****     * Function Name: Slider_IIR2Filter
2442:.\Generated_Source\PSoC4/Slider_CSHL.c ****     ********************************************************************************
2443:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *
2444:.\Generated_Source\PSoC4/Slider_CSHL.c ****     * Summary:
2445:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *  This is the IIR1/2 filter function. IIR1/2 = 1/2current + 1/2previous.
2446:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *
2447:.\Generated_Source\PSoC4/Slider_CSHL.c ****     * Parameters:
2448:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *  x1:  Current value.
2449:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *  x2:  Previous value.
2450:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *
2451:.\Generated_Source\PSoC4/Slider_CSHL.c ****     * Return:
2452:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *  Returns filtered value.
2453:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*
2454:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	* Global Variables:
2455:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*  None.
2456:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*
2457:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	* Side Effects:
2458:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*  None
2459:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	* 
2460:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *******************************************************************************/
2461:.\Generated_Source\PSoC4/Slider_CSHL.c ****     uint16 Slider_IIR2Filter(uint16 x1, uint16 x2)
2462:.\Generated_Source\PSoC4/Slider_CSHL.c ****     {
2463:.\Generated_Source\PSoC4/Slider_CSHL.c ****         uint32 tmp;
2464:.\Generated_Source\PSoC4/Slider_CSHL.c ****         
2465:.\Generated_Source\PSoC4/Slider_CSHL.c ****         /* IIR = 1/2 Current Value+ 1/2 Previous Value */
2466:.\Generated_Source\PSoC4/Slider_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
2467:.\Generated_Source\PSoC4/Slider_CSHL.c ****         tmp >>= 1u;
2468:.\Generated_Source\PSoC4/Slider_CSHL.c ****     
2469:.\Generated_Source\PSoC4/Slider_CSHL.c ****         return ((uint16) tmp);
2470:.\Generated_Source\PSoC4/Slider_CSHL.c ****     }
2471:.\Generated_Source\PSoC4/Slider_CSHL.c **** #endif /* ( (0u != (Slider_RAW_FILTER_MASK & Slider_IIR2_FILTER)) || \
2472:.\Generated_Source\PSoC4/Slider_CSHL.c ****        *    (0u != (Slider_POS_FILTERS_MASK & Slider_IIR2_FILTER)) )
2473:.\Generated_Source\PSoC4/Slider_CSHL.c ****        */
2474:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
2475:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
2476:.\Generated_Source\PSoC4/Slider_CSHL.c **** #if ( (0u != (Slider_RAW_FILTER_MASK & Slider_IIR4_FILTER)) || \
2477:.\Generated_Source\PSoC4/Slider_CSHL.c ****       (0u != (Slider_POS_FILTERS_MASK & Slider_IIR4_FILTER)) )
2478:.\Generated_Source\PSoC4/Slider_CSHL.c ****     /*******************************************************************************
2479:.\Generated_Source\PSoC4/Slider_CSHL.c ****     * Function Name: Slider_IIR4Filter
2480:.\Generated_Source\PSoC4/Slider_CSHL.c ****     ********************************************************************************
2481:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *
2482:.\Generated_Source\PSoC4/Slider_CSHL.c ****     * Summary:
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 67


2483:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *  This is the IIR1/4 filter function. IIR1/4 = 1/4current + 3/4previous.
2484:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *
2485:.\Generated_Source\PSoC4/Slider_CSHL.c ****     * Parameters:
2486:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *  x1:  Current value.
2487:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *  x2:  Previous value.
2488:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *
2489:.\Generated_Source\PSoC4/Slider_CSHL.c ****     * Return:
2490:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *  Returns a filtered value.
2491:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*
2492:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	* Global Variables:
2493:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*  None.
2494:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*
2495:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	* Side Effects:
2496:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*  None
2497:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	* 
2498:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *******************************************************************************/
2499:.\Generated_Source\PSoC4/Slider_CSHL.c ****     uint16 Slider_IIR4Filter(uint16 x1, uint16 x2)
2500:.\Generated_Source\PSoC4/Slider_CSHL.c ****     {
 1263              		.loc 1 2500 0
 1264              		.cfi_startproc
 1265              	.LVL144:
2501:.\Generated_Source\PSoC4/Slider_CSHL.c ****         uint32 tmp;
2502:.\Generated_Source\PSoC4/Slider_CSHL.c ****         
2503:.\Generated_Source\PSoC4/Slider_CSHL.c ****         /* IIR = 1/4 Current Value + 3/4 Previous Value */
2504:.\Generated_Source\PSoC4/Slider_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
 1266              		.loc 1 2504 0
 1267 0000 4018     		add	r0, r0, r1
 1268              	.LVL145:
2505:.\Generated_Source\PSoC4/Slider_CSHL.c ****         tmp += ((uint32)x2 << 1u);
 1269              		.loc 1 2505 0
 1270 0002 4900     		lsl	r1, r1, #1
 1271              	.LVL146:
 1272 0004 0818     		add	r0, r1, r0
 1273              	.LVL147:
2506:.\Generated_Source\PSoC4/Slider_CSHL.c ****         tmp >>= 2u;
2507:.\Generated_Source\PSoC4/Slider_CSHL.c ****         
2508:.\Generated_Source\PSoC4/Slider_CSHL.c ****         return ((uint16) tmp);
 1274              		.loc 1 2508 0
 1275 0006 8008     		lsr	r0, r0, #2
 1276              	.LVL148:
2509:.\Generated_Source\PSoC4/Slider_CSHL.c ****     }
 1277              		.loc 1 2509 0
 1278              		@ sp needed
 1279 0008 7047     		bx	lr
 1280              		.cfi_endproc
 1281              	.LFE67:
 1282              		.size	Slider_IIR4Filter, .-Slider_IIR4Filter
 1283 000a C046     		.section	.text.Slider_UpdateBaselineNoThreshold,"ax",%progbits
 1284              		.align	2
 1285              		.global	Slider_UpdateBaselineNoThreshold
 1286              		.code	16
 1287              		.thumb_func
 1288              		.type	Slider_UpdateBaselineNoThreshold, %function
 1289              	Slider_UpdateBaselineNoThreshold:
 1290              	.LFB39:
 355:.\Generated_Source\PSoC4/Slider_CSHL.c **** {
 1291              		.loc 1 355 0
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 68


 1292              		.cfi_startproc
 1293              	.LVL149:
 1294 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1295              		.cfi_def_cfa_offset 24
 1296              		.cfi_offset 3, -24
 1297              		.cfi_offset 4, -20
 1298              		.cfi_offset 5, -16
 1299              		.cfi_offset 6, -12
 1300              		.cfi_offset 7, -8
 1301              		.cfi_offset 14, -4
 1302 0002 4F46     		mov	r7, r9
 1303 0004 4646     		mov	r6, r8
 1304 0006 C0B4     		push	{r6, r7}
 1305              		.cfi_def_cfa_offset 32
 1306              		.cfi_offset 8, -32
 1307              		.cfi_offset 9, -28
 1308 0008 041C     		mov	r4, r0
 360:.\Generated_Source\PSoC4/Slider_CSHL.c ****     uint8 widget = Slider_widgetNumber[sensor];
 1309              		.loc 1 360 0
 1310 000a 394B     		ldr	r3, .L130
 1311 000c 1F5C     		ldrb	r7, [r3, r0]
 361:.\Generated_Source\PSoC4/Slider_CSHL.c ****     uint8 noiseThreshold = Slider_noiseThreshold[widget];
 1312              		.loc 1 361 0
 1313 000e 394B     		ldr	r3, .L130+4
 1314 0010 DB5D     		ldrb	r3, [r3, r7]
 1315 0012 9846     		mov	r8, r3
 1316              	.LVL150:
 369:.\Generated_Source\PSoC4/Slider_CSHL.c ****     filteredRawData = Slider_sensorRaw[sensor];
 1317              		.loc 1 369 0
 1318 0014 4200     		lsl	r2, r0, #1
 1319 0016 384B     		ldr	r3, .L130+8
 1320 0018 D55A     		ldrh	r5, [r2, r3]
 1321              	.LVL151:
 372:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	if(Slider_enableRawFilters != 0u)
 1322              		.loc 1 372 0
 1323 001a 384B     		ldr	r3, .L130+12
 1324              	.LVL152:
 1325 001c 5B7A     		ldrb	r3, [r3, #9]
 1326 001e 002B     		cmp	r3, #0
 1327 0020 08D0     		beq	.L120
 393:.\Generated_Source\PSoC4/Slider_CSHL.c **** 			filteredRawData = Slider_IIR4Filter(filteredRawData, Slider_rawFilterData1[sensor]);
 1328              		.loc 1 393 0
 1329 0022 374E     		ldr	r6, .L130+16
 1330 0024 9146     		mov	r9, r2
 1331 0026 915B     		ldrh	r1, [r2, r6]
 1332 0028 281C     		mov	r0, r5
 1333              	.LVL153:
 1334 002a FFF7FEFF 		bl	Slider_IIR4Filter
 1335              	.LVL154:
 1336 002e 051C     		mov	r5, r0
 1337              	.LVL155:
 394:.\Generated_Source\PSoC4/Slider_CSHL.c **** 			Slider_rawFilterData1[sensor] = filteredRawData;
 1338              		.loc 1 394 0
 1339 0030 4B46     		mov	r3, r9
 1340 0032 9853     		strh	r0, [r3, r6]
 1341              	.LVL156:
 1342              	.L120:
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 69


 415:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	    MeasureNoiseEnvelope_P4_v2_20(&Slider_config, (uint8)sensor, Slider_sensorRaw);
 1343              		.loc 1 415 0
 1344 0034 E1B2     		uxtb	r1, r4
 1345 0036 3348     		ldr	r0, .L130+20
 1346 0038 2F4A     		ldr	r2, .L130+8
 1347 003a FFF7FEFF 		bl	MeasureNoiseEnvelope_P4_v2_20
 1348              	.LVL157:
 420:.\Generated_Source\PSoC4/Slider_CSHL.c ****     if(filteredRawData >= Slider_sensorBaseline[sensor])
 1349              		.loc 1 420 0
 1350 003e 6300     		lsl	r3, r4, #1
 1351 0040 314A     		ldr	r2, .L130+24
 1352 0042 9B5A     		ldrh	r3, [r3, r2]
 1353 0044 AB42     		cmp	r3, r5
 1354 0046 07D8     		bhi	.L121
 422:.\Generated_Source\PSoC4/Slider_CSHL.c **** 		Slider_lowBaselineResetCnt[sensor] = 0u;	
 1355              		.loc 1 422 0
 1356 0048 0021     		mov	r1, #0
 1357 004a 304A     		ldr	r2, .L130+28
 1358 004c 1155     		strb	r1, [r2, r4]
 423:.\Generated_Source\PSoC4/Slider_CSHL.c ****         tempRaw = filteredRawData - Slider_sensorBaseline[sensor];
 1359              		.loc 1 423 0
 1360 004e EE1A     		sub	r6, r5, r3
 1361 0050 B6B2     		uxth	r6, r6
 1362              	.LVL158:
 424:.\Generated_Source\PSoC4/Slider_CSHL.c ****         sign = 1u;    /* Positive difference - Calculate the Signal */
 1363              		.loc 1 424 0
 1364 0052 0122     		mov	r2, #1
 1365 0054 9146     		mov	r9, r2
 1366 0056 03E0     		b	.L122
 1367              	.LVL159:
 1368              	.L121:
 428:.\Generated_Source\PSoC4/Slider_CSHL.c ****         tempRaw = Slider_sensorBaseline[sensor] - filteredRawData;
 1369              		.loc 1 428 0
 1370 0058 5E1B     		sub	r6, r3, r5
 1371 005a B6B2     		uxth	r6, r6
 1372              	.LVL160:
 429:.\Generated_Source\PSoC4/Slider_CSHL.c ****         sign = 0u;    /* Negative difference - Do NOT calculate the Signal */
 1373              		.loc 1 429 0
 1374 005c 0022     		mov	r2, #0
 1375 005e 9146     		mov	r9, r2
 1376              	.LVL161:
 1377              	.L122:
 433:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	if((sign == 0u) && (tempRaw > (uint16) Slider_negativeNoiseThreshold[widget]))
 1378              		.loc 1 433 0
 1379 0060 4A46     		mov	r2, r9
 1380 0062 002A     		cmp	r2, #0
 1381 0064 15D1     		bne	.L123
 433:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	if((sign == 0u) && (tempRaw > (uint16) Slider_negativeNoiseThreshold[widget]))
 1382              		.loc 1 433 0 is_stmt 0 discriminator 1
 1383 0066 2A4A     		ldr	r2, .L130+32
 1384 0068 D25D     		ldrb	r2, [r2, r7]
 1385 006a B242     		cmp	r2, r6
 1386 006c 11D2     		bcs	.L123
 438:.\Generated_Source\PSoC4/Slider_CSHL.c ****         if(Slider_lowBaselineResetCnt[sensor] >= Slider_lowBaselineReset[sensor])
 1387              		.loc 1 438 0 is_stmt 1
 1388 006e 274B     		ldr	r3, .L130+28
 1389 0070 1B5D     		ldrb	r3, [r3, r4]
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 70


 1390 0072 224A     		ldr	r2, .L130+12
 1391 0074 1219     		add	r2, r2, r4
 1392 0076 1279     		ldrb	r2, [r2, #4]
 1393 0078 9342     		cmp	r3, r2
 1394 007a 06D3     		bcc	.L124
 440:.\Generated_Source\PSoC4/Slider_CSHL.c ****             Slider_BaseInit(sensor);
 1395              		.loc 1 440 0
 1396 007c 201C     		mov	r0, r4
 1397 007e FFF7FEFF 		bl	Slider_BaseInit
 1398              	.LVL162:
 441:.\Generated_Source\PSoC4/Slider_CSHL.c ****             Slider_lowBaselineResetCnt[sensor] = 0u;
 1399              		.loc 1 441 0
 1400 0082 0022     		mov	r2, #0
 1401 0084 214B     		ldr	r3, .L130+28
 1402 0086 1A55     		strb	r2, [r3, r4]
 1403 0088 1AE0     		b	.L125
 1404              	.L124:
 445:.\Generated_Source\PSoC4/Slider_CSHL.c ****             Slider_lowBaselineResetCnt[sensor]++;
 1405              		.loc 1 445 0
 1406 008a 0133     		add	r3, r3, #1
 1407 008c 1F4A     		ldr	r2, .L130+28
 1408 008e 1355     		strb	r3, [r2, r4]
 1409 0090 16E0     		b	.L125
 1410              	.L123:
 453:.\Generated_Source\PSoC4/Slider_CSHL.c **** 			if ( (tempRaw <= noiseThreshold) || 
 1411              		.loc 1 453 0
 1412 0092 B045     		cmp	r8, r6
 1413 0094 06D2     		bcs	.L126
 454:.\Generated_Source\PSoC4/Slider_CSHL.c **** 			 ((tempRaw < (uint16) Slider_negativeNoiseThreshold[widget])
 1414              		.loc 1 454 0 discriminator 1
 1415 0096 1E4A     		ldr	r2, .L130+32
 1416 0098 D25D     		ldrb	r2, [r2, r7]
 453:.\Generated_Source\PSoC4/Slider_CSHL.c **** 			if ( (tempRaw <= noiseThreshold) || 
 1417              		.loc 1 453 0 discriminator 1
 1418 009a B242     		cmp	r2, r6
 1419 009c 10D9     		bls	.L125
 455:.\Generated_Source\PSoC4/Slider_CSHL.c **** 			   && (sign == 0u)))
 1420              		.loc 1 455 0
 1421 009e 4A46     		mov	r2, r9
 1422 00a0 002A     		cmp	r2, #0
 1423 00a2 0DD1     		bne	.L125
 1424              	.L126:
 466:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 calc = (uint32) Slider_sensorBaseline[sensor] << 8u;
 1425              		.loc 1 466 0
 1426 00a4 1802     		lsl	r0, r3, #8
 1427              	.LVL163:
 467:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 calc |= (uint32) Slider_sensorBaselineLow[sensor];
 1428              		.loc 1 467 0
 1429 00a6 1849     		ldr	r1, .L130+24
 1430 00a8 0A19     		add	r2, r1, r4
 1431 00aa 177B     		ldrb	r7, [r2, #12]
 1432 00ac 3843     		orr	r0, r7
 1433              	.LVL164:
 470:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 calc += filteredRawData;
 1434              		.loc 1 470 0
 1435 00ae 2D18     		add	r5, r5, r0
 1436              	.LVL165:
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 71


 473:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 calc -= Slider_sensorBaseline[sensor];
 1437              		.loc 1 473 0
 1438 00b0 EB1A     		sub	r3, r5, r3
 1439              	.LVL166:
 476:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 Slider_sensorBaseline[sensor] = ((uint16) (calc >> 8u));
 1440              		.loc 1 476 0
 1441 00b2 1D0A     		lsr	r5, r3, #8
 1442 00b4 6000     		lsl	r0, r4, #1
 1443 00b6 0D52     		strh	r5, [r1, r0]
 477:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 Slider_sensorBaselineLow[sensor] = ((uint8) calc);
 1444              		.loc 1 477 0
 1445 00b8 1373     		strb	r3, [r2, #12]
 479:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 Slider_lowBaselineResetCnt[sensor] = 0u;
 1446              		.loc 1 479 0
 1447 00ba 0022     		mov	r2, #0
 1448 00bc 134B     		ldr	r3, .L130+28
 1449              	.LVL167:
 1450 00be 1A55     		strb	r2, [r3, r4]
 1451              	.L125:
 486:.\Generated_Source\PSoC4/Slider_CSHL.c ****     if((tempRaw > (uint16) noiseThreshold) && (sign != 0u))
 1452              		.loc 1 486 0
 1453 00c0 B045     		cmp	r8, r6
 1454 00c2 0DD2     		bcs	.L127
 486:.\Generated_Source\PSoC4/Slider_CSHL.c ****     if((tempRaw > (uint16) noiseThreshold) && (sign != 0u))
 1455              		.loc 1 486 0 is_stmt 0 discriminator 1
 1456 00c4 4B46     		mov	r3, r9
 1457 00c6 002B     		cmp	r3, #0
 1458 00c8 0AD0     		beq	.L127
 1459              	.LVL168:
 490:.\Generated_Source\PSoC4/Slider_CSHL.c ****             if (tempRaw > 0xFFu)
 1460              		.loc 1 490 0 is_stmt 1
 1461 00ca FF2E     		cmp	r6, #255
 1462 00cc 04D9     		bls	.L128
 492:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 Slider_sensorSignal[sensor] = 0xFFu;
 1463              		.loc 1 492 0
 1464 00ce 0E4B     		ldr	r3, .L130+24
 1465              	.LVL169:
 1466 00d0 1C19     		add	r4, r3, r4
 1467              	.LVL170:
 1468 00d2 FF23     		mov	r3, #255
 1469 00d4 2375     		strb	r3, [r4, #20]
 1470 00d6 07E0     		b	.L119
 1471              	.LVL171:
 1472              	.L128:
 496:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 Slider_sensorSignal[sensor] = ((uint8) tempRaw);
 1473              		.loc 1 496 0
 1474 00d8 0B4B     		ldr	r3, .L130+24
 1475              	.LVL172:
 1476 00da 1C19     		add	r4, r3, r4
 1477              	.LVL173:
 1478 00dc 2675     		strb	r6, [r4, #20]
 1479 00de 03E0     		b	.L119
 1480              	.LVL174:
 1481              	.L127:
 505:.\Generated_Source\PSoC4/Slider_CSHL.c ****         Slider_sensorSignal[sensor] = 0u;
 1482              		.loc 1 505 0
 1483 00e0 094B     		ldr	r3, .L130+24
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 72


 1484 00e2 1C19     		add	r4, r3, r4
 1485              	.LVL175:
 1486 00e4 0023     		mov	r3, #0
 1487 00e6 2375     		strb	r3, [r4, #20]
 1488              	.L119:
 512:.\Generated_Source\PSoC4/Slider_CSHL.c **** }
 1489              		.loc 1 512 0
 1490              		@ sp needed
 1491              	.LVL176:
 1492              	.LVL177:
 1493              	.LVL178:
 1494 00e8 0CBC     		pop	{r2, r3}
 1495 00ea 9046     		mov	r8, r2
 1496 00ec 9946     		mov	r9, r3
 1497 00ee F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1498              	.L131:
 1499              		.align	2
 1500              	.L130:
 1501 00f0 00000000 		.word	Slider_widgetNumber
 1502 00f4 00000000 		.word	Slider_noiseThreshold
 1503 00f8 00000000 		.word	Slider_sensorRaw
 1504 00fc 00000000 		.word	.LANCHOR1
 1505 0100 00000000 		.word	Slider_rawFilterData1
 1506 0104 00000000 		.word	Slider_config
 1507 0108 00000000 		.word	.LANCHOR0
 1508 010c 00000000 		.word	Slider_lowBaselineResetCnt
 1509 0110 00000000 		.word	Slider_negativeNoiseThreshold
 1510              		.cfi_endproc
 1511              	.LFE39:
 1512              		.size	Slider_UpdateBaselineNoThreshold, .-Slider_UpdateBaselineNoThreshold
 1513              		.section	.text.Slider_UpdateSensorBaseline,"ax",%progbits
 1514              		.align	2
 1515              		.global	Slider_UpdateSensorBaseline
 1516              		.code	16
 1517              		.thumb_func
 1518              		.type	Slider_UpdateSensorBaseline, %function
 1519              	Slider_UpdateSensorBaseline:
 1520              	.LFB40:
 546:.\Generated_Source\PSoC4/Slider_CSHL.c **** {
 1521              		.loc 1 546 0
 1522              		.cfi_startproc
 1523              	.LVL179:
 1524 0000 10B5     		push	{r4, lr}
 1525              		.cfi_def_cfa_offset 8
 1526              		.cfi_offset 4, -8
 1527              		.cfi_offset 14, -4
 1528 0002 041C     		mov	r4, r0
 558:.\Generated_Source\PSoC4/Slider_CSHL.c ****     	Slider_UpdateThresholds(sensor);
 1529              		.loc 1 558 0
 1530 0004 FFF7FEFF 		bl	Slider_UpdateThresholds
 1531              	.LVL180:
 561:.\Generated_Source\PSoC4/Slider_CSHL.c ****     Slider_UpdateBaselineNoThreshold(sensor);
 1532              		.loc 1 561 0
 1533 0008 201C     		mov	r0, r4
 1534 000a FFF7FEFF 		bl	Slider_UpdateBaselineNoThreshold
 1535              	.LVL181:
 567:.\Generated_Source\PSoC4/Slider_CSHL.c **** }
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 73


 1536              		.loc 1 567 0
 1537              		@ sp needed
 1538              	.LVL182:
 1539 000e 10BD     		pop	{r4, pc}
 1540              		.cfi_endproc
 1541              	.LFE40:
 1542              		.size	Slider_UpdateSensorBaseline, .-Slider_UpdateSensorBaseline
 1543              		.section	.text.Slider_UpdateEnabledBaselines,"ax",%progbits
 1544              		.align	2
 1545              		.global	Slider_UpdateEnabledBaselines
 1546              		.code	16
 1547              		.thumb_func
 1548              		.type	Slider_UpdateEnabledBaselines, %function
 1549              	Slider_UpdateEnabledBaselines:
 1550              	.LFB41:
 600:.\Generated_Source\PSoC4/Slider_CSHL.c **** {
 1551              		.loc 1 600 0
 1552              		.cfi_startproc
 1553 0000 38B5     		push	{r3, r4, r5, lr}
 1554              		.cfi_def_cfa_offset 16
 1555              		.cfi_offset 3, -16
 1556              		.cfi_offset 4, -12
 1557              		.cfi_offset 5, -8
 1558              		.cfi_offset 14, -4
 1559              	.LVL183:
 604:.\Generated_Source\PSoC4/Slider_CSHL.c ****     for(i = 0u; i < Slider_TOTAL_SENSOR_COUNT; i++)
 1560              		.loc 1 604 0
 1561 0002 0024     		mov	r4, #0
 606:.\Generated_Source\PSoC4/Slider_CSHL.c ****         isSensorEnabled = Slider_GetBitValue(Slider_sensorEnableMask, i);
 1562              		.loc 1 606 0
 1563 0004 074D     		ldr	r5, .L137
 604:.\Generated_Source\PSoC4/Slider_CSHL.c ****     for(i = 0u; i < Slider_TOTAL_SENSOR_COUNT; i++)
 1564              		.loc 1 604 0
 1565 0006 09E0     		b	.L134
 1566              	.LVL184:
 1567              	.L136:
 606:.\Generated_Source\PSoC4/Slider_CSHL.c ****         isSensorEnabled = Slider_GetBitValue(Slider_sensorEnableMask, i);
 1568              		.loc 1 606 0
 1569 0008 281C     		mov	r0, r5
 1570 000a 211C     		mov	r1, r4
 1571 000c FFF7FEFF 		bl	Slider_GetBitValue
 1572              	.LVL185:
 608:.\Generated_Source\PSoC4/Slider_CSHL.c ****         if(0u != isSensorEnabled)
 1573              		.loc 1 608 0
 1574 0010 0028     		cmp	r0, #0
 1575 0012 02D0     		beq	.L135
 610:.\Generated_Source\PSoC4/Slider_CSHL.c ****             Slider_UpdateSensorBaseline(i);
 1576              		.loc 1 610 0
 1577 0014 201C     		mov	r0, r4
 1578              	.LVL186:
 1579 0016 FFF7FEFF 		bl	Slider_UpdateSensorBaseline
 1580              	.LVL187:
 1581              	.L135:
 604:.\Generated_Source\PSoC4/Slider_CSHL.c ****     for(i = 0u; i < Slider_TOTAL_SENSOR_COUNT; i++)
 1582              		.loc 1 604 0
 1583 001a 0134     		add	r4, r4, #1
 1584              	.LVL188:
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 74


 1585              	.L134:
 604:.\Generated_Source\PSoC4/Slider_CSHL.c ****     for(i = 0u; i < Slider_TOTAL_SENSOR_COUNT; i++)
 1586              		.loc 1 604 0 is_stmt 0 discriminator 1
 1587 001c 042C     		cmp	r4, #4
 1588 001e F3D9     		bls	.L136
 613:.\Generated_Source\PSoC4/Slider_CSHL.c **** }
 1589              		.loc 1 613 0 is_stmt 1
 1590              		@ sp needed
 1591              	.LVL189:
 1592 0020 38BD     		pop	{r3, r4, r5, pc}
 1593              	.L138:
 1594 0022 C046     		.align	2
 1595              	.L137:
 1596 0024 00000000 		.word	Slider_sensorEnableMask
 1597              		.cfi_endproc
 1598              	.LFE41:
 1599              		.size	Slider_UpdateEnabledBaselines, .-Slider_UpdateEnabledBaselines
 1600              		.section	.text.Slider_UpdateWidgetBaseline,"ax",%progbits
 1601              		.align	2
 1602              		.global	Slider_UpdateWidgetBaseline
 1603              		.code	16
 1604              		.thumb_func
 1605              		.type	Slider_UpdateWidgetBaseline, %function
 1606              	Slider_UpdateWidgetBaseline:
 1607              	.LFB42:
 645:.\Generated_Source\PSoC4/Slider_CSHL.c **** {
 1608              		.loc 1 645 0
 1609              		.cfi_startproc
 1610              	.LVL190:
 1611 0000 38B5     		push	{r3, r4, r5, lr}
 1612              		.cfi_def_cfa_offset 16
 1613              		.cfi_offset 3, -16
 1614              		.cfi_offset 4, -12
 1615              		.cfi_offset 5, -8
 1616              		.cfi_offset 14, -4
 1617              	.LVL191:
 661:.\Generated_Source\PSoC4/Slider_CSHL.c ****     for(i = firstSensor; i < lastSensor; i++)
 1618              		.loc 1 661 0
 1619 0002 0024     		mov	r4, #0
 663:.\Generated_Source\PSoC4/Slider_CSHL.c ****         isSensorEnabled = Slider_GetBitValue(Slider_sensorEnableMask, i);
 1620              		.loc 1 663 0
 1621 0004 074D     		ldr	r5, .L143
 661:.\Generated_Source\PSoC4/Slider_CSHL.c ****     for(i = firstSensor; i < lastSensor; i++)
 1622              		.loc 1 661 0
 1623 0006 09E0     		b	.L140
 1624              	.LVL192:
 1625              	.L142:
 663:.\Generated_Source\PSoC4/Slider_CSHL.c ****         isSensorEnabled = Slider_GetBitValue(Slider_sensorEnableMask, i);
 1626              		.loc 1 663 0
 1627 0008 281C     		mov	r0, r5
 1628 000a 211C     		mov	r1, r4
 1629 000c FFF7FEFF 		bl	Slider_GetBitValue
 1630              	.LVL193:
 665:.\Generated_Source\PSoC4/Slider_CSHL.c ****         if(0u != isSensorEnabled)
 1631              		.loc 1 665 0
 1632 0010 0028     		cmp	r0, #0
 1633 0012 02D0     		beq	.L141
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 75


 667:.\Generated_Source\PSoC4/Slider_CSHL.c ****             Slider_UpdateSensorBaseline(i);
 1634              		.loc 1 667 0
 1635 0014 201C     		mov	r0, r4
 1636              	.LVL194:
 1637 0016 FFF7FEFF 		bl	Slider_UpdateSensorBaseline
 1638              	.LVL195:
 1639              	.L141:
 661:.\Generated_Source\PSoC4/Slider_CSHL.c ****     for(i = firstSensor; i < lastSensor; i++)
 1640              		.loc 1 661 0
 1641 001a 0134     		add	r4, r4, #1
 1642              	.LVL196:
 1643              	.L140:
 661:.\Generated_Source\PSoC4/Slider_CSHL.c ****     for(i = firstSensor; i < lastSensor; i++)
 1644              		.loc 1 661 0 is_stmt 0 discriminator 1
 1645 001c 042C     		cmp	r4, #4
 1646 001e F3D9     		bls	.L142
 670:.\Generated_Source\PSoC4/Slider_CSHL.c **** }
 1647              		.loc 1 670 0 is_stmt 1
 1648              		@ sp needed
 1649              	.LVL197:
 1650 0020 38BD     		pop	{r3, r4, r5, pc}
 1651              	.L144:
 1652 0022 C046     		.align	2
 1653              	.L143:
 1654 0024 00000000 		.word	Slider_sensorEnableMask
 1655              		.cfi_endproc
 1656              	.LFE42:
 1657              		.size	Slider_UpdateWidgetBaseline, .-Slider_UpdateWidgetBaseline
 1658              		.section	.text.Slider_GetCentroidPos,"ax",%progbits
 1659              		.align	2
 1660              		.global	Slider_GetCentroidPos
 1661              		.code	16
 1662              		.thumb_func
 1663              		.type	Slider_GetCentroidPos, %function
 1664              	Slider_GetCentroidPos:
 1665              	.LFB64:
1748:.\Generated_Source\PSoC4/Slider_CSHL.c ****     {
 1666              		.loc 1 1748 0
 1667              		.cfi_startproc
 1668              	.LVL198:
 1669 0000 30B5     		push	{r4, r5, lr}
 1670              		.cfi_def_cfa_offset 12
 1671              		.cfi_offset 4, -12
 1672              		.cfi_offset 5, -8
 1673              		.cfi_offset 14, -4
 1674 0002 83B0     		sub	sp, sp, #12
 1675              		.cfi_def_cfa_offset 24
 1676 0004 041C     		mov	r4, r0
1755:.\Generated_Source\PSoC4/Slider_CSHL.c ****             uint8 firstTimeIndex = Slider_posFiltersData[widget];
 1677              		.loc 1 1755 0
 1678 0006 194B     		ldr	r3, .L149
 1679 0008 1B18     		add	r3, r3, r0
 1680 000a 1D7B     		ldrb	r5, [r3, #12]
 1681              	.LVL199:
1787:.\Generated_Source\PSoC4/Slider_CSHL.c **** 			maximum = Slider_FindMaximum(offset, count, (uint8)Slider_fingerThreshold[widget]);
 1682              		.loc 1 1787 0
 1683 000c 184B     		ldr	r3, .L149+4
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 76


 1684              	.LVL200:
 1685 000e 1A5C     		ldrb	r2, [r3, r0]
 1686 0010 0020     		mov	r0, #0
 1687              	.LVL201:
 1688 0012 0521     		mov	r1, #5
 1689 0014 FFF7FEFF 		bl	Slider_FindMaximum
 1690              	.LVL202:
1790:.\Generated_Source\PSoC4/Slider_CSHL.c ****         if (maximum != 0xFFu)
 1691              		.loc 1 1790 0
 1692 0018 FF28     		cmp	r0, #255
 1693 001a 20D0     		beq	.L146
1793:.\Generated_Source\PSoC4/Slider_CSHL.c ****             position = (uint16) Slider_CalcCentroid(maximum, 
 1694              		.loc 1 1793 0
 1695 001c 154B     		ldr	r3, .L149+8
 1696 001e 1B5D     		ldrb	r3, [r3, r4]
 1697 0020 0093     		str	r3, [sp]
 1698 0022 0021     		mov	r1, #0
 1699 0024 0522     		mov	r2, #5
 1700 0026 C823     		mov	r3, #200
 1701 0028 5B01     		lsl	r3, r3, #5
 1702 002a FFF7FEFF 		bl	Slider_CalcCentroid
 1703              	.LVL203:
 1704 002e 031C     		mov	r3, r0
 1705              	.LVL204:
1801:.\Generated_Source\PSoC4/Slider_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
 1706              		.loc 1 1801 0
 1707 0030 6A1C     		add	r2, r5, #1
 1708 0032 D1B2     		uxtb	r1, r2
 1709              	.LVL205:
1803:.\Generated_Source\PSoC4/Slider_CSHL.c ****                     if (0u == Slider_posFiltersData[firstTimeIndex])
 1710              		.loc 1 1803 0
 1711 0034 0D4A     		ldr	r2, .L149
 1712              	.LVL206:
 1713 0036 5219     		add	r2, r2, r5
 1714 0038 127B     		ldrb	r2, [r2, #12]
 1715 003a 002A     		cmp	r2, #0
 1716 003c 06D1     		bne	.L147
1806:.\Generated_Source\PSoC4/Slider_CSHL.c ****                         Slider_posFiltersData[posIndex] = (uint8) position;
 1717              		.loc 1 1806 0
 1718 003e 0B4C     		ldr	r4, .L149
 1719              	.LVL207:
 1720 0040 6118     		add	r1, r4, r1
 1721              	.LVL208:
 1722 0042 0B73     		strb	r3, [r1, #12]
1823:.\Generated_Source\PSoC4/Slider_CSHL.c ****                         Slider_posFiltersData[firstTimeIndex] = 1u;
 1723              		.loc 1 1823 0
 1724 0044 6519     		add	r5, r4, r5
 1725              	.LVL209:
 1726 0046 0123     		mov	r3, #1
 1727 0048 2B73     		strb	r3, [r5, #12]
 1728 004a 0DE0     		b	.L148
 1729              	.LVL210:
 1730              	.L147:
1872:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                                                     (uint16)Slider_posFiltersData[p
 1731              		.loc 1 1872 0
 1732 004c 074C     		ldr	r4, .L149
 1733              	.LVL211:
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 77


 1734 004e 6418     		add	r4, r4, r1
 1735 0050 217B     		ldrb	r1, [r4, #12]
 1736              	.LVL212:
1871:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                 position = Slider_IIR4Filter(position,
 1737              		.loc 1 1871 0
 1738 0052 181C     		mov	r0, r3
 1739              	.LVL213:
 1740 0054 FFF7FEFF 		bl	Slider_IIR4Filter
 1741              	.LVL214:
 1742 0058 031C     		mov	r3, r0
 1743              	.LVL215:
1873:.\Generated_Source\PSoC4/Slider_CSHL.c ****                                 Slider_posFiltersData[posIndex] = (uint8) position;
 1744              		.loc 1 1873 0
 1745 005a 2373     		strb	r3, [r4, #12]
 1746 005c 04E0     		b	.L148
 1747              	.LVL216:
 1748              	.L146:
1903:.\Generated_Source\PSoC4/Slider_CSHL.c ****                     Slider_posFiltersData[firstTimeIndex] = 0u;
 1749              		.loc 1 1903 0
 1750 005e 034B     		ldr	r3, .L149
 1751 0060 5D19     		add	r5, r3, r5
 1752              	.LVL217:
 1753 0062 0023     		mov	r3, #0
 1754 0064 2B73     		strb	r3, [r5, #12]
1897:.\Generated_Source\PSoC4/Slider_CSHL.c ****             position = 0xFFFFu;
 1755              		.loc 1 1897 0
 1756 0066 0448     		ldr	r0, .L149+12
 1757              	.LVL218:
 1758              	.L148:
1910:.\Generated_Source\PSoC4/Slider_CSHL.c ****     }
 1759              		.loc 1 1910 0
 1760 0068 03B0     		add	sp, sp, #12
 1761              		@ sp needed
 1762 006a 30BD     		pop	{r4, r5, pc}
 1763              	.L150:
 1764              		.align	2
 1765              	.L149:
 1766 006c 00000000 		.word	.LANCHOR1
 1767 0070 00000000 		.word	Slider_fingerThreshold
 1768 0074 00000000 		.word	Slider_noiseThreshold
 1769 0078 FFFF0000 		.word	65535
 1770              		.cfi_endproc
 1771              	.LFE64:
 1772              		.size	Slider_GetCentroidPos, .-Slider_GetCentroidPos
 1773              		.section	.text.Slider_GetWidgetNumber,"ax",%progbits
 1774              		.align	2
 1775              		.global	Slider_GetWidgetNumber
 1776              		.code	16
 1777              		.thumb_func
 1778              		.type	Slider_GetWidgetNumber, %function
 1779              	Slider_GetWidgetNumber:
 1780              	.LFB68:
2510:.\Generated_Source\PSoC4/Slider_CSHL.c **** #endif /* ( (0u != (Slider_RAW_FILTER_MASK & Slider_IIR4_FILTER)) || \
2511:.\Generated_Source\PSoC4/Slider_CSHL.c ****        *    (0u != (Slider_POS_FILTERS_MASK & Slider_IIR4_FILTER)) )
2512:.\Generated_Source\PSoC4/Slider_CSHL.c ****        */
2513:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
2514:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 78


2515:.\Generated_Source\PSoC4/Slider_CSHL.c **** #if ( (0u != (Slider_RAW_FILTER_MASK & Slider_JITTER_FILTER)) || \
2516:.\Generated_Source\PSoC4/Slider_CSHL.c ****       (0u != (Slider_POS_FILTERS_MASK & Slider_JITTER_FILTER)) || \
2517:.\Generated_Source\PSoC4/Slider_CSHL.c ****       (0u != (Slider_TRACKPAD_GEST_POS_FILTERS_MASK & Slider_JITTER_FILTER)))  
2518:.\Generated_Source\PSoC4/Slider_CSHL.c ****     /*******************************************************************************
2519:.\Generated_Source\PSoC4/Slider_CSHL.c ****     * Function Name: uint16 Slider_JitterFilter
2520:.\Generated_Source\PSoC4/Slider_CSHL.c ****     ********************************************************************************
2521:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *
2522:.\Generated_Source\PSoC4/Slider_CSHL.c ****     * Summary:
2523:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *  This is the Jitter filter function.
2524:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *
2525:.\Generated_Source\PSoC4/Slider_CSHL.c ****     * Parameters:
2526:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *  x1:  Current value.
2527:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *  x2:  Previous value.
2528:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *
2529:.\Generated_Source\PSoC4/Slider_CSHL.c ****     * Return:
2530:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *  Returns filtered value.
2531:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*
2532:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	* Global Variables:
2533:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*  None.
2534:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*
2535:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	* Side Effects:
2536:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*  None
2537:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	* 
2538:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *******************************************************************************/
2539:.\Generated_Source\PSoC4/Slider_CSHL.c ****     uint16 Slider_JitterFilter(uint16 x1, uint16 x2)
2540:.\Generated_Source\PSoC4/Slider_CSHL.c ****     {
2541:.\Generated_Source\PSoC4/Slider_CSHL.c ****         if (x1 > x2)
2542:.\Generated_Source\PSoC4/Slider_CSHL.c ****         {
2543:.\Generated_Source\PSoC4/Slider_CSHL.c ****             x1--;
2544:.\Generated_Source\PSoC4/Slider_CSHL.c ****         }
2545:.\Generated_Source\PSoC4/Slider_CSHL.c ****         else
2546:.\Generated_Source\PSoC4/Slider_CSHL.c ****         {
2547:.\Generated_Source\PSoC4/Slider_CSHL.c ****             if (x1 < x2)
2548:.\Generated_Source\PSoC4/Slider_CSHL.c ****             {
2549:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 x1++;
2550:.\Generated_Source\PSoC4/Slider_CSHL.c ****             }
2551:.\Generated_Source\PSoC4/Slider_CSHL.c ****         }
2552:.\Generated_Source\PSoC4/Slider_CSHL.c ****     
2553:.\Generated_Source\PSoC4/Slider_CSHL.c ****         return x1;
2554:.\Generated_Source\PSoC4/Slider_CSHL.c ****     }
2555:.\Generated_Source\PSoC4/Slider_CSHL.c **** #endif /* ( (0u != (Slider_RAW_FILTER_MASK & Slider_JITTER_FILTER)) || \
2556:.\Generated_Source\PSoC4/Slider_CSHL.c ****        *    (0u != (Slider_POS_FILTERS_MASK & Slider_JITTER_FILTER)) )
2557:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	   *    (0u != (Slider_TRACKPAD_GEST_POS_FILTERS_MASK & Slider_JITTER_FILTER)) )
2558:.\Generated_Source\PSoC4/Slider_CSHL.c ****        */
2559:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
2560:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
2561:.\Generated_Source\PSoC4/Slider_CSHL.c **** #if (0u != (Slider_RAW_FILTER_MASK & Slider_IIR8_FILTER))
2562:.\Generated_Source\PSoC4/Slider_CSHL.c ****     /*******************************************************************************
2563:.\Generated_Source\PSoC4/Slider_CSHL.c ****     * Function Name: Slider_IIR8Filter
2564:.\Generated_Source\PSoC4/Slider_CSHL.c ****     ********************************************************************************
2565:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *
2566:.\Generated_Source\PSoC4/Slider_CSHL.c ****     * Summary:
2567:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *  This is the IIR1/8 filter function. IIR1/8 = 1/8current + 7/8previous.
2568:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *  Only applies for raw data.
2569:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *
2570:.\Generated_Source\PSoC4/Slider_CSHL.c ****     * Parameters:
2571:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *  x1:  Current value.
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 79


2572:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *  x2:  Previous value.
2573:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *
2574:.\Generated_Source\PSoC4/Slider_CSHL.c ****     * Return:
2575:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *  Returns filtered value.
2576:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*
2577:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	* Global Variables:
2578:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*  None.
2579:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*
2580:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	* Side Effects:
2581:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*  None
2582:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	* 
2583:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *******************************************************************************/
2584:.\Generated_Source\PSoC4/Slider_CSHL.c ****     uint16 Slider_IIR8Filter(uint16 x1, uint16 x2)
2585:.\Generated_Source\PSoC4/Slider_CSHL.c ****     {
2586:.\Generated_Source\PSoC4/Slider_CSHL.c ****         uint32 tmp;
2587:.\Generated_Source\PSoC4/Slider_CSHL.c ****         
2588:.\Generated_Source\PSoC4/Slider_CSHL.c ****         /* IIR = 1/8 Current Value + 7/8 Previous Value */
2589:.\Generated_Source\PSoC4/Slider_CSHL.c ****         tmp = (uint32)x1;
2590:.\Generated_Source\PSoC4/Slider_CSHL.c ****         tmp += (((uint32)x2 << 3u) - ((uint32)x2));
2591:.\Generated_Source\PSoC4/Slider_CSHL.c ****         tmp >>= 3u;
2592:.\Generated_Source\PSoC4/Slider_CSHL.c ****     
2593:.\Generated_Source\PSoC4/Slider_CSHL.c ****         return ((uint16) tmp);
2594:.\Generated_Source\PSoC4/Slider_CSHL.c ****     }
2595:.\Generated_Source\PSoC4/Slider_CSHL.c **** #endif /* (0u != (Slider_RAW_FILTER_MASK & Slider_IIR8_FILTER)) */
2596:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
2597:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
2598:.\Generated_Source\PSoC4/Slider_CSHL.c **** #if (0u != (Slider_RAW_FILTER_MASK & Slider_IIR16_FILTER))
2599:.\Generated_Source\PSoC4/Slider_CSHL.c ****     /*******************************************************************************
2600:.\Generated_Source\PSoC4/Slider_CSHL.c ****     * Function Name: Slider_IIR16Filter
2601:.\Generated_Source\PSoC4/Slider_CSHL.c ****     ********************************************************************************
2602:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *
2603:.\Generated_Source\PSoC4/Slider_CSHL.c ****     * Summary:
2604:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *  This is the IIR1/16 filter function. IIR1/16 = 1/16current + 15/16previous.
2605:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *  Only applies for raw data.
2606:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *
2607:.\Generated_Source\PSoC4/Slider_CSHL.c ****     * Parameters:
2608:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *  x1:  Current value.
2609:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *  x2:  Previous value.
2610:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *
2611:.\Generated_Source\PSoC4/Slider_CSHL.c ****     * Return:
2612:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *  Returns filtered value.
2613:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*
2614:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	* Global Variables:
2615:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*  None.
2616:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*
2617:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	* Side Effects:
2618:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*  None
2619:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	* 
2620:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *******************************************************************************/
2621:.\Generated_Source\PSoC4/Slider_CSHL.c ****     uint16 Slider_IIR16Filter(uint16 x1, uint16 x2)
2622:.\Generated_Source\PSoC4/Slider_CSHL.c ****     {
2623:.\Generated_Source\PSoC4/Slider_CSHL.c ****         uint32 tmp;
2624:.\Generated_Source\PSoC4/Slider_CSHL.c ****         
2625:.\Generated_Source\PSoC4/Slider_CSHL.c ****         /* IIR = 1/16 Current Value + 15/16 Previous Value */
2626:.\Generated_Source\PSoC4/Slider_CSHL.c ****         tmp = (uint32)x1;
2627:.\Generated_Source\PSoC4/Slider_CSHL.c ****         tmp += (((uint32)x2 << 4u) - ((uint32)x2));
2628:.\Generated_Source\PSoC4/Slider_CSHL.c ****         tmp >>= 4u;
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 80


2629:.\Generated_Source\PSoC4/Slider_CSHL.c ****         
2630:.\Generated_Source\PSoC4/Slider_CSHL.c ****         return ((uint16) tmp);
2631:.\Generated_Source\PSoC4/Slider_CSHL.c ****     }
2632:.\Generated_Source\PSoC4/Slider_CSHL.c **** #endif /* (Slider_RAW_FILTER_MASK & Slider_IIR16_FILTER) */
2633:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
2634:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
2635:.\Generated_Source\PSoC4/Slider_CSHL.c **** #if (0u != (Slider_TOTAL_MATRIX_BUTTONS_COUNT))
2636:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
2637:.\Generated_Source\PSoC4/Slider_CSHL.c ****     /*******************************************************************************
2638:.\Generated_Source\PSoC4/Slider_CSHL.c ****     * Function Name: Slider_GetMatrixButtonPos
2639:.\Generated_Source\PSoC4/Slider_CSHL.c ****     ********************************************************************************
2640:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *
2641:.\Generated_Source\PSoC4/Slider_CSHL.c ****     * Summary:
2642:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *  Function calculates and returns a touch position (column and row) for the matrix
2643:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *  button widget.
2644:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *
2645:.\Generated_Source\PSoC4/Slider_CSHL.c ****     * Parameters:
2646:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *  widget:  widget number;
2647:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *  pos:     pointer to an array of two uint8, where touch position will be 
2648:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *           stored:
2649:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *           pos[0] - column position;
2650:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *           pos[1] - raw position.
2651:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *
2652:.\Generated_Source\PSoC4/Slider_CSHL.c ****     * Return:
2653:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *  Returns 1 if row and column sensors of matrix button are active, 0 - in other
2654:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *  cases.
2655:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*
2656:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	* Global Variables:
2657:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*  Slider_fingerThreshold[ ] - used to store the finger threshold for all widgets.
2658:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*  Slider_sensorSignal[ ] - used to store a difference between the current value of 
2659:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*  raw data and a previous value of the baseline.
2660:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*
2661:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	* Side Effects:
2662:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*  None
2663:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	* 
2664:.\Generated_Source\PSoC4/Slider_CSHL.c ****     *******************************************************************************/
2665:.\Generated_Source\PSoC4/Slider_CSHL.c ****     uint32 Slider_GetMatrixButtonPos(uint32 widget, uint8* pos)
2666:.\Generated_Source\PSoC4/Slider_CSHL.c ****     {
2667:.\Generated_Source\PSoC4/Slider_CSHL.c ****         uint8 i;
2668:.\Generated_Source\PSoC4/Slider_CSHL.c ****         uint32 retVal = 0u;
2669:.\Generated_Source\PSoC4/Slider_CSHL.c ****         uint16 row_sig_max = 0u;
2670:.\Generated_Source\PSoC4/Slider_CSHL.c ****         uint16 col_sig_max = 0u;
2671:.\Generated_Source\PSoC4/Slider_CSHL.c ****         uint8 row_ind = 0u;
2672:.\Generated_Source\PSoC4/Slider_CSHL.c ****         uint8 col_ind = 0u;
2673:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
2674:.\Generated_Source\PSoC4/Slider_CSHL.c ****         if (Slider_CheckIsWidgetActive(widget) == 1u)
2675:.\Generated_Source\PSoC4/Slider_CSHL.c ****         {
2676:.\Generated_Source\PSoC4/Slider_CSHL.c ****             /* Find row number with maximal signal value */
2677:.\Generated_Source\PSoC4/Slider_CSHL.c ****             for(i = Slider_rawDataIndex[widget]; i < (Slider_rawDataIndex[widget] + \
2678:.\Generated_Source\PSoC4/Slider_CSHL.c ****                  Slider_numberOfSensors[widget]); i++)
2679:.\Generated_Source\PSoC4/Slider_CSHL.c ****             {
2680:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 if (Slider_sensorSignal[i] > col_sig_max)
2681:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 {
2682:.\Generated_Source\PSoC4/Slider_CSHL.c ****                     col_ind = i;
2683:.\Generated_Source\PSoC4/Slider_CSHL.c ****                     col_sig_max = Slider_sensorSignal[i];
2684:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 }
2685:.\Generated_Source\PSoC4/Slider_CSHL.c ****             }
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 81


2686:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
2687:.\Generated_Source\PSoC4/Slider_CSHL.c ****             /* Find row number with maximal signal value */
2688:.\Generated_Source\PSoC4/Slider_CSHL.c ****             for(i = Slider_rawDataIndex[widget+1u]; i < (Slider_rawDataIndex[widget+1u] + \
2689:.\Generated_Source\PSoC4/Slider_CSHL.c ****                  Slider_numberOfSensors[widget+1u]); i++)
2690:.\Generated_Source\PSoC4/Slider_CSHL.c ****             {
2691:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 if (Slider_sensorSignal[i] > row_sig_max)
2692:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 {
2693:.\Generated_Source\PSoC4/Slider_CSHL.c ****                     row_ind = i;
2694:.\Generated_Source\PSoC4/Slider_CSHL.c ****                     row_sig_max = Slider_sensorSignal[i];
2695:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 }
2696:.\Generated_Source\PSoC4/Slider_CSHL.c ****             }
2697:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
2698:.\Generated_Source\PSoC4/Slider_CSHL.c ****             if((col_sig_max >= Slider_fingerThreshold[widget]) && \
2699:.\Generated_Source\PSoC4/Slider_CSHL.c ****                (row_sig_max >= Slider_fingerThreshold[widget+1u]))
2700:.\Generated_Source\PSoC4/Slider_CSHL.c ****             {
2701:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 pos[0u] = col_ind - Slider_rawDataIndex[widget];
2702:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 pos[1u] = row_ind - Slider_rawDataIndex[widget+1u];
2703:.\Generated_Source\PSoC4/Slider_CSHL.c ****                 retVal = 1u;
2704:.\Generated_Source\PSoC4/Slider_CSHL.c ****             }
2705:.\Generated_Source\PSoC4/Slider_CSHL.c ****         }
2706:.\Generated_Source\PSoC4/Slider_CSHL.c ****         return (retVal);
2707:.\Generated_Source\PSoC4/Slider_CSHL.c ****     }
2708:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
2709:.\Generated_Source\PSoC4/Slider_CSHL.c **** #endif /* (0u != (Slider_TOTAL_MATRIX_BUTTONS_COUNT)) */
2710:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
2711:.\Generated_Source\PSoC4/Slider_CSHL.c **** /*******************************************************************************
2712:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Function Name: Slider_GetWidgetNumber
2713:.\Generated_Source\PSoC4/Slider_CSHL.c **** ********************************************************************************
2714:.\Generated_Source\PSoC4/Slider_CSHL.c **** *
2715:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Summary:
2716:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  This API returns the widget number for the sensor.
2717:.\Generated_Source\PSoC4/Slider_CSHL.c **** *
2718:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Parameters:
2719:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  sensor: sensor index. The value of index can be 
2720:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  from 0 to (Slider_TOTAL_SENSOR_COUNT-1).
2721:.\Generated_Source\PSoC4/Slider_CSHL.c **** *
2722:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Return:
2723:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  This API returns the widget number for the sensor. 
2724:.\Generated_Source\PSoC4/Slider_CSHL.c **** *
2725:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Global Variables:
2726:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  Slider_widgetNumber[]  - stores widget numbers.
2727:.\Generated_Source\PSoC4/Slider_CSHL.c **** * 
2728:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Side Effects:
2729:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  None
2730:.\Generated_Source\PSoC4/Slider_CSHL.c **** *
2731:.\Generated_Source\PSoC4/Slider_CSHL.c **** *******************************************************************************/
2732:.\Generated_Source\PSoC4/Slider_CSHL.c **** uint32 Slider_GetWidgetNumber(uint32 sensor)
2733:.\Generated_Source\PSoC4/Slider_CSHL.c **** {
 1781              		.loc 1 2733 0
 1782              		.cfi_startproc
 1783              	.LVL219:
2734:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	return((uint32)Slider_widgetNumber[sensor]);
 1784              		.loc 1 2734 0
 1785 0000 014B     		ldr	r3, .L152
 1786 0002 185C     		ldrb	r0, [r3, r0]
 1787              	.LVL220:
2735:.\Generated_Source\PSoC4/Slider_CSHL.c **** }
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 82


 1788              		.loc 1 2735 0
 1789              		@ sp needed
 1790 0004 7047     		bx	lr
 1791              	.L153:
 1792 0006 C046     		.align	2
 1793              	.L152:
 1794 0008 00000000 		.word	Slider_widgetNumber
 1795              		.cfi_endproc
 1796              	.LFE68:
 1797              		.size	Slider_GetWidgetNumber, .-Slider_GetWidgetNumber
 1798              		.section	.text.Slider_GetLowBaselineReset,"ax",%progbits
 1799              		.align	2
 1800              		.global	Slider_GetLowBaselineReset
 1801              		.code	16
 1802              		.thumb_func
 1803              		.type	Slider_GetLowBaselineReset, %function
 1804              	Slider_GetLowBaselineReset:
 1805              	.LFB69:
2736:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
2737:.\Generated_Source\PSoC4/Slider_CSHL.c **** /*******************************************************************************
2738:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Function Name: Slider_GetLowBaselineReset
2739:.\Generated_Source\PSoC4/Slider_CSHL.c **** ********************************************************************************
2740:.\Generated_Source\PSoC4/Slider_CSHL.c **** *
2741:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Summary:
2742:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  This API returns the low baseline reset threshold value for the  sensor.
2743:.\Generated_Source\PSoC4/Slider_CSHL.c **** *
2744:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Parameters:
2745:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  sensor: sensor index. The value of index can be 
2746:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  from 0 to (Slider_TOTAL_SENSOR_COUNT-1).
2747:.\Generated_Source\PSoC4/Slider_CSHL.c **** *
2748:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Return:
2749:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  low baseline reset threshold value a sensor.
2750:.\Generated_Source\PSoC4/Slider_CSHL.c **** *
2751:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Global Variables:
2752:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  Slider_lowBaselineReset[]  - stores low baseline reset values.
2753:.\Generated_Source\PSoC4/Slider_CSHL.c **** * 
2754:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Side Effects:
2755:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  None
2756:.\Generated_Source\PSoC4/Slider_CSHL.c **** *
2757:.\Generated_Source\PSoC4/Slider_CSHL.c **** *******************************************************************************/
2758:.\Generated_Source\PSoC4/Slider_CSHL.c **** uint8 Slider_GetLowBaselineReset(uint32 sensor)
2759:.\Generated_Source\PSoC4/Slider_CSHL.c **** {
 1806              		.loc 1 2759 0
 1807              		.cfi_startproc
 1808              	.LVL221:
2760:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	return(Slider_lowBaselineReset[sensor]);
 1809              		.loc 1 2760 0
 1810 0000 014B     		ldr	r3, .L155
 1811 0002 1818     		add	r0, r3, r0
 1812              	.LVL222:
 1813 0004 0079     		ldrb	r0, [r0, #4]
2761:.\Generated_Source\PSoC4/Slider_CSHL.c **** }
 1814              		.loc 1 2761 0
 1815              		@ sp needed
 1816 0006 7047     		bx	lr
 1817              	.L156:
 1818              		.align	2
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 83


 1819              	.L155:
 1820 0008 00000000 		.word	.LANCHOR1
 1821              		.cfi_endproc
 1822              	.LFE69:
 1823              		.size	Slider_GetLowBaselineReset, .-Slider_GetLowBaselineReset
 1824              		.section	.text.Slider_GetDebounce,"ax",%progbits
 1825              		.align	2
 1826              		.global	Slider_GetDebounce
 1827              		.code	16
 1828              		.thumb_func
 1829              		.type	Slider_GetDebounce, %function
 1830              	Slider_GetDebounce:
 1831              	.LFB70:
2762:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
2763:.\Generated_Source\PSoC4/Slider_CSHL.c **** /*******************************************************************************
2764:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Function Name: Slider_GetDebounce
2765:.\Generated_Source\PSoC4/Slider_CSHL.c **** ********************************************************************************
2766:.\Generated_Source\PSoC4/Slider_CSHL.c **** *
2767:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Summary:
2768:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  This API returns a debounce value.
2769:.\Generated_Source\PSoC4/Slider_CSHL.c **** *
2770:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Parameters:
2771:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  sensor: sensor index. The value of index can be 
2772:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  from 0 to (Slider_TOTAL_SENSOR_COUNT-1).
2773:.\Generated_Source\PSoC4/Slider_CSHL.c **** *
2774:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Return:
2775:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  Debounce value 
2776:.\Generated_Source\PSoC4/Slider_CSHL.c **** *
2777:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Global Variables:
2778:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  Slider_debounce[]  - stores the debounce value.
2779:.\Generated_Source\PSoC4/Slider_CSHL.c **** * 
2780:.\Generated_Source\PSoC4/Slider_CSHL.c **** * Side Effects:
2781:.\Generated_Source\PSoC4/Slider_CSHL.c **** *  None
2782:.\Generated_Source\PSoC4/Slider_CSHL.c **** *
2783:.\Generated_Source\PSoC4/Slider_CSHL.c **** *******************************************************************************/
2784:.\Generated_Source\PSoC4/Slider_CSHL.c **** uint8 Slider_GetDebounce(uint32 widget)
2785:.\Generated_Source\PSoC4/Slider_CSHL.c **** {
 1832              		.loc 1 2785 0
 1833              		.cfi_startproc
 1834              	.LVL223:
2786:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	return(Slider_debounce[widget]);
 1835              		.loc 1 2786 0
 1836 0000 014B     		ldr	r3, .L158
 1837 0002 185C     		ldrb	r0, [r3, r0]
 1838              	.LVL224:
2787:.\Generated_Source\PSoC4/Slider_CSHL.c **** }
 1839              		.loc 1 2787 0
 1840              		@ sp needed
 1841 0004 7047     		bx	lr
 1842              	.L159:
 1843 0006 C046     		.align	2
 1844              	.L158:
 1845 0008 00000000 		.word	.LANCHOR1
 1846              		.cfi_endproc
 1847              	.LFE70:
 1848              		.size	Slider_GetDebounce, .-Slider_GetDebounce
 1849              		.section	.text.Slider_EnableRawDataFilters,"ax",%progbits
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 84


 1850              		.align	2
 1851              		.global	Slider_EnableRawDataFilters
 1852              		.code	16
 1853              		.thumb_func
 1854              		.type	Slider_EnableRawDataFilters, %function
 1855              	Slider_EnableRawDataFilters:
 1856              	.LFB71:
2788:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
2789:.\Generated_Source\PSoC4/Slider_CSHL.c **** #if (Slider_RAW_FILTER_MASK != 0u)
2790:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	/*******************************************************************************
2791:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	* Function Name: Slider_EnableRawDataFilters
2792:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	********************************************************************************
2793:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*
2794:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	* Summary:
2795:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*  Enables the rawdata filters for the sensor signals.
2796:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*
2797:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	* Parameters:
2798:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*  None
2799:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*
2800:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	* Return:
2801:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*  None
2802:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*
2803:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	* Global Variables:
2804:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*  Slider_enableRawFilters defines if the filters are enabled or not.
2805:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*
2806:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	* Side Effects:
2807:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*  None
2808:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	* 
2809:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*******************************************************************************/
2810:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	void Slider_EnableRawDataFilters(void)
2811:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	{
 1857              		.loc 1 2811 0
 1858              		.cfi_startproc
2812:.\Generated_Source\PSoC4/Slider_CSHL.c **** 		Slider_enableRawFilters = Slider_RAW_FILTERS_ENABLED;
 1859              		.loc 1 2812 0
 1860 0000 0122     		mov	r2, #1
 1861 0002 014B     		ldr	r3, .L161
 1862 0004 5A72     		strb	r2, [r3, #9]
2813:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	}
 1863              		.loc 1 2813 0
 1864              		@ sp needed
 1865 0006 7047     		bx	lr
 1866              	.L162:
 1867              		.align	2
 1868              	.L161:
 1869 0008 00000000 		.word	.LANCHOR1
 1870              		.cfi_endproc
 1871              	.LFE71:
 1872              		.size	Slider_EnableRawDataFilters, .-Slider_EnableRawDataFilters
 1873              		.section	.text.Slider_DisableRawDataFilters,"ax",%progbits
 1874              		.align	2
 1875              		.global	Slider_DisableRawDataFilters
 1876              		.code	16
 1877              		.thumb_func
 1878              		.type	Slider_DisableRawDataFilters, %function
 1879              	Slider_DisableRawDataFilters:
 1880              	.LFB72:
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 85


2814:.\Generated_Source\PSoC4/Slider_CSHL.c **** 
2815:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	/*******************************************************************************
2816:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	* Function Name: Slider_DisableRawDataFilters
2817:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	********************************************************************************
2818:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*
2819:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	* Summary:
2820:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*  Disables the rawdata filters for the sensor signals.
2821:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*
2822:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	* Parameters:
2823:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*  None
2824:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*
2825:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	* Return:
2826:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*  None
2827:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*
2828:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	* Global Variables:
2829:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*  Slider_enableRawFilters defines if the filters are enabled or not.
2830:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*
2831:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	* Side Effects:
2832:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*  None
2833:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	* 
2834:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	*******************************************************************************/
2835:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	void Slider_DisableRawDataFilters(void)
2836:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	{
 1881              		.loc 1 2836 0
 1882              		.cfi_startproc
2837:.\Generated_Source\PSoC4/Slider_CSHL.c **** 		Slider_enableRawFilters = Slider_RAW_FILTERS_DISABLED;
 1883              		.loc 1 2837 0
 1884 0000 0022     		mov	r2, #0
 1885 0002 014B     		ldr	r3, .L164
 1886 0004 5A72     		strb	r2, [r3, #9]
2838:.\Generated_Source\PSoC4/Slider_CSHL.c **** 	}
 1887              		.loc 1 2838 0
 1888              		@ sp needed
 1889 0006 7047     		bx	lr
 1890              	.L165:
 1891              		.align	2
 1892              	.L164:
 1893 0008 00000000 		.word	.LANCHOR1
 1894              		.cfi_endproc
 1895              	.LFE72:
 1896              		.size	Slider_DisableRawDataFilters, .-Slider_DisableRawDataFilters
 1897              		.global	Slider_numberOfSensors
 1898              		.global	Slider_rawDataIndex
 1899              		.global	Slider_debounce
 1900              		.comm	Slider_hysteresis,1,4
 1901              		.comm	Slider_negativeNoiseThreshold,1,4
 1902              		.comm	Slider_noiseThreshold,1,4
 1903              		.comm	Slider_fingerThreshold,1,4
 1904              		.global	Slider_enableRawFilters
 1905              		.global	Slider_lowBaselineReset
 1906              		.comm	Slider_lowBaselineResetCnt,5,4
 1907              		.global	Slider_sensorOnMask
 1908              		.global	Slider_sensorSignal
 1909              		.global	Slider_sensorBaselineLow
 1910              		.global	Slider_sensorBaseline
 1911              		.comm	Slider_rawFilterData1,10,4
 1912              		.section	.rodata
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 86


 1913              		.align	2
 1914              		.type	Slider_numberOfSensors, %object
 1915              		.size	Slider_numberOfSensors, 1
 1916              	Slider_numberOfSensors:
 1917 0000 05       		.byte	5
 1918 0001 000000   		.space	3
 1919              		.type	Slider_rawDataIndex, %object
 1920              		.size	Slider_rawDataIndex, 1
 1921              	Slider_rawDataIndex:
 1922 0004 00       		.space	1
 1923 0005 000000   		.data
 1924              		.align	2
 1925              		.set	.LANCHOR1,. + 0
 1926              		.type	Slider_debounce, %object
 1927              		.size	Slider_debounce, 1
 1928              	Slider_debounce:
 1929 0000 01       		.byte	1
 1930 0001 000000   		.space	3
 1931              		.type	Slider_lowBaselineReset, %object
 1932              		.size	Slider_lowBaselineReset, 5
 1933              	Slider_lowBaselineReset:
 1934 0004 1E       		.byte	30
 1935 0005 1E       		.byte	30
 1936 0006 1E       		.byte	30
 1937 0007 1E       		.byte	30
 1938 0008 1E       		.byte	30
 1939              		.type	Slider_enableRawFilters, %object
 1940              		.size	Slider_enableRawFilters, 1
 1941              	Slider_enableRawFilters:
 1942 0009 01       		.byte	1
 1943 000a 0000     		.space	2
 1944              		.type	Slider_posFiltersData, %object
 1945              		.size	Slider_posFiltersData, 3
 1946              	Slider_posFiltersData:
 1947 000c 01       		.byte	1
 1948 000d 00       		.byte	0
 1949 000e 00       		.byte	0
 1950 000f 00       		.bss
 1951              		.align	2
 1952              		.set	.LANCHOR0,. + 0
 1953              		.type	Slider_sensorBaseline, %object
 1954              		.size	Slider_sensorBaseline, 10
 1955              	Slider_sensorBaseline:
 1956 0000 00000000 		.space	10
 1956      00000000 
 1956      0000
 1957 000a 0000     		.space	2
 1958              		.type	Slider_sensorBaselineLow, %object
 1959              		.size	Slider_sensorBaselineLow, 5
 1960              	Slider_sensorBaselineLow:
 1961 000c 00000000 		.space	5
 1961      00
 1962 0011 000000   		.space	3
 1963              		.type	Slider_sensorSignal, %object
 1964              		.size	Slider_sensorSignal, 5
 1965              	Slider_sensorSignal:
 1966 0014 00000000 		.space	5
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 87


 1966      00
 1967 0019 000000   		.space	3
 1968              		.type	Slider_debounceCounter.5378, %object
 1969              		.size	Slider_debounceCounter.5378, 1
 1970              	Slider_debounceCounter.5378:
 1971 001c 00       		.space	1
 1972 001d 000000   		.space	3
 1973              		.type	Slider_sensorOnMask, %object
 1974              		.size	Slider_sensorOnMask, 1
 1975              	Slider_sensorOnMask:
 1976 0020 00       		.space	1
 1977 0021 000000   		.space	3
 1978              		.type	Slider_centroid.5430, %object
 1979              		.size	Slider_centroid.5430, 3
 1980              	Slider_centroid.5430:
 1981 0024 000000   		.space	3
 1982 0027 00       		.text
 1983              	.Letext0:
 1984              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 1985              		.file 3 ".\\Generated_Source\\PSoC4\\Slider_PVT.h"
 1986              		.file 4 ".\\Generated_Source\\PSoC4\\Slider.h"
 1987              		.section	.debug_info,"",%progbits
 1988              	.Ldebug_info0:
 1989 0000 CD100000 		.4byte	0x10cd
 1990 0004 0400     		.2byte	0x4
 1991 0006 00000000 		.4byte	.Ldebug_abbrev0
 1992 000a 04       		.byte	0x4
 1993 000b 01       		.uleb128 0x1
 1994 000c C0030000 		.4byte	.LASF139
 1995 0010 01       		.byte	0x1
 1996 0011 E2010000 		.4byte	.LASF140
 1997 0015 DF070000 		.4byte	.LASF141
 1998 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1999 001d 00000000 		.4byte	0
 2000 0021 00000000 		.4byte	.Ldebug_line0
 2001 0025 02       		.uleb128 0x2
 2002 0026 01       		.byte	0x1
 2003 0027 06       		.byte	0x6
 2004 0028 C8090000 		.4byte	.LASF0
 2005 002c 02       		.uleb128 0x2
 2006 002d 01       		.byte	0x1
 2007 002e 08       		.byte	0x8
 2008 002f A9080000 		.4byte	.LASF1
 2009 0033 02       		.uleb128 0x2
 2010 0034 02       		.byte	0x2
 2011 0035 05       		.byte	0x5
 2012 0036 AC060000 		.4byte	.LASF2
 2013 003a 02       		.uleb128 0x2
 2014 003b 02       		.byte	0x2
 2015 003c 07       		.byte	0x7
 2016 003d F0090000 		.4byte	.LASF3
 2017 0041 02       		.uleb128 0x2
 2018 0042 04       		.byte	0x4
 2019 0043 05       		.byte	0x5
 2020 0044 E2060000 		.4byte	.LASF4
 2021 0048 02       		.uleb128 0x2
 2022 0049 04       		.byte	0x4
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 88


 2023 004a 07       		.byte	0x7
 2024 004b CD070000 		.4byte	.LASF5
 2025 004f 02       		.uleb128 0x2
 2026 0050 08       		.byte	0x8
 2027 0051 05       		.byte	0x5
 2028 0052 5E050000 		.4byte	.LASF6
 2029 0056 02       		.uleb128 0x2
 2030 0057 08       		.byte	0x8
 2031 0058 07       		.byte	0x7
 2032 0059 7E020000 		.4byte	.LASF7
 2033 005d 03       		.uleb128 0x3
 2034 005e 04       		.byte	0x4
 2035 005f 05       		.byte	0x5
 2036 0060 696E7400 		.ascii	"int\000"
 2037 0064 02       		.uleb128 0x2
 2038 0065 04       		.byte	0x4
 2039 0066 07       		.byte	0x7
 2040 0067 D2000000 		.4byte	.LASF8
 2041 006b 04       		.uleb128 0x4
 2042 006c 340A0000 		.4byte	.LASF9
 2043 0070 02       		.byte	0x2
 2044 0071 C1       		.byte	0xc1
 2045 0072 2C000000 		.4byte	0x2c
 2046 0076 04       		.uleb128 0x4
 2047 0077 DF040000 		.4byte	.LASF10
 2048 007b 02       		.byte	0x2
 2049 007c C2       		.byte	0xc2
 2050 007d 3A000000 		.4byte	0x3a
 2051 0081 04       		.uleb128 0x4
 2052 0082 03060000 		.4byte	.LASF11
 2053 0086 02       		.byte	0x2
 2054 0087 C3       		.byte	0xc3
 2055 0088 48000000 		.4byte	0x48
 2056 008c 04       		.uleb128 0x4
 2057 008d 07010000 		.4byte	.LASF12
 2058 0091 02       		.byte	0x2
 2059 0092 C5       		.byte	0xc5
 2060 0093 33000000 		.4byte	0x33
 2061 0097 04       		.uleb128 0x4
 2062 0098 40020000 		.4byte	.LASF13
 2063 009c 02       		.byte	0x2
 2064 009d C6       		.byte	0xc6
 2065 009e 41000000 		.4byte	0x41
 2066 00a2 02       		.uleb128 0x2
 2067 00a3 04       		.byte	0x4
 2068 00a4 04       		.byte	0x4
 2069 00a5 09020000 		.4byte	.LASF14
 2070 00a9 02       		.uleb128 0x2
 2071 00aa 08       		.byte	0x8
 2072 00ab 04       		.byte	0x4
 2073 00ac 3A0A0000 		.4byte	.LASF15
 2074 00b0 02       		.uleb128 0x2
 2075 00b1 01       		.byte	0x1
 2076 00b2 08       		.byte	0x8
 2077 00b3 B1040000 		.4byte	.LASF16
 2078 00b7 02       		.uleb128 0x2
 2079 00b8 04       		.byte	0x4
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 89


 2080 00b9 07       		.byte	0x7
 2081 00ba C4070000 		.4byte	.LASF17
 2082 00be 05       		.uleb128 0x5
 2083 00bf 38       		.byte	0x38
 2084 00c0 03       		.byte	0x3
 2085 00c1 2F       		.byte	0x2f
 2086 00c2 6F010000 		.4byte	0x16f
 2087 00c6 06       		.uleb128 0x6
 2088 00c7 EB040000 		.4byte	.LASF18
 2089 00cb 03       		.byte	0x3
 2090 00cc 31       		.byte	0x31
 2091 00cd 6F010000 		.4byte	0x16f
 2092 00d1 00       		.byte	0
 2093 00d2 06       		.uleb128 0x6
 2094 00d3 9D060000 		.4byte	.LASF19
 2095 00d7 03       		.byte	0x3
 2096 00d8 32       		.byte	0x32
 2097 00d9 6F010000 		.4byte	0x16f
 2098 00dd 04       		.byte	0x4
 2099 00de 06       		.uleb128 0x6
 2100 00df 17090000 		.4byte	.LASF20
 2101 00e3 03       		.byte	0x3
 2102 00e4 33       		.byte	0x33
 2103 00e5 6F010000 		.4byte	0x16f
 2104 00e9 08       		.byte	0x8
 2105 00ea 06       		.uleb128 0x6
 2106 00eb 9C080000 		.4byte	.LASF21
 2107 00ef 03       		.byte	0x3
 2108 00f0 34       		.byte	0x34
 2109 00f1 6F010000 		.4byte	0x16f
 2110 00f5 0C       		.byte	0xc
 2111 00f6 06       		.uleb128 0x6
 2112 00f7 BE090000 		.4byte	.LASF22
 2113 00fb 03       		.byte	0x3
 2114 00fc 35       		.byte	0x35
 2115 00fd 6F010000 		.4byte	0x16f
 2116 0101 10       		.byte	0x10
 2117 0102 06       		.uleb128 0x6
 2118 0103 5A070000 		.4byte	.LASF23
 2119 0107 03       		.byte	0x3
 2120 0108 36       		.byte	0x36
 2121 0109 75010000 		.4byte	0x175
 2122 010d 14       		.byte	0x14
 2123 010e 06       		.uleb128 0x6
 2124 010f 60020000 		.4byte	.LASF24
 2125 0113 03       		.byte	0x3
 2126 0114 37       		.byte	0x37
 2127 0115 80010000 		.4byte	0x180
 2128 0119 18       		.byte	0x18
 2129 011a 06       		.uleb128 0x6
 2130 011b B9010000 		.4byte	.LASF25
 2131 011f 03       		.byte	0x3
 2132 0120 38       		.byte	0x38
 2133 0121 75010000 		.4byte	0x175
 2134 0125 1C       		.byte	0x1c
 2135 0126 06       		.uleb128 0x6
 2136 0127 6F000000 		.4byte	.LASF26
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 90


 2137 012b 03       		.byte	0x3
 2138 012c 39       		.byte	0x39
 2139 012d 75010000 		.4byte	0x175
 2140 0131 20       		.byte	0x20
 2141 0132 06       		.uleb128 0x6
 2142 0133 E3050000 		.4byte	.LASF27
 2143 0137 03       		.byte	0x3
 2144 0138 3A       		.byte	0x3a
 2145 0139 95010000 		.4byte	0x195
 2146 013d 24       		.byte	0x24
 2147 013e 06       		.uleb128 0x6
 2148 013f A4050000 		.4byte	.LASF28
 2149 0143 03       		.byte	0x3
 2150 0144 3B       		.byte	0x3b
 2151 0145 A6010000 		.4byte	0x1a6
 2152 0149 28       		.byte	0x28
 2153 014a 06       		.uleb128 0x6
 2154 014b 53030000 		.4byte	.LASF29
 2155 014f 03       		.byte	0x3
 2156 0150 3C       		.byte	0x3c
 2157 0151 95010000 		.4byte	0x195
 2158 0155 2C       		.byte	0x2c
 2159 0156 06       		.uleb128 0x6
 2160 0157 9D000000 		.4byte	.LASF30
 2161 015b 03       		.byte	0x3
 2162 015c 3D       		.byte	0x3d
 2163 015d C0010000 		.4byte	0x1c0
 2164 0161 30       		.byte	0x30
 2165 0162 06       		.uleb128 0x6
 2166 0163 030A0000 		.4byte	.LASF31
 2167 0167 03       		.byte	0x3
 2168 0168 3E       		.byte	0x3e
 2169 0169 DB010000 		.4byte	0x1db
 2170 016d 34       		.byte	0x34
 2171 016e 00       		.byte	0
 2172 016f 07       		.uleb128 0x7
 2173 0170 04       		.byte	0x4
 2174 0171 6B000000 		.4byte	0x6b
 2175 0175 07       		.uleb128 0x7
 2176 0176 04       		.byte	0x4
 2177 0177 7B010000 		.4byte	0x17b
 2178 017b 08       		.uleb128 0x8
 2179 017c 6B000000 		.4byte	0x6b
 2180 0180 07       		.uleb128 0x7
 2181 0181 04       		.byte	0x4
 2182 0182 81000000 		.4byte	0x81
 2183 0186 09       		.uleb128 0x9
 2184 0187 76000000 		.4byte	0x76
 2185 018b 95010000 		.4byte	0x195
 2186 018f 0A       		.uleb128 0xa
 2187 0190 81000000 		.4byte	0x81
 2188 0194 00       		.byte	0
 2189 0195 07       		.uleb128 0x7
 2190 0196 04       		.byte	0x4
 2191 0197 86010000 		.4byte	0x186
 2192 019b 0B       		.uleb128 0xb
 2193 019c A6010000 		.4byte	0x1a6
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 91


 2194 01a0 0A       		.uleb128 0xa
 2195 01a1 81000000 		.4byte	0x81
 2196 01a5 00       		.byte	0
 2197 01a6 07       		.uleb128 0x7
 2198 01a7 04       		.byte	0x4
 2199 01a8 9B010000 		.4byte	0x19b
 2200 01ac 09       		.uleb128 0x9
 2201 01ad 81000000 		.4byte	0x81
 2202 01b1 C0010000 		.4byte	0x1c0
 2203 01b5 0A       		.uleb128 0xa
 2204 01b6 75010000 		.4byte	0x175
 2205 01ba 0A       		.uleb128 0xa
 2206 01bb 81000000 		.4byte	0x81
 2207 01bf 00       		.byte	0
 2208 01c0 07       		.uleb128 0x7
 2209 01c1 04       		.byte	0x4
 2210 01c2 AC010000 		.4byte	0x1ac
 2211 01c6 0B       		.uleb128 0xb
 2212 01c7 DB010000 		.4byte	0x1db
 2213 01cb 0A       		.uleb128 0xa
 2214 01cc 6F010000 		.4byte	0x16f
 2215 01d0 0A       		.uleb128 0xa
 2216 01d1 81000000 		.4byte	0x81
 2217 01d5 0A       		.uleb128 0xa
 2218 01d6 81000000 		.4byte	0x81
 2219 01da 00       		.byte	0
 2220 01db 07       		.uleb128 0x7
 2221 01dc 04       		.byte	0x4
 2222 01dd C6010000 		.4byte	0x1c6
 2223 01e1 04       		.uleb128 0x4
 2224 01e2 76090000 		.4byte	.LASF32
 2225 01e6 03       		.byte	0x3
 2226 01e7 3F       		.byte	0x3f
 2227 01e8 BE000000 		.4byte	0xbe
 2228 01ec 05       		.uleb128 0x5
 2229 01ed 0C       		.byte	0xc
 2230 01ee 03       		.byte	0x3
 2231 01ef 41       		.byte	0x41
 2232 01f0 3D020000 		.4byte	0x23d
 2233 01f4 06       		.uleb128 0x6
 2234 01f5 6A040000 		.4byte	.LASF33
 2235 01f9 03       		.byte	0x3
 2236 01fa 43       		.byte	0x43
 2237 01fb 6B000000 		.4byte	0x6b
 2238 01ff 00       		.byte	0
 2239 0200 06       		.uleb128 0x6
 2240 0201 C6010000 		.4byte	.LASF34
 2241 0205 03       		.byte	0x3
 2242 0206 44       		.byte	0x44
 2243 0207 6B000000 		.4byte	0x6b
 2244 020b 01       		.byte	0x1
 2245 020c 06       		.uleb128 0x6
 2246 020d DF000000 		.4byte	.LASF35
 2247 0211 03       		.byte	0x3
 2248 0212 45       		.byte	0x45
 2249 0213 6B000000 		.4byte	0x6b
 2250 0217 02       		.byte	0x2
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 92


 2251 0218 06       		.uleb128 0x6
 2252 0219 A1040000 		.4byte	.LASF36
 2253 021d 03       		.byte	0x3
 2254 021e 46       		.byte	0x46
 2255 021f 76000000 		.4byte	0x76
 2256 0223 04       		.byte	0x4
 2257 0224 06       		.uleb128 0x6
 2258 0225 3C060000 		.4byte	.LASF37
 2259 0229 03       		.byte	0x3
 2260 022a 47       		.byte	0x47
 2261 022b 76000000 		.4byte	0x76
 2262 022f 06       		.byte	0x6
 2263 0230 06       		.uleb128 0x6
 2264 0231 66000000 		.4byte	.LASF38
 2265 0235 03       		.byte	0x3
 2266 0236 48       		.byte	0x48
 2267 0237 3D020000 		.4byte	0x23d
 2268 023b 08       		.byte	0x8
 2269 023c 00       		.byte	0
 2270 023d 07       		.uleb128 0x7
 2271 023e 04       		.byte	0x4
 2272 023f 43020000 		.4byte	0x243
 2273 0243 08       		.uleb128 0x8
 2274 0244 E1010000 		.4byte	0x1e1
 2275 0248 04       		.uleb128 0x4
 2276 0249 3E070000 		.4byte	.LASF39
 2277 024d 03       		.byte	0x3
 2278 024e 49       		.byte	0x49
 2279 024f EC010000 		.4byte	0x1ec
 2280 0253 0C       		.uleb128 0xc
 2281 0254 A9010000 		.4byte	.LASF40
 2282 0258 01       		.byte	0x1
 2283 0259 8E       		.byte	0x8e
 2284 025a 00000000 		.4byte	.LFB35
 2285 025e 24000000 		.4byte	.LFE35-.LFB35
 2286 0262 01       		.uleb128 0x1
 2287 0263 9C       		.byte	0x9c
 2288 0264 78020000 		.4byte	0x278
 2289 0268 0D       		.uleb128 0xd
 2290 0269 9A040000 		.4byte	.LASF42
 2291 026d 01       		.byte	0x1
 2292 026e 8E       		.byte	0x8e
 2293 026f 81000000 		.4byte	0x81
 2294 0273 00000000 		.4byte	.LLST0
 2295 0277 00       		.byte	0
 2296 0278 0C       		.uleb128 0xc
 2297 0279 FA040000 		.4byte	.LASF41
 2298 027d 01       		.byte	0x1
 2299 027e D9       		.byte	0xd9
 2300 027f 00000000 		.4byte	.LFB36
 2301 0283 18000000 		.4byte	.LFE36-.LFB36
 2302 0287 01       		.uleb128 0x1
 2303 0288 9C       		.byte	0x9c
 2304 0289 CA020000 		.4byte	0x2ca
 2305 028d 0D       		.uleb128 0xd
 2306 028e 9A040000 		.4byte	.LASF42
 2307 0292 01       		.byte	0x1
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 93


 2308 0293 D9       		.byte	0xd9
 2309 0294 81000000 		.4byte	0x81
 2310 0298 21000000 		.4byte	.LLST1
 2311 029c 0E       		.uleb128 0xe
 2312 029d 08000000 		.4byte	.LVL3
 2313 02a1 3F100000 		.4byte	0x103f
 2314 02a5 B0020000 		.4byte	0x2b0
 2315 02a9 0F       		.uleb128 0xf
 2316 02aa 01       		.uleb128 0x1
 2317 02ab 50       		.byte	0x50
 2318 02ac 02       		.uleb128 0x2
 2319 02ad 74       		.byte	0x74
 2320 02ae 00       		.sleb128 0
 2321 02af 00       		.byte	0
 2322 02b0 10       		.uleb128 0x10
 2323 02b1 0C000000 		.4byte	.LVL4
 2324 02b5 50100000 		.4byte	0x1050
 2325 02b9 11       		.uleb128 0x11
 2326 02ba 16000000 		.4byte	.LVL5
 2327 02be 53020000 		.4byte	0x253
 2328 02c2 0F       		.uleb128 0xf
 2329 02c3 01       		.uleb128 0x1
 2330 02c4 50       		.byte	0x50
 2331 02c5 02       		.uleb128 0x2
 2332 02c6 74       		.byte	0x74
 2333 02c7 00       		.sleb128 0
 2334 02c8 00       		.byte	0
 2335 02c9 00       		.byte	0
 2336 02ca 0C       		.uleb128 0xc
 2337 02cb 7C040000 		.4byte	.LASF43
 2338 02cf 01       		.byte	0x1
 2339 02d0 FE       		.byte	0xfe
 2340 02d1 00000000 		.4byte	.LFB37
 2341 02d5 14000000 		.4byte	.LFE37-.LFB37
 2342 02d9 01       		.uleb128 0x1
 2343 02da 9C       		.byte	0x9c
 2344 02db FE020000 		.4byte	0x2fe
 2345 02df 12       		.uleb128 0x12
 2346 02e0 6900     		.ascii	"i\000"
 2347 02e2 01       		.byte	0x1
 2348 02e3 0001     		.2byte	0x100
 2349 02e5 81000000 		.4byte	0x81
 2350 02e9 4D000000 		.4byte	.LLST2
 2351 02ed 11       		.uleb128 0x11
 2352 02ee 0C000000 		.4byte	.LVL9
 2353 02f2 78020000 		.4byte	0x278
 2354 02f6 0F       		.uleb128 0xf
 2355 02f7 01       		.uleb128 0x1
 2356 02f8 50       		.byte	0x50
 2357 02f9 02       		.uleb128 0x2
 2358 02fa 74       		.byte	0x74
 2359 02fb 00       		.sleb128 0
 2360 02fc 00       		.byte	0
 2361 02fd 00       		.byte	0
 2362 02fe 13       		.uleb128 0x13
 2363 02ff 4A060000 		.4byte	.LASF44
 2364 0303 01       		.byte	0x1
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 94


 2365 0304 2101     		.2byte	0x121
 2366 0306 00000000 		.4byte	.LFB38
 2367 030a 34000000 		.4byte	.LFE38-.LFB38
 2368 030e 01       		.uleb128 0x1
 2369 030f 9C       		.byte	0x9c
 2370 0310 6F030000 		.4byte	0x36f
 2371 0314 12       		.uleb128 0x12
 2372 0315 6900     		.ascii	"i\000"
 2373 0317 01       		.byte	0x1
 2374 0318 2301     		.2byte	0x123
 2375 031a 81000000 		.4byte	0x81
 2376 031e 6C000000 		.4byte	.LLST3
 2377 0322 14       		.uleb128 0x14
 2378 0323 B5000000 		.4byte	.LASF45
 2379 0327 01       		.byte	0x1
 2380 0328 2401     		.2byte	0x124
 2381 032a 81000000 		.4byte	0x81
 2382 032e 7F000000 		.4byte	.LLST4
 2383 0332 10       		.uleb128 0x10
 2384 0333 06000000 		.4byte	.LVL12
 2385 0337 5B100000 		.4byte	0x105b
 2386 033b 10       		.uleb128 0x10
 2387 033c 0A000000 		.4byte	.LVL13
 2388 0340 50100000 		.4byte	0x1050
 2389 0344 0E       		.uleb128 0xe
 2390 0345 1C000000 		.4byte	.LVL15
 2391 0349 62100000 		.4byte	0x1062
 2392 034d 5E030000 		.4byte	0x35e
 2393 0351 0F       		.uleb128 0xf
 2394 0352 01       		.uleb128 0x1
 2395 0353 51       		.byte	0x51
 2396 0354 02       		.uleb128 0x2
 2397 0355 74       		.byte	0x74
 2398 0356 00       		.sleb128 0
 2399 0357 0F       		.uleb128 0xf
 2400 0358 01       		.uleb128 0x1
 2401 0359 50       		.byte	0x50
 2402 035a 02       		.uleb128 0x2
 2403 035b 75       		.byte	0x75
 2404 035c 00       		.sleb128 0
 2405 035d 00       		.byte	0
 2406 035e 11       		.uleb128 0x11
 2407 035f 26000000 		.4byte	.LVL17
 2408 0363 53020000 		.4byte	0x253
 2409 0367 0F       		.uleb128 0xf
 2410 0368 01       		.uleb128 0x1
 2411 0369 50       		.byte	0x50
 2412 036a 02       		.uleb128 0x2
 2413 036b 74       		.byte	0x74
 2414 036c 00       		.sleb128 0
 2415 036d 00       		.byte	0
 2416 036e 00       		.byte	0
 2417 036f 15       		.uleb128 0x15
 2418 0370 22070000 		.4byte	.LASF48
 2419 0374 01       		.byte	0x1
 2420 0375 B502     		.2byte	0x2b5
 2421 0377 76000000 		.4byte	0x76
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 95


 2422 037b 00000000 		.4byte	.LFB43
 2423 037f 0C000000 		.4byte	.LFE43-.LFB43
 2424 0383 01       		.uleb128 0x1
 2425 0384 9C       		.byte	0x9c
 2426 0385 9A030000 		.4byte	0x39a
 2427 0389 16       		.uleb128 0x16
 2428 038a 9A040000 		.4byte	.LASF42
 2429 038e 01       		.byte	0x1
 2430 038f B502     		.2byte	0x2b5
 2431 0391 81000000 		.4byte	0x81
 2432 0395 92000000 		.4byte	.LLST5
 2433 0399 00       		.byte	0
 2434 039a 13       		.uleb128 0x13
 2435 039b 4F000000 		.4byte	.LASF46
 2436 039f 01       		.byte	0x1
 2437 03a0 D002     		.2byte	0x2d0
 2438 03a2 00000000 		.4byte	.LFB44
 2439 03a6 0C000000 		.4byte	.LFE44-.LFB44
 2440 03aa 01       		.uleb128 0x1
 2441 03ab 9C       		.byte	0x9c
 2442 03ac CF030000 		.4byte	0x3cf
 2443 03b0 16       		.uleb128 0x16
 2444 03b1 9A040000 		.4byte	.LASF42
 2445 03b5 01       		.byte	0x1
 2446 03b6 D002     		.2byte	0x2d0
 2447 03b8 81000000 		.4byte	0x81
 2448 03bc B3000000 		.4byte	.LLST6
 2449 03c0 17       		.uleb128 0x17
 2450 03c1 E6040000 		.4byte	.LASF47
 2451 03c5 01       		.byte	0x1
 2452 03c6 D002     		.2byte	0x2d0
 2453 03c8 76000000 		.4byte	0x76
 2454 03cc 01       		.uleb128 0x1
 2455 03cd 51       		.byte	0x51
 2456 03ce 00       		.byte	0
 2457 03cf 15       		.uleb128 0x15
 2458 03d0 3C040000 		.4byte	.LASF49
 2459 03d4 01       		.byte	0x1
 2460 03d5 EB02     		.2byte	0x2eb
 2461 03d7 6B000000 		.4byte	0x6b
 2462 03db 00000000 		.4byte	.LFB45
 2463 03df 0C000000 		.4byte	.LFE45-.LFB45
 2464 03e3 01       		.uleb128 0x1
 2465 03e4 9C       		.byte	0x9c
 2466 03e5 FA030000 		.4byte	0x3fa
 2467 03e9 16       		.uleb128 0x16
 2468 03ea 9A040000 		.4byte	.LASF42
 2469 03ee 01       		.byte	0x1
 2470 03ef EB02     		.2byte	0x2eb
 2471 03f1 81000000 		.4byte	0x81
 2472 03f5 D4000000 		.4byte	.LLST7
 2473 03f9 00       		.byte	0
 2474 03fa 13       		.uleb128 0x13
 2475 03fb 28020000 		.4byte	.LASF50
 2476 03ff 01       		.byte	0x1
 2477 0400 0603     		.2byte	0x306
 2478 0402 00000000 		.4byte	.LFB46
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 96


 2479 0406 0C000000 		.4byte	.LFE46-.LFB46
 2480 040a 01       		.uleb128 0x1
 2481 040b 9C       		.byte	0x9c
 2482 040c 2F040000 		.4byte	0x42f
 2483 0410 16       		.uleb128 0x16
 2484 0411 9A040000 		.4byte	.LASF42
 2485 0415 01       		.byte	0x1
 2486 0416 0603     		.2byte	0x306
 2487 0418 81000000 		.4byte	0x81
 2488 041c F5000000 		.4byte	.LLST8
 2489 0420 17       		.uleb128 0x17
 2490 0421 C2020000 		.4byte	.LASF51
 2491 0425 01       		.byte	0x1
 2492 0426 0603     		.2byte	0x306
 2493 0428 6B000000 		.4byte	0x6b
 2494 042c 01       		.uleb128 0x1
 2495 042d 51       		.byte	0x51
 2496 042e 00       		.byte	0
 2497 042f 15       		.uleb128 0x15
 2498 0430 C8060000 		.4byte	.LASF52
 2499 0434 01       		.byte	0x1
 2500 0435 2103     		.2byte	0x321
 2501 0437 6B000000 		.4byte	0x6b
 2502 043b 00000000 		.4byte	.LFB47
 2503 043f 0C000000 		.4byte	.LFE47-.LFB47
 2504 0443 01       		.uleb128 0x1
 2505 0444 9C       		.byte	0x9c
 2506 0445 5A040000 		.4byte	0x45a
 2507 0449 16       		.uleb128 0x16
 2508 044a BB020000 		.4byte	.LASF53
 2509 044e 01       		.byte	0x1
 2510 044f 2103     		.2byte	0x321
 2511 0451 81000000 		.4byte	0x81
 2512 0455 16010000 		.4byte	.LLST9
 2513 0459 00       		.byte	0
 2514 045a 15       		.uleb128 0x15
 2515 045b 25050000 		.4byte	.LASF54
 2516 045f 01       		.byte	0x1
 2517 0460 3C03     		.2byte	0x33c
 2518 0462 6B000000 		.4byte	0x6b
 2519 0466 00000000 		.4byte	.LFB48
 2520 046a 0C000000 		.4byte	.LFE48-.LFB48
 2521 046e 01       		.uleb128 0x1
 2522 046f 9C       		.byte	0x9c
 2523 0470 85040000 		.4byte	0x485
 2524 0474 16       		.uleb128 0x16
 2525 0475 BB020000 		.4byte	.LASF53
 2526 0479 01       		.byte	0x1
 2527 047a 3C03     		.2byte	0x33c
 2528 047c 81000000 		.4byte	0x81
 2529 0480 37010000 		.4byte	.LLST10
 2530 0484 00       		.byte	0
 2531 0485 15       		.uleb128 0x15
 2532 0486 89050000 		.4byte	.LASF55
 2533 048a 01       		.byte	0x1
 2534 048b 5803     		.2byte	0x358
 2535 048d 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 97


 2536 0491 00000000 		.4byte	.LFB49
 2537 0495 0C000000 		.4byte	.LFE49-.LFB49
 2538 0499 01       		.uleb128 0x1
 2539 049a 9C       		.byte	0x9c
 2540 049b B0040000 		.4byte	0x4b0
 2541 049f 16       		.uleb128 0x16
 2542 04a0 BB020000 		.4byte	.LASF53
 2543 04a4 01       		.byte	0x1
 2544 04a5 5803     		.2byte	0x358
 2545 04a7 81000000 		.4byte	0x81
 2546 04ab 58010000 		.4byte	.LLST11
 2547 04af 00       		.byte	0
 2548 04b0 15       		.uleb128 0x15
 2549 04b1 86070000 		.4byte	.LASF56
 2550 04b5 01       		.byte	0x1
 2551 04b6 7403     		.2byte	0x374
 2552 04b8 6B000000 		.4byte	0x6b
 2553 04bc 00000000 		.4byte	.LFB50
 2554 04c0 0C000000 		.4byte	.LFE50-.LFB50
 2555 04c4 01       		.uleb128 0x1
 2556 04c5 9C       		.byte	0x9c
 2557 04c6 DB040000 		.4byte	0x4db
 2558 04ca 16       		.uleb128 0x16
 2559 04cb BB020000 		.4byte	.LASF53
 2560 04cf 01       		.byte	0x1
 2561 04d0 7403     		.2byte	0x374
 2562 04d2 81000000 		.4byte	0x81
 2563 04d6 79010000 		.4byte	.LLST12
 2564 04da 00       		.byte	0
 2565 04db 13       		.uleb128 0x13
 2566 04dc 6F030000 		.4byte	.LASF57
 2567 04e0 01       		.byte	0x1
 2568 04e1 9503     		.2byte	0x395
 2569 04e3 00000000 		.4byte	.LFB51
 2570 04e7 0C000000 		.4byte	.LFE51-.LFB51
 2571 04eb 01       		.uleb128 0x1
 2572 04ec 9C       		.byte	0x9c
 2573 04ed 0E050000 		.4byte	0x50e
 2574 04f1 17       		.uleb128 0x17
 2575 04f2 BB020000 		.4byte	.LASF53
 2576 04f6 01       		.byte	0x1
 2577 04f7 9503     		.2byte	0x395
 2578 04f9 81000000 		.4byte	0x81
 2579 04fd 01       		.uleb128 0x1
 2580 04fe 50       		.byte	0x50
 2581 04ff 17       		.uleb128 0x17
 2582 0500 C2020000 		.4byte	.LASF51
 2583 0504 01       		.byte	0x1
 2584 0505 9503     		.2byte	0x395
 2585 0507 6B000000 		.4byte	0x6b
 2586 050b 01       		.uleb128 0x1
 2587 050c 51       		.byte	0x51
 2588 050d 00       		.byte	0
 2589 050e 13       		.uleb128 0x13
 2590 050f B40A0000 		.4byte	.LASF58
 2591 0513 01       		.byte	0x1
 2592 0514 B103     		.2byte	0x3b1
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 98


 2593 0516 00000000 		.4byte	.LFB52
 2594 051a 0C000000 		.4byte	.LFE52-.LFB52
 2595 051e 01       		.uleb128 0x1
 2596 051f 9C       		.byte	0x9c
 2597 0520 41050000 		.4byte	0x541
 2598 0524 17       		.uleb128 0x17
 2599 0525 BB020000 		.4byte	.LASF53
 2600 0529 01       		.byte	0x1
 2601 052a B103     		.2byte	0x3b1
 2602 052c 81000000 		.4byte	0x81
 2603 0530 01       		.uleb128 0x1
 2604 0531 50       		.byte	0x50
 2605 0532 17       		.uleb128 0x17
 2606 0533 C2020000 		.4byte	.LASF51
 2607 0537 01       		.byte	0x1
 2608 0538 B103     		.2byte	0x3b1
 2609 053a 6B000000 		.4byte	0x6b
 2610 053e 01       		.uleb128 0x1
 2611 053f 51       		.byte	0x51
 2612 0540 00       		.byte	0
 2613 0541 13       		.uleb128 0x13
 2614 0542 4E080000 		.4byte	.LASF59
 2615 0546 01       		.byte	0x1
 2616 0547 CD03     		.2byte	0x3cd
 2617 0549 00000000 		.4byte	.LFB53
 2618 054d 0C000000 		.4byte	.LFE53-.LFB53
 2619 0551 01       		.uleb128 0x1
 2620 0552 9C       		.byte	0x9c
 2621 0553 74050000 		.4byte	0x574
 2622 0557 17       		.uleb128 0x17
 2623 0558 BB020000 		.4byte	.LASF53
 2624 055c 01       		.byte	0x1
 2625 055d CD03     		.2byte	0x3cd
 2626 055f 81000000 		.4byte	0x81
 2627 0563 01       		.uleb128 0x1
 2628 0564 50       		.byte	0x50
 2629 0565 17       		.uleb128 0x17
 2630 0566 C2020000 		.4byte	.LASF51
 2631 056a 01       		.byte	0x1
 2632 056b CD03     		.2byte	0x3cd
 2633 056d 6B000000 		.4byte	0x6b
 2634 0571 01       		.uleb128 0x1
 2635 0572 51       		.byte	0x51
 2636 0573 00       		.byte	0
 2637 0574 13       		.uleb128 0x13
 2638 0575 55090000 		.4byte	.LASF60
 2639 0579 01       		.byte	0x1
 2640 057a EA03     		.2byte	0x3ea
 2641 057c 00000000 		.4byte	.LFB54
 2642 0580 0C000000 		.4byte	.LFE54-.LFB54
 2643 0584 01       		.uleb128 0x1
 2644 0585 9C       		.byte	0x9c
 2645 0586 A7050000 		.4byte	0x5a7
 2646 058a 17       		.uleb128 0x17
 2647 058b BB020000 		.4byte	.LASF53
 2648 058f 01       		.byte	0x1
 2649 0590 EA03     		.2byte	0x3ea
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 99


 2650 0592 81000000 		.4byte	0x81
 2651 0596 01       		.uleb128 0x1
 2652 0597 50       		.byte	0x50
 2653 0598 17       		.uleb128 0x17
 2654 0599 C2020000 		.4byte	.LASF51
 2655 059d 01       		.byte	0x1
 2656 059e EA03     		.2byte	0x3ea
 2657 05a0 6B000000 		.4byte	0x6b
 2658 05a4 01       		.uleb128 0x1
 2659 05a5 51       		.byte	0x51
 2660 05a6 00       		.byte	0
 2661 05a7 13       		.uleb128 0x13
 2662 05a8 AB090000 		.4byte	.LASF61
 2663 05ac 01       		.byte	0x1
 2664 05ad 0604     		.2byte	0x406
 2665 05af 00000000 		.4byte	.LFB55
 2666 05b3 0C000000 		.4byte	.LFE55-.LFB55
 2667 05b7 01       		.uleb128 0x1
 2668 05b8 9C       		.byte	0x9c
 2669 05b9 DA050000 		.4byte	0x5da
 2670 05bd 17       		.uleb128 0x17
 2671 05be BB020000 		.4byte	.LASF53
 2672 05c2 01       		.byte	0x1
 2673 05c3 0604     		.2byte	0x406
 2674 05c5 81000000 		.4byte	0x81
 2675 05c9 01       		.uleb128 0x1
 2676 05ca 50       		.byte	0x50
 2677 05cb 17       		.uleb128 0x17
 2678 05cc C2020000 		.4byte	.LASF51
 2679 05d0 01       		.byte	0x1
 2680 05d1 0604     		.2byte	0x406
 2681 05d3 6B000000 		.4byte	0x6b
 2682 05d7 01       		.uleb128 0x1
 2683 05d8 51       		.byte	0x51
 2684 05d9 00       		.byte	0
 2685 05da 13       		.uleb128 0x13
 2686 05db 680A0000 		.4byte	.LASF62
 2687 05df 01       		.byte	0x1
 2688 05e0 2204     		.2byte	0x422
 2689 05e2 00000000 		.4byte	.LFB56
 2690 05e6 0C000000 		.4byte	.LFE56-.LFB56
 2691 05ea 01       		.uleb128 0x1
 2692 05eb 9C       		.byte	0x9c
 2693 05ec 0F060000 		.4byte	0x60f
 2694 05f0 16       		.uleb128 0x16
 2695 05f1 9A040000 		.4byte	.LASF42
 2696 05f5 01       		.byte	0x1
 2697 05f6 2204     		.2byte	0x422
 2698 05f8 81000000 		.4byte	0x81
 2699 05fc 9A010000 		.4byte	.LLST13
 2700 0600 17       		.uleb128 0x17
 2701 0601 C2020000 		.4byte	.LASF51
 2702 0605 01       		.byte	0x1
 2703 0606 2204     		.2byte	0x422
 2704 0608 6B000000 		.4byte	0x6b
 2705 060c 01       		.uleb128 0x1
 2706 060d 51       		.byte	0x51
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 100


 2707 060e 00       		.byte	0
 2708 060f 15       		.uleb128 0x15
 2709 0610 6B070000 		.4byte	.LASF63
 2710 0614 01       		.byte	0x1
 2711 0615 5004     		.2byte	0x450
 2712 0617 81000000 		.4byte	0x81
 2713 061b 00000000 		.4byte	.LFB57
 2714 061f 9C000000 		.4byte	.LFE57-.LFB57
 2715 0623 01       		.uleb128 0x1
 2716 0624 9C       		.byte	0x9c
 2717 0625 10070000 		.4byte	0x710
 2718 0629 16       		.uleb128 0x16
 2719 062a 9A040000 		.4byte	.LASF42
 2720 062e 01       		.byte	0x1
 2721 062f 5004     		.2byte	0x450
 2722 0631 81000000 		.4byte	0x81
 2723 0635 BB010000 		.4byte	.LLST14
 2724 0639 14       		.uleb128 0x14
 2725 063a BB020000 		.4byte	.LASF53
 2726 063e 01       		.byte	0x1
 2727 063f 5204     		.2byte	0x452
 2728 0641 6B000000 		.4byte	0x6b
 2729 0645 E7010000 		.4byte	.LLST15
 2730 0649 14       		.uleb128 0x14
 2731 064a 80050000 		.4byte	.LASF64
 2732 064e 01       		.byte	0x1
 2733 064f 5304     		.2byte	0x453
 2734 0651 6B000000 		.4byte	0x6b
 2735 0655 14020000 		.4byte	.LLST16
 2736 0659 18       		.uleb128 0x18
 2737 065a CA080000 		.4byte	.LASF65
 2738 065e 01       		.byte	0x1
 2739 065f 5404     		.2byte	0x454
 2740 0661 6B000000 		.4byte	0x6b
 2741 0665 00       		.byte	0
 2742 0666 14       		.uleb128 0x14
 2743 0667 8C080000 		.4byte	.LASF66
 2744 066b 01       		.byte	0x1
 2745 066c 5604     		.2byte	0x456
 2746 066e 6B000000 		.4byte	0x6b
 2747 0672 4A020000 		.4byte	.LLST17
 2748 0676 14       		.uleb128 0x14
 2749 0677 64030000 		.4byte	.LASF67
 2750 067b 01       		.byte	0x1
 2751 067c 5704     		.2byte	0x457
 2752 067e 6B000000 		.4byte	0x6b
 2753 0682 95020000 		.4byte	.LLST18
 2754 0686 19       		.uleb128 0x19
 2755 0687 26090000 		.4byte	.LASF68
 2756 068b 01       		.byte	0x1
 2757 068c 5804     		.2byte	0x458
 2758 068e 10070000 		.4byte	0x710
 2759 0692 05       		.uleb128 0x5
 2760 0693 03       		.byte	0x3
 2761 0694 1C000000 		.4byte	Slider_debounceCounter.5378
 2762 0698 0E       		.uleb128 0xe
 2763 0699 22000000 		.4byte	.LVL52
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 101


 2764 069d 62100000 		.4byte	0x1062
 2765 06a1 B5060000 		.4byte	0x6b5
 2766 06a5 0F       		.uleb128 0xf
 2767 06a6 01       		.uleb128 0x1
 2768 06a7 51       		.byte	0x51
 2769 06a8 02       		.uleb128 0x2
 2770 06a9 74       		.byte	0x74
 2771 06aa 00       		.sleb128 0
 2772 06ab 0F       		.uleb128 0xf
 2773 06ac 01       		.uleb128 0x1
 2774 06ad 50       		.byte	0x50
 2775 06ae 05       		.uleb128 0x5
 2776 06af 03       		.byte	0x3
 2777 06b0 20000000 		.4byte	.LANCHOR0+32
 2778 06b4 00       		.byte	0
 2779 06b5 0E       		.uleb128 0xe
 2780 06b6 40000000 		.4byte	.LVL54
 2781 06ba 7C100000 		.4byte	0x107c
 2782 06be D4060000 		.4byte	0x6d4
 2783 06c2 0F       		.uleb128 0xf
 2784 06c3 01       		.uleb128 0x1
 2785 06c4 52       		.byte	0x52
 2786 06c5 01       		.uleb128 0x1
 2787 06c6 30       		.byte	0x30
 2788 06c7 0F       		.uleb128 0xf
 2789 06c8 01       		.uleb128 0x1
 2790 06c9 51       		.byte	0x51
 2791 06ca 02       		.uleb128 0x2
 2792 06cb 74       		.byte	0x74
 2793 06cc 00       		.sleb128 0
 2794 06cd 0F       		.uleb128 0xf
 2795 06ce 01       		.uleb128 0x1
 2796 06cf 50       		.byte	0x50
 2797 06d0 02       		.uleb128 0x2
 2798 06d1 75       		.byte	0x75
 2799 06d2 20       		.sleb128 32
 2800 06d3 00       		.byte	0
 2801 06d4 0E       		.uleb128 0xe
 2802 06d5 6A000000 		.4byte	.LVL57
 2803 06d9 7C100000 		.4byte	0x107c
 2804 06dd F6060000 		.4byte	0x6f6
 2805 06e1 0F       		.uleb128 0xf
 2806 06e2 01       		.uleb128 0x1
 2807 06e3 52       		.byte	0x52
 2808 06e4 01       		.uleb128 0x1
 2809 06e5 31       		.byte	0x31
 2810 06e6 0F       		.uleb128 0xf
 2811 06e7 01       		.uleb128 0x1
 2812 06e8 51       		.byte	0x51
 2813 06e9 02       		.uleb128 0x2
 2814 06ea 74       		.byte	0x74
 2815 06eb 00       		.sleb128 0
 2816 06ec 0F       		.uleb128 0xf
 2817 06ed 01       		.uleb128 0x1
 2818 06ee 50       		.byte	0x50
 2819 06ef 05       		.uleb128 0x5
 2820 06f0 03       		.byte	0x3
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 102


 2821 06f1 20000000 		.4byte	.LANCHOR0+32
 2822 06f5 00       		.byte	0
 2823 06f6 11       		.uleb128 0x11
 2824 06f7 7A000000 		.4byte	.LVL58
 2825 06fb 62100000 		.4byte	0x1062
 2826 06ff 0F       		.uleb128 0xf
 2827 0700 01       		.uleb128 0x1
 2828 0701 51       		.byte	0x51
 2829 0702 02       		.uleb128 0x2
 2830 0703 74       		.byte	0x74
 2831 0704 00       		.sleb128 0
 2832 0705 0F       		.uleb128 0xf
 2833 0706 01       		.uleb128 0x1
 2834 0707 50       		.byte	0x50
 2835 0708 05       		.uleb128 0x5
 2836 0709 03       		.byte	0x3
 2837 070a 20000000 		.4byte	.LANCHOR0+32
 2838 070e 00       		.byte	0
 2839 070f 00       		.byte	0
 2840 0710 1A       		.uleb128 0x1a
 2841 0711 6B000000 		.4byte	0x6b
 2842 0715 20070000 		.4byte	0x720
 2843 0719 1B       		.uleb128 0x1b
 2844 071a B7000000 		.4byte	0xb7
 2845 071e 00       		.byte	0
 2846 071f 00       		.byte	0
 2847 0720 15       		.uleb128 0x15
 2848 0721 35010000 		.4byte	.LASF69
 2849 0725 01       		.byte	0x1
 2850 0726 A704     		.2byte	0x4a7
 2851 0728 81000000 		.4byte	0x81
 2852 072c 00000000 		.4byte	.LFB58
 2853 0730 1E000000 		.4byte	.LFE58-.LFB58
 2854 0734 01       		.uleb128 0x1
 2855 0735 9C       		.byte	0x9c
 2856 0736 88070000 		.4byte	0x788
 2857 073a 16       		.uleb128 0x16
 2858 073b BB020000 		.4byte	.LASF53
 2859 073f 01       		.byte	0x1
 2860 0740 A704     		.2byte	0x4a7
 2861 0742 81000000 		.4byte	0x81
 2862 0746 EB020000 		.4byte	.LLST19
 2863 074a 14       		.uleb128 0x14
 2864 074b 3E050000 		.4byte	.LASF70
 2865 074f 01       		.byte	0x1
 2866 0750 A904     		.2byte	0x4a9
 2867 0752 81000000 		.4byte	0x81
 2868 0756 0C030000 		.4byte	.LLST20
 2869 075a 18       		.uleb128 0x18
 2870 075b C5000000 		.4byte	.LASF71
 2871 075f 01       		.byte	0x1
 2872 0760 AA04     		.2byte	0x4aa
 2873 0762 81000000 		.4byte	0x81
 2874 0766 05       		.byte	0x5
 2875 0767 14       		.uleb128 0x14
 2876 0768 3D090000 		.4byte	.LASF72
 2877 076c 01       		.byte	0x1
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 103


 2878 076d AB04     		.2byte	0x4ab
 2879 076f 81000000 		.4byte	0x81
 2880 0773 2B030000 		.4byte	.LLST21
 2881 0777 11       		.uleb128 0x11
 2882 0778 0E000000 		.4byte	.LVL65
 2883 077c 0F060000 		.4byte	0x60f
 2884 0780 0F       		.uleb128 0xf
 2885 0781 01       		.uleb128 0x1
 2886 0782 50       		.byte	0x50
 2887 0783 02       		.uleb128 0x2
 2888 0784 74       		.byte	0x74
 2889 0785 00       		.sleb128 0
 2890 0786 00       		.byte	0
 2891 0787 00       		.byte	0
 2892 0788 15       		.uleb128 0x15
 2893 0789 31000000 		.4byte	.LASF73
 2894 078d 01       		.byte	0x1
 2895 078e D504     		.2byte	0x4d5
 2896 0790 81000000 		.4byte	0x81
 2897 0794 00000000 		.4byte	.LFB59
 2898 0798 20000000 		.4byte	.LFE59-.LFB59
 2899 079c 01       		.uleb128 0x1
 2900 079d 9C       		.byte	0x9c
 2901 079e D1070000 		.4byte	0x7d1
 2902 07a2 12       		.uleb128 0x12
 2903 07a3 6900     		.ascii	"i\000"
 2904 07a5 01       		.byte	0x1
 2905 07a6 D804     		.2byte	0x4d8
 2906 07a8 81000000 		.4byte	0x81
 2907 07ac 55030000 		.4byte	.LLST22
 2908 07b0 14       		.uleb128 0x14
 2909 07b1 3D090000 		.4byte	.LASF72
 2910 07b5 01       		.byte	0x1
 2911 07b6 D904     		.2byte	0x4d9
 2912 07b8 81000000 		.4byte	0x81
 2913 07bc 74030000 		.4byte	.LLST23
 2914 07c0 11       		.uleb128 0x11
 2915 07c1 10000000 		.4byte	.LVL72
 2916 07c5 20070000 		.4byte	0x720
 2917 07c9 0F       		.uleb128 0xf
 2918 07ca 01       		.uleb128 0x1
 2919 07cb 50       		.byte	0x50
 2920 07cc 02       		.uleb128 0x2
 2921 07cd 74       		.byte	0x74
 2922 07ce 00       		.sleb128 0
 2923 07cf 00       		.byte	0
 2924 07d0 00       		.byte	0
 2925 07d1 13       		.uleb128 0x13
 2926 07d2 95020000 		.4byte	.LASF74
 2927 07d6 01       		.byte	0x1
 2928 07d7 0405     		.2byte	0x504
 2929 07d9 00000000 		.4byte	.LFB60
 2930 07dd 20000000 		.4byte	.LFE60-.LFB60
 2931 07e1 01       		.uleb128 0x1
 2932 07e2 9C       		.byte	0x9c
 2933 07e3 30080000 		.4byte	0x830
 2934 07e7 16       		.uleb128 0x16
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 104


 2935 07e8 BB020000 		.4byte	.LASF53
 2936 07ec 01       		.byte	0x1
 2937 07ed 0405     		.2byte	0x504
 2938 07ef 81000000 		.4byte	0x81
 2939 07f3 9E030000 		.4byte	.LLST24
 2940 07f7 14       		.uleb128 0x14
 2941 07f8 3E050000 		.4byte	.LASF70
 2942 07fc 01       		.byte	0x1
 2943 07fd 0705     		.2byte	0x507
 2944 07ff 6B000000 		.4byte	0x6b
 2945 0803 BF030000 		.4byte	.LLST25
 2946 0807 18       		.uleb128 0x18
 2947 0808 C5000000 		.4byte	.LASF71
 2948 080c 01       		.byte	0x1
 2949 080d 0805     		.2byte	0x508
 2950 080f 6B000000 		.4byte	0x6b
 2951 0813 05       		.byte	0x5
 2952 0814 11       		.uleb128 0x11
 2953 0815 10000000 		.4byte	.LVL80
 2954 0819 7C100000 		.4byte	0x107c
 2955 081d 0F       		.uleb128 0xf
 2956 081e 01       		.uleb128 0x1
 2957 081f 52       		.byte	0x52
 2958 0820 01       		.uleb128 0x1
 2959 0821 31       		.byte	0x31
 2960 0822 0F       		.uleb128 0xf
 2961 0823 01       		.uleb128 0x1
 2962 0824 51       		.byte	0x51
 2963 0825 02       		.uleb128 0x2
 2964 0826 74       		.byte	0x74
 2965 0827 00       		.sleb128 0
 2966 0828 0F       		.uleb128 0xf
 2967 0829 01       		.uleb128 0x1
 2968 082a 50       		.byte	0x50
 2969 082b 02       		.uleb128 0x2
 2970 082c 75       		.byte	0x75
 2971 082d 00       		.sleb128 0
 2972 082e 00       		.byte	0
 2973 082f 00       		.byte	0
 2974 0830 13       		.uleb128 0x13
 2975 0831 A7070000 		.4byte	.LASF75
 2976 0835 01       		.byte	0x1
 2977 0836 2F05     		.2byte	0x52f
 2978 0838 00000000 		.4byte	.LFB61
 2979 083c 20000000 		.4byte	.LFE61-.LFB61
 2980 0840 01       		.uleb128 0x1
 2981 0841 9C       		.byte	0x9c
 2982 0842 8F080000 		.4byte	0x88f
 2983 0846 16       		.uleb128 0x16
 2984 0847 BB020000 		.4byte	.LASF53
 2985 084b 01       		.byte	0x1
 2986 084c 2F05     		.2byte	0x52f
 2987 084e 81000000 		.4byte	0x81
 2988 0852 F6030000 		.4byte	.LLST26
 2989 0856 14       		.uleb128 0x14
 2990 0857 3E050000 		.4byte	.LASF70
 2991 085b 01       		.byte	0x1
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 105


 2992 085c 3105     		.2byte	0x531
 2993 085e 6B000000 		.4byte	0x6b
 2994 0862 17040000 		.4byte	.LLST27
 2995 0866 18       		.uleb128 0x18
 2996 0867 C5000000 		.4byte	.LASF71
 2997 086b 01       		.byte	0x1
 2998 086c 3205     		.2byte	0x532
 2999 086e 6B000000 		.4byte	0x6b
 3000 0872 05       		.byte	0x5
 3001 0873 11       		.uleb128 0x11
 3002 0874 10000000 		.4byte	.LVL87
 3003 0878 7C100000 		.4byte	0x107c
 3004 087c 0F       		.uleb128 0xf
 3005 087d 01       		.uleb128 0x1
 3006 087e 52       		.byte	0x52
 3007 087f 01       		.uleb128 0x1
 3008 0880 30       		.byte	0x30
 3009 0881 0F       		.uleb128 0xf
 3010 0882 01       		.uleb128 0x1
 3011 0883 51       		.byte	0x51
 3012 0884 02       		.uleb128 0x2
 3013 0885 74       		.byte	0x74
 3014 0886 00       		.sleb128 0
 3015 0887 0F       		.uleb128 0xf
 3016 0888 01       		.uleb128 0x1
 3017 0889 50       		.byte	0x50
 3018 088a 02       		.uleb128 0x2
 3019 088b 75       		.byte	0x75
 3020 088c 00       		.sleb128 0
 3021 088d 00       		.byte	0
 3022 088e 00       		.byte	0
 3023 088f 15       		.uleb128 0x15
 3024 0890 EB060000 		.4byte	.LASF76
 3025 0894 01       		.byte	0x1
 3026 0895 6105     		.2byte	0x561
 3027 0897 6B000000 		.4byte	0x6b
 3028 089b 00000000 		.4byte	.LFB62
 3029 089f 2C000000 		.4byte	.LFE62-.LFB62
 3030 08a3 01       		.uleb128 0x1
 3031 08a4 9C       		.byte	0x9c
 3032 08a5 14090000 		.4byte	0x914
 3033 08a9 16       		.uleb128 0x16
 3034 08aa E5020000 		.4byte	.LASF77
 3035 08ae 01       		.byte	0x1
 3036 08af 6105     		.2byte	0x561
 3037 08b1 6B000000 		.4byte	0x6b
 3038 08b5 4E040000 		.4byte	.LLST28
 3039 08b9 17       		.uleb128 0x17
 3040 08ba 5A020000 		.4byte	.LASF78
 3041 08be 01       		.byte	0x1
 3042 08bf 6105     		.2byte	0x561
 3043 08c1 6B000000 		.4byte	0x6b
 3044 08c5 01       		.uleb128 0x1
 3045 08c6 51       		.byte	0x51
 3046 08c7 17       		.uleb128 0x17
 3047 08c8 8C080000 		.4byte	.LASF66
 3048 08cc 01       		.byte	0x1
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 106


 3049 08cd 6105     		.2byte	0x561
 3050 08cf 6B000000 		.4byte	0x6b
 3051 08d3 01       		.uleb128 0x1
 3052 08d4 52       		.byte	0x52
 3053 08d5 12       		.uleb128 0x12
 3054 08d6 6900     		.ascii	"i\000"
 3055 08d8 01       		.byte	0x1
 3056 08d9 6405     		.2byte	0x564
 3057 08db 6B000000 		.4byte	0x6b
 3058 08df 6F040000 		.4byte	.LLST29
 3059 08e3 14       		.uleb128 0x14
 3060 08e4 BC070000 		.4byte	.LASF79
 3061 08e8 01       		.byte	0x1
 3062 08e9 6E05     		.2byte	0x56e
 3063 08eb 6B000000 		.4byte	0x6b
 3064 08ef A6040000 		.4byte	.LLST30
 3065 08f3 14       		.uleb128 0x14
 3066 08f4 39070000 		.4byte	.LASF80
 3067 08f8 01       		.byte	0x1
 3068 08f9 7005     		.2byte	0x570
 3069 08fb 6B000000 		.4byte	0x6b
 3070 08ff C6040000 		.4byte	.LLST31
 3071 0903 14       		.uleb128 0x14
 3072 0904 19060000 		.4byte	.LASF81
 3073 0908 01       		.byte	0x1
 3074 0909 7105     		.2byte	0x571
 3075 090b 6F010000 		.4byte	0x16f
 3076 090f F0040000 		.4byte	.LLST32
 3077 0913 00       		.byte	0
 3078 0914 1C       		.uleb128 0x1c
 3079 0915 6C050000 		.4byte	.LASF82
 3080 0919 01       		.byte	0x1
 3081 091a 0006     		.2byte	0x600
 3082 091c 6B000000 		.4byte	0x6b
 3083 0920 00000000 		.4byte	.LFB63
 3084 0924 E8000000 		.4byte	.LFE63-.LFB63
 3085 0928 01       		.uleb128 0x1
 3086 0929 9C       		.byte	0x9c
 3087 092a EF090000 		.4byte	0x9ef
 3088 092e 16       		.uleb128 0x16
 3089 092f BC070000 		.4byte	.LASF79
 3090 0933 01       		.byte	0x1
 3091 0934 0006     		.2byte	0x600
 3092 0936 6B000000 		.4byte	0x6b
 3093 093a 03050000 		.4byte	.LLST33
 3094 093e 16       		.uleb128 0x16
 3095 093f E5020000 		.4byte	.LASF77
 3096 0943 01       		.byte	0x1
 3097 0944 0006     		.2byte	0x600
 3098 0946 6B000000 		.4byte	0x6b
 3099 094a 24050000 		.4byte	.LLST34
 3100 094e 16       		.uleb128 0x16
 3101 094f 5A020000 		.4byte	.LASF78
 3102 0953 01       		.byte	0x1
 3103 0954 0106     		.2byte	0x601
 3104 0956 6B000000 		.4byte	0x6b
 3105 095a 45050000 		.4byte	.LLST35
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 107


 3106 095e 16       		.uleb128 0x16
 3107 095f 1A050000 		.4byte	.LASF83
 3108 0963 01       		.byte	0x1
 3109 0964 0106     		.2byte	0x601
 3110 0966 76000000 		.4byte	0x76
 3111 096a 7F050000 		.4byte	.LLST36
 3112 096e 16       		.uleb128 0x16
 3113 096f 69080000 		.4byte	.LASF84
 3114 0973 01       		.byte	0x1
 3115 0974 0106     		.2byte	0x601
 3116 0976 6B000000 		.4byte	0x6b
 3117 097a A0050000 		.4byte	.LLST37
 3118 097e 14       		.uleb128 0x14
 3119 097f A1010000 		.4byte	.LASF85
 3120 0983 01       		.byte	0x1
 3121 0984 0506     		.2byte	0x605
 3122 0986 6B000000 		.4byte	0x6b
 3123 098a CC050000 		.4byte	.LLST38
 3124 098e 14       		.uleb128 0x14
 3125 098f FF000000 		.4byte	.LASF86
 3126 0993 01       		.byte	0x1
 3127 0994 0606     		.2byte	0x606
 3128 0996 6B000000 		.4byte	0x6b
 3129 099a 02060000 		.4byte	.LLST39
 3130 099e 19       		.uleb128 0x19
 3131 099f EF000000 		.4byte	.LASF87
 3132 09a3 01       		.byte	0x1
 3133 09a4 0B06     		.2byte	0x60b
 3134 09a6 EF090000 		.4byte	0x9ef
 3135 09aa 05       		.uleb128 0x5
 3136 09ab 03       		.byte	0x3
 3137 09ac 24000000 		.4byte	Slider_centroid.5430
 3138 09b0 19       		.uleb128 0x19
 3139 09b1 E30A0000 		.4byte	.LASF88
 3140 09b5 01       		.byte	0x1
 3141 09b6 1206     		.2byte	0x612
 3142 09b8 6B000000 		.4byte	0x6b
 3143 09bc 01       		.uleb128 0x1
 3144 09bd 50       		.byte	0x50
 3145 09be 14       		.uleb128 0x14
 3146 09bf 27060000 		.4byte	.LASF89
 3147 09c3 01       		.byte	0x1
 3148 09c4 1306     		.2byte	0x613
 3149 09c6 81000000 		.4byte	0x81
 3150 09ca 59060000 		.4byte	.LLST40
 3151 09ce 14       		.uleb128 0x14
 3152 09cf D6010000 		.4byte	.LASF90
 3153 09d3 01       		.byte	0x1
 3154 09d4 1406     		.2byte	0x614
 3155 09d6 97000000 		.4byte	0x97
 3156 09da 7C060000 		.4byte	.LLST41
 3157 09de 14       		.uleb128 0x14
 3158 09df 19060000 		.4byte	.LASF81
 3159 09e3 01       		.byte	0x1
 3160 09e4 1606     		.2byte	0x616
 3161 09e6 6F010000 		.4byte	0x16f
 3162 09ea A9060000 		.4byte	.LLST42
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 108


 3163 09ee 00       		.byte	0
 3164 09ef 1A       		.uleb128 0x1a
 3165 09f0 6B000000 		.4byte	0x6b
 3166 09f4 FF090000 		.4byte	0x9ff
 3167 09f8 1B       		.uleb128 0x1b
 3168 09f9 B7000000 		.4byte	0xb7
 3169 09fd 02       		.byte	0x2
 3170 09fe 00       		.byte	0
 3171 09ff 15       		.uleb128 0x15
 3172 0a00 C7050000 		.4byte	.LASF91
 3173 0a04 01       		.byte	0x1
 3174 0a05 9E07     		.2byte	0x79e
 3175 0a07 76000000 		.4byte	0x76
 3176 0a0b 00000000 		.4byte	.LFB65
 3177 0a0f 3C000000 		.4byte	.LFE65-.LFB65
 3178 0a13 01       		.uleb128 0x1
 3179 0a14 9C       		.byte	0x9c
 3180 0a15 970A0000 		.4byte	0xa97
 3181 0a19 16       		.uleb128 0x16
 3182 0a1a BB020000 		.4byte	.LASF53
 3183 0a1e 01       		.byte	0x1
 3184 0a1f 9E07     		.2byte	0x79e
 3185 0a21 81000000 		.4byte	0x81
 3186 0a25 C7060000 		.4byte	.LLST43
 3187 0a29 14       		.uleb128 0x14
 3188 0a2a BC070000 		.4byte	.LASF79
 3189 0a2e 01       		.byte	0x1
 3190 0a2f AD07     		.2byte	0x7ad
 3191 0a31 6B000000 		.4byte	0x6b
 3192 0a35 F3060000 		.4byte	.LLST44
 3193 0a39 14       		.uleb128 0x14
 3194 0a3a E30A0000 		.4byte	.LASF88
 3195 0a3e 01       		.byte	0x1
 3196 0a3f AE07     		.2byte	0x7ae
 3197 0a41 76000000 		.4byte	0x76
 3198 0a45 11070000 		.4byte	.LLST45
 3199 0a49 18       		.uleb128 0x18
 3200 0a4a E5020000 		.4byte	.LASF77
 3201 0a4e 01       		.byte	0x1
 3202 0a4f AF07     		.2byte	0x7af
 3203 0a51 6B000000 		.4byte	0x6b
 3204 0a55 00       		.byte	0
 3205 0a56 18       		.uleb128 0x18
 3206 0a57 5A020000 		.4byte	.LASF78
 3207 0a5b 01       		.byte	0x1
 3208 0a5c B007     		.2byte	0x7b0
 3209 0a5e 6B000000 		.4byte	0x6b
 3210 0a62 05       		.byte	0x5
 3211 0a63 0E       		.uleb128 0xe
 3212 0a64 12000000 		.4byte	.LVL134
 3213 0a68 8F080000 		.4byte	0x88f
 3214 0a6c 7B0A0000 		.4byte	0xa7b
 3215 0a70 0F       		.uleb128 0xf
 3216 0a71 01       		.uleb128 0x1
 3217 0a72 51       		.byte	0x51
 3218 0a73 01       		.uleb128 0x1
 3219 0a74 35       		.byte	0x35
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 109


 3220 0a75 0F       		.uleb128 0xf
 3221 0a76 01       		.uleb128 0x1
 3222 0a77 50       		.byte	0x50
 3223 0a78 01       		.uleb128 0x1
 3224 0a79 30       		.byte	0x30
 3225 0a7a 00       		.byte	0
 3226 0a7b 11       		.uleb128 0x11
 3227 0a7c 28000000 		.4byte	.LVL135
 3228 0a80 14090000 		.4byte	0x914
 3229 0a84 0F       		.uleb128 0xf
 3230 0a85 01       		.uleb128 0x1
 3231 0a86 53       		.byte	0x53
 3232 0a87 03       		.uleb128 0x3
 3233 0a88 0A       		.byte	0xa
 3234 0a89 0019     		.2byte	0x1900
 3235 0a8b 0F       		.uleb128 0xf
 3236 0a8c 01       		.uleb128 0x1
 3237 0a8d 52       		.byte	0x52
 3238 0a8e 01       		.uleb128 0x1
 3239 0a8f 35       		.byte	0x35
 3240 0a90 0F       		.uleb128 0xf
 3241 0a91 01       		.uleb128 0x1
 3242 0a92 51       		.byte	0x51
 3243 0a93 01       		.uleb128 0x1
 3244 0a94 30       		.byte	0x30
 3245 0a95 00       		.byte	0
 3246 0a96 00       		.byte	0
 3247 0a97 15       		.uleb128 0x15
 3248 0a98 830A0000 		.4byte	.LASF92
 3249 0a9c 01       		.byte	0x1
 3250 0a9d 4B09     		.2byte	0x94b
 3251 0a9f 76000000 		.4byte	0x76
 3252 0aa3 00000000 		.4byte	.LFB66
 3253 0aa7 1C000000 		.4byte	.LFE66-.LFB66
 3254 0aab 01       		.uleb128 0x1
 3255 0aac 9C       		.byte	0x9c
 3256 0aad E90A0000 		.4byte	0xae9
 3257 0ab1 1D       		.uleb128 0x1d
 3258 0ab2 783100   		.ascii	"x1\000"
 3259 0ab5 01       		.byte	0x1
 3260 0ab6 4B09     		.2byte	0x94b
 3261 0ab8 76000000 		.4byte	0x76
 3262 0abc 2F070000 		.4byte	.LLST46
 3263 0ac0 1D       		.uleb128 0x1d
 3264 0ac1 783200   		.ascii	"x2\000"
 3265 0ac4 01       		.byte	0x1
 3266 0ac5 4B09     		.2byte	0x94b
 3267 0ac7 76000000 		.4byte	0x76
 3268 0acb 5B070000 		.4byte	.LLST47
 3269 0acf 1E       		.uleb128 0x1e
 3270 0ad0 783300   		.ascii	"x3\000"
 3271 0ad3 01       		.byte	0x1
 3272 0ad4 4B09     		.2byte	0x94b
 3273 0ad6 76000000 		.4byte	0x76
 3274 0ada 01       		.uleb128 0x1
 3275 0adb 52       		.byte	0x52
 3276 0adc 1F       		.uleb128 0x1f
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 110


 3277 0add 746D7000 		.ascii	"tmp\000"
 3278 0ae1 01       		.byte	0x1
 3279 0ae2 4D09     		.2byte	0x94d
 3280 0ae4 76000000 		.4byte	0x76
 3281 0ae8 00       		.byte	0
 3282 0ae9 15       		.uleb128 0x15
 3283 0aea B6060000 		.4byte	.LASF93
 3284 0aee 01       		.byte	0x1
 3285 0aef C309     		.2byte	0x9c3
 3286 0af1 76000000 		.4byte	0x76
 3287 0af5 00000000 		.4byte	.LFB67
 3288 0af9 0A000000 		.4byte	.LFE67-.LFB67
 3289 0afd 01       		.uleb128 0x1
 3290 0afe 9C       		.byte	0x9c
 3291 0aff 320B0000 		.4byte	0xb32
 3292 0b03 1D       		.uleb128 0x1d
 3293 0b04 783100   		.ascii	"x1\000"
 3294 0b07 01       		.byte	0x1
 3295 0b08 C309     		.2byte	0x9c3
 3296 0b0a 76000000 		.4byte	0x76
 3297 0b0e 79070000 		.4byte	.LLST48
 3298 0b12 1D       		.uleb128 0x1d
 3299 0b13 783200   		.ascii	"x2\000"
 3300 0b16 01       		.byte	0x1
 3301 0b17 C309     		.2byte	0x9c3
 3302 0b19 76000000 		.4byte	0x76
 3303 0b1d 9A070000 		.4byte	.LLST49
 3304 0b21 12       		.uleb128 0x12
 3305 0b22 746D7000 		.ascii	"tmp\000"
 3306 0b26 01       		.byte	0x1
 3307 0b27 C509     		.2byte	0x9c5
 3308 0b29 81000000 		.4byte	0x81
 3309 0b2d BB070000 		.4byte	.LLST50
 3310 0b31 00       		.byte	0
 3311 0b32 13       		.uleb128 0x13
 3312 0b33 32030000 		.4byte	.LASF94
 3313 0b37 01       		.byte	0x1
 3314 0b38 6201     		.2byte	0x162
 3315 0b3a 00000000 		.4byte	.LFB39
 3316 0b3e 14010000 		.4byte	.LFE39-.LFB39
 3317 0b42 01       		.uleb128 0x1
 3318 0b43 9C       		.byte	0x9c
 3319 0b44 ED0B0000 		.4byte	0xbed
 3320 0b48 16       		.uleb128 0x16
 3321 0b49 9A040000 		.4byte	.LASF42
 3322 0b4d 01       		.byte	0x1
 3323 0b4e 6201     		.2byte	0x162
 3324 0b50 81000000 		.4byte	0x81
 3325 0b54 E8070000 		.4byte	.LLST51
 3326 0b58 14       		.uleb128 0x14
 3327 0b59 2D030000 		.4byte	.LASF95
 3328 0b5d 01       		.byte	0x1
 3329 0b5e 6401     		.2byte	0x164
 3330 0b60 81000000 		.4byte	0x81
 3331 0b64 46080000 		.4byte	.LLST52
 3332 0b68 14       		.uleb128 0x14
 3333 0b69 E0020000 		.4byte	.LASF96
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 111


 3334 0b6d 01       		.byte	0x1
 3335 0b6e 6501     		.2byte	0x165
 3336 0b70 81000000 		.4byte	0x81
 3337 0b74 6F080000 		.4byte	.LLST53
 3338 0b78 14       		.uleb128 0x14
 3339 0b79 2C0A0000 		.4byte	.LASF97
 3340 0b7d 01       		.byte	0x1
 3341 0b7e 6601     		.2byte	0x166
 3342 0b80 76000000 		.4byte	0x76
 3343 0b84 C6080000 		.4byte	.LLST54
 3344 0b88 14       		.uleb128 0x14
 3345 0b89 89030000 		.4byte	.LASF98
 3346 0b8d 01       		.byte	0x1
 3347 0b8e 6701     		.2byte	0x167
 3348 0b90 76000000 		.4byte	0x76
 3349 0b94 E4080000 		.4byte	.LLST55
 3350 0b98 20       		.uleb128 0x20
 3351 0b99 BB020000 		.4byte	.LASF53
 3352 0b9d 01       		.byte	0x1
 3353 0b9e 6801     		.2byte	0x168
 3354 0ba0 6B000000 		.4byte	0x6b
 3355 0ba4 14       		.uleb128 0x14
 3356 0ba5 69080000 		.4byte	.LASF84
 3357 0ba9 01       		.byte	0x1
 3358 0baa 6901     		.2byte	0x169
 3359 0bac 6B000000 		.4byte	0x6b
 3360 0bb0 28090000 		.4byte	.LLST56
 3361 0bb4 0E       		.uleb128 0xe
 3362 0bb5 2E000000 		.4byte	.LVL154
 3363 0bb9 E90A0000 		.4byte	0xae9
 3364 0bbd C80B0000 		.4byte	0xbc8
 3365 0bc1 0F       		.uleb128 0xf
 3366 0bc2 01       		.uleb128 0x1
 3367 0bc3 50       		.byte	0x50
 3368 0bc4 02       		.uleb128 0x2
 3369 0bc5 75       		.byte	0x75
 3370 0bc6 00       		.sleb128 0
 3371 0bc7 00       		.byte	0
 3372 0bc8 0E       		.uleb128 0xe
 3373 0bc9 3E000000 		.4byte	.LVL157
 3374 0bcd 97100000 		.4byte	0x1097
 3375 0bd1 DC0B0000 		.4byte	0xbdc
 3376 0bd5 0F       		.uleb128 0xf
 3377 0bd6 01       		.uleb128 0x1
 3378 0bd7 51       		.byte	0x51
 3379 0bd8 02       		.uleb128 0x2
 3380 0bd9 74       		.byte	0x74
 3381 0bda 00       		.sleb128 0
 3382 0bdb 00       		.byte	0
 3383 0bdc 11       		.uleb128 0x11
 3384 0bdd 82000000 		.4byte	.LVL162
 3385 0be1 53020000 		.4byte	0x253
 3386 0be5 0F       		.uleb128 0xf
 3387 0be6 01       		.uleb128 0x1
 3388 0be7 50       		.byte	0x50
 3389 0be8 02       		.uleb128 0x2
 3390 0be9 74       		.byte	0x74
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 112


 3391 0bea 00       		.sleb128 0
 3392 0beb 00       		.byte	0
 3393 0bec 00       		.byte	0
 3394 0bed 13       		.uleb128 0x13
 3395 0bee 85010000 		.4byte	.LASF99
 3396 0bf2 01       		.byte	0x1
 3397 0bf3 2102     		.2byte	0x221
 3398 0bf5 00000000 		.4byte	.LFB40
 3399 0bf9 10000000 		.4byte	.LFE40-.LFB40
 3400 0bfd 01       		.uleb128 0x1
 3401 0bfe 9C       		.byte	0x9c
 3402 0bff 380C0000 		.4byte	0xc38
 3403 0c03 16       		.uleb128 0x16
 3404 0c04 9A040000 		.4byte	.LASF42
 3405 0c08 01       		.byte	0x1
 3406 0c09 2102     		.2byte	0x221
 3407 0c0b 81000000 		.4byte	0x81
 3408 0c0f 4D090000 		.4byte	.LLST57
 3409 0c13 0E       		.uleb128 0xe
 3410 0c14 08000000 		.4byte	.LVL180
 3411 0c18 C3100000 		.4byte	0x10c3
 3412 0c1c 270C0000 		.4byte	0xc27
 3413 0c20 0F       		.uleb128 0xf
 3414 0c21 01       		.uleb128 0x1
 3415 0c22 50       		.byte	0x50
 3416 0c23 02       		.uleb128 0x2
 3417 0c24 74       		.byte	0x74
 3418 0c25 00       		.sleb128 0
 3419 0c26 00       		.byte	0
 3420 0c27 11       		.uleb128 0x11
 3421 0c28 0E000000 		.4byte	.LVL181
 3422 0c2c 320B0000 		.4byte	0xb32
 3423 0c30 0F       		.uleb128 0xf
 3424 0c31 01       		.uleb128 0x1
 3425 0c32 50       		.byte	0x50
 3426 0c33 02       		.uleb128 0x2
 3427 0c34 74       		.byte	0x74
 3428 0c35 00       		.sleb128 0
 3429 0c36 00       		.byte	0
 3430 0c37 00       		.byte	0
 3431 0c38 13       		.uleb128 0x13
 3432 0c39 00000000 		.4byte	.LASF100
 3433 0c3d 01       		.byte	0x1
 3434 0c3e 5702     		.2byte	0x257
 3435 0c40 00000000 		.4byte	.LFB41
 3436 0c44 28000000 		.4byte	.LFE41-.LFB41
 3437 0c48 01       		.uleb128 0x1
 3438 0c49 9C       		.byte	0x9c
 3439 0c4a 970C0000 		.4byte	0xc97
 3440 0c4e 12       		.uleb128 0x12
 3441 0c4f 6900     		.ascii	"i\000"
 3442 0c51 01       		.byte	0x1
 3443 0c52 5902     		.2byte	0x259
 3444 0c54 81000000 		.4byte	0x81
 3445 0c58 79090000 		.4byte	.LLST58
 3446 0c5c 14       		.uleb128 0x14
 3447 0c5d B5000000 		.4byte	.LASF45
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 113


 3448 0c61 01       		.byte	0x1
 3449 0c62 5A02     		.2byte	0x25a
 3450 0c64 81000000 		.4byte	0x81
 3451 0c68 98090000 		.4byte	.LLST59
 3452 0c6c 0E       		.uleb128 0xe
 3453 0c6d 10000000 		.4byte	.LVL185
 3454 0c71 62100000 		.4byte	0x1062
 3455 0c75 860C0000 		.4byte	0xc86
 3456 0c79 0F       		.uleb128 0xf
 3457 0c7a 01       		.uleb128 0x1
 3458 0c7b 51       		.byte	0x51
 3459 0c7c 02       		.uleb128 0x2
 3460 0c7d 74       		.byte	0x74
 3461 0c7e 00       		.sleb128 0
 3462 0c7f 0F       		.uleb128 0xf
 3463 0c80 01       		.uleb128 0x1
 3464 0c81 50       		.byte	0x50
 3465 0c82 02       		.uleb128 0x2
 3466 0c83 75       		.byte	0x75
 3467 0c84 00       		.sleb128 0
 3468 0c85 00       		.byte	0
 3469 0c86 11       		.uleb128 0x11
 3470 0c87 1A000000 		.4byte	.LVL187
 3471 0c8b ED0B0000 		.4byte	0xbed
 3472 0c8f 0F       		.uleb128 0xf
 3473 0c90 01       		.uleb128 0x1
 3474 0c91 50       		.byte	0x50
 3475 0c92 02       		.uleb128 0x2
 3476 0c93 74       		.byte	0x74
 3477 0c94 00       		.sleb128 0
 3478 0c95 00       		.byte	0
 3479 0c96 00       		.byte	0
 3480 0c97 13       		.uleb128 0x13
 3481 0c98 D4090000 		.4byte	.LASF101
 3482 0c9c 01       		.byte	0x1
 3483 0c9d 8402     		.2byte	0x284
 3484 0c9f 00000000 		.4byte	.LFB42
 3485 0ca3 28000000 		.4byte	.LFE42-.LFB42
 3486 0ca7 01       		.uleb128 0x1
 3487 0ca8 9C       		.byte	0x9c
 3488 0ca9 2D0D0000 		.4byte	0xd2d
 3489 0cad 16       		.uleb128 0x16
 3490 0cae BB020000 		.4byte	.LASF53
 3491 0cb2 01       		.byte	0x1
 3492 0cb3 8402     		.2byte	0x284
 3493 0cb5 81000000 		.4byte	0x81
 3494 0cb9 AB090000 		.4byte	.LLST60
 3495 0cbd 18       		.uleb128 0x18
 3496 0cbe 99030000 		.4byte	.LASF102
 3497 0cc2 01       		.byte	0x1
 3498 0cc3 8602     		.2byte	0x286
 3499 0cc5 81000000 		.4byte	0x81
 3500 0cc9 05       		.byte	0x5
 3501 0cca 18       		.uleb128 0x18
 3502 0ccb FE060000 		.4byte	.LASF103
 3503 0ccf 01       		.byte	0x1
 3504 0cd0 8702     		.2byte	0x287
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 114


 3505 0cd2 81000000 		.4byte	0x81
 3506 0cd6 00       		.byte	0
 3507 0cd7 18       		.uleb128 0x18
 3508 0cd8 31060000 		.4byte	.LASF104
 3509 0cdc 01       		.byte	0x1
 3510 0cdd 8802     		.2byte	0x288
 3511 0cdf 81000000 		.4byte	0x81
 3512 0ce3 05       		.byte	0x5
 3513 0ce4 12       		.uleb128 0x12
 3514 0ce5 6900     		.ascii	"i\000"
 3515 0ce7 01       		.byte	0x1
 3516 0ce8 8902     		.2byte	0x289
 3517 0cea 81000000 		.4byte	0x81
 3518 0cee CC090000 		.4byte	.LLST61
 3519 0cf2 14       		.uleb128 0x14
 3520 0cf3 B5000000 		.4byte	.LASF45
 3521 0cf7 01       		.byte	0x1
 3522 0cf8 8A02     		.2byte	0x28a
 3523 0cfa 81000000 		.4byte	0x81
 3524 0cfe EB090000 		.4byte	.LLST62
 3525 0d02 0E       		.uleb128 0xe
 3526 0d03 10000000 		.4byte	.LVL193
 3527 0d07 62100000 		.4byte	0x1062
 3528 0d0b 1C0D0000 		.4byte	0xd1c
 3529 0d0f 0F       		.uleb128 0xf
 3530 0d10 01       		.uleb128 0x1
 3531 0d11 51       		.byte	0x51
 3532 0d12 02       		.uleb128 0x2
 3533 0d13 74       		.byte	0x74
 3534 0d14 00       		.sleb128 0
 3535 0d15 0F       		.uleb128 0xf
 3536 0d16 01       		.uleb128 0x1
 3537 0d17 50       		.byte	0x50
 3538 0d18 02       		.uleb128 0x2
 3539 0d19 75       		.byte	0x75
 3540 0d1a 00       		.sleb128 0
 3541 0d1b 00       		.byte	0
 3542 0d1c 11       		.uleb128 0x11
 3543 0d1d 1A000000 		.4byte	.LVL195
 3544 0d21 ED0B0000 		.4byte	0xbed
 3545 0d25 0F       		.uleb128 0xf
 3546 0d26 01       		.uleb128 0x1
 3547 0d27 50       		.byte	0x50
 3548 0d28 02       		.uleb128 0x2
 3549 0d29 74       		.byte	0x74
 3550 0d2a 00       		.sleb128 0
 3551 0d2b 00       		.byte	0
 3552 0d2c 00       		.byte	0
 3553 0d2d 15       		.uleb128 0x15
 3554 0d2e 54040000 		.4byte	.LASF105
 3555 0d32 01       		.byte	0x1
 3556 0d33 D306     		.2byte	0x6d3
 3557 0d35 76000000 		.4byte	0x76
 3558 0d39 00000000 		.4byte	.LFB64
 3559 0d3d 7C000000 		.4byte	.LFE64-.LFB64
 3560 0d41 01       		.uleb128 0x1
 3561 0d42 9C       		.byte	0x9c
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 115


 3562 0d43 FF0D0000 		.4byte	0xdff
 3563 0d47 16       		.uleb128 0x16
 3564 0d48 BB020000 		.4byte	.LASF53
 3565 0d4c 01       		.byte	0x1
 3566 0d4d D306     		.2byte	0x6d3
 3567 0d4f 81000000 		.4byte	0x81
 3568 0d53 FE090000 		.4byte	.LLST63
 3569 0d57 14       		.uleb128 0x14
 3570 0d58 AC000000 		.4byte	.LASF106
 3571 0d5c 01       		.byte	0x1
 3572 0d5d DA06     		.2byte	0x6da
 3573 0d5f 6B000000 		.4byte	0x6b
 3574 0d63 5C0A0000 		.4byte	.LLST64
 3575 0d67 14       		.uleb128 0x14
 3576 0d68 0A060000 		.4byte	.LASF107
 3577 0d6c 01       		.byte	0x1
 3578 0d6d DB06     		.2byte	0x6db
 3579 0d6f 6B000000 		.4byte	0x6b
 3580 0d73 9F0A0000 		.4byte	.LLST65
 3581 0d77 18       		.uleb128 0x18
 3582 0d78 6F020000 		.4byte	.LASF108
 3583 0d7c 01       		.byte	0x1
 3584 0d7d DC06     		.2byte	0x6dc
 3585 0d7f 6B000000 		.4byte	0x6b
 3586 0d83 08       		.byte	0x8
 3587 0d84 14       		.uleb128 0x14
 3588 0d85 BC070000 		.4byte	.LASF79
 3589 0d89 01       		.byte	0x1
 3590 0d8a E606     		.2byte	0x6e6
 3591 0d8c 6B000000 		.4byte	0x6b
 3592 0d90 ED0A0000 		.4byte	.LLST66
 3593 0d94 14       		.uleb128 0x14
 3594 0d95 E30A0000 		.4byte	.LASF88
 3595 0d99 01       		.byte	0x1
 3596 0d9a E706     		.2byte	0x6e7
 3597 0d9c 76000000 		.4byte	0x76
 3598 0da0 0B0B0000 		.4byte	.LLST67
 3599 0da4 18       		.uleb128 0x18
 3600 0da5 E5020000 		.4byte	.LASF77
 3601 0da9 01       		.byte	0x1
 3602 0daa E806     		.2byte	0x6e8
 3603 0dac 6B000000 		.4byte	0x6b
 3604 0db0 00       		.byte	0
 3605 0db1 18       		.uleb128 0x18
 3606 0db2 5A020000 		.4byte	.LASF78
 3607 0db6 01       		.byte	0x1
 3608 0db7 E906     		.2byte	0x6e9
 3609 0db9 6B000000 		.4byte	0x6b
 3610 0dbd 05       		.byte	0x5
 3611 0dbe 0E       		.uleb128 0xe
 3612 0dbf 18000000 		.4byte	.LVL202
 3613 0dc3 8F080000 		.4byte	0x88f
 3614 0dc7 D60D0000 		.4byte	0xdd6
 3615 0dcb 0F       		.uleb128 0xf
 3616 0dcc 01       		.uleb128 0x1
 3617 0dcd 51       		.byte	0x51
 3618 0dce 01       		.uleb128 0x1
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 116


 3619 0dcf 35       		.byte	0x35
 3620 0dd0 0F       		.uleb128 0xf
 3621 0dd1 01       		.uleb128 0x1
 3622 0dd2 50       		.byte	0x50
 3623 0dd3 01       		.uleb128 0x1
 3624 0dd4 30       		.byte	0x30
 3625 0dd5 00       		.byte	0
 3626 0dd6 0E       		.uleb128 0xe
 3627 0dd7 2E000000 		.4byte	.LVL203
 3628 0ddb 14090000 		.4byte	0x914
 3629 0ddf F50D0000 		.4byte	0xdf5
 3630 0de3 0F       		.uleb128 0xf
 3631 0de4 01       		.uleb128 0x1
 3632 0de5 53       		.byte	0x53
 3633 0de6 03       		.uleb128 0x3
 3634 0de7 0A       		.byte	0xa
 3635 0de8 0019     		.2byte	0x1900
 3636 0dea 0F       		.uleb128 0xf
 3637 0deb 01       		.uleb128 0x1
 3638 0dec 52       		.byte	0x52
 3639 0ded 01       		.uleb128 0x1
 3640 0dee 35       		.byte	0x35
 3641 0def 0F       		.uleb128 0xf
 3642 0df0 01       		.uleb128 0x1
 3643 0df1 51       		.byte	0x51
 3644 0df2 01       		.uleb128 0x1
 3645 0df3 30       		.byte	0x30
 3646 0df4 00       		.byte	0
 3647 0df5 10       		.uleb128 0x10
 3648 0df6 58000000 		.4byte	.LVL214
 3649 0dfa E90A0000 		.4byte	0xae9
 3650 0dfe 00       		.byte	0
 3651 0dff 15       		.uleb128 0x15
 3652 0e00 47050000 		.4byte	.LASF109
 3653 0e04 01       		.byte	0x1
 3654 0e05 AC0A     		.2byte	0xaac
 3655 0e07 81000000 		.4byte	0x81
 3656 0e0b 00000000 		.4byte	.LFB68
 3657 0e0f 0C000000 		.4byte	.LFE68-.LFB68
 3658 0e13 01       		.uleb128 0x1
 3659 0e14 9C       		.byte	0x9c
 3660 0e15 2A0E0000 		.4byte	0xe2a
 3661 0e19 16       		.uleb128 0x16
 3662 0e1a 9A040000 		.4byte	.LASF42
 3663 0e1e 01       		.byte	0x1
 3664 0e1f AC0A     		.2byte	0xaac
 3665 0e21 81000000 		.4byte	0x81
 3666 0e25 4C0B0000 		.4byte	.LLST68
 3667 0e29 00       		.byte	0
 3668 0e2a 15       		.uleb128 0x15
 3669 0e2b 82060000 		.4byte	.LASF110
 3670 0e2f 01       		.byte	0x1
 3671 0e30 C60A     		.2byte	0xac6
 3672 0e32 6B000000 		.4byte	0x6b
 3673 0e36 00000000 		.4byte	.LFB69
 3674 0e3a 0C000000 		.4byte	.LFE69-.LFB69
 3675 0e3e 01       		.uleb128 0x1
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 117


 3676 0e3f 9C       		.byte	0x9c
 3677 0e40 550E0000 		.4byte	0xe55
 3678 0e44 16       		.uleb128 0x16
 3679 0e45 9A040000 		.4byte	.LASF42
 3680 0e49 01       		.byte	0x1
 3681 0e4a C60A     		.2byte	0xac6
 3682 0e4c 81000000 		.4byte	0x81
 3683 0e50 6D0B0000 		.4byte	.LLST69
 3684 0e54 00       		.byte	0
 3685 0e55 15       		.uleb128 0x15
 3686 0e56 1E000000 		.4byte	.LASF111
 3687 0e5a 01       		.byte	0x1
 3688 0e5b E00A     		.2byte	0xae0
 3689 0e5d 6B000000 		.4byte	0x6b
 3690 0e61 00000000 		.4byte	.LFB70
 3691 0e65 0C000000 		.4byte	.LFE70-.LFB70
 3692 0e69 01       		.uleb128 0x1
 3693 0e6a 9C       		.byte	0x9c
 3694 0e6b 800E0000 		.4byte	0xe80
 3695 0e6f 16       		.uleb128 0x16
 3696 0e70 BB020000 		.4byte	.LASF53
 3697 0e74 01       		.byte	0x1
 3698 0e75 E00A     		.2byte	0xae0
 3699 0e77 81000000 		.4byte	0x81
 3700 0e7b 8E0B0000 		.4byte	.LLST70
 3701 0e7f 00       		.byte	0
 3702 0e80 21       		.uleb128 0x21
 3703 0e81 11030000 		.4byte	.LASF112
 3704 0e85 01       		.byte	0x1
 3705 0e86 FA0A     		.2byte	0xafa
 3706 0e88 00000000 		.4byte	.LFB71
 3707 0e8c 0C000000 		.4byte	.LFE71-.LFB71
 3708 0e90 01       		.uleb128 0x1
 3709 0e91 9C       		.byte	0x9c
 3710 0e92 21       		.uleb128 0x21
 3711 0e93 970A0000 		.4byte	.LASF113
 3712 0e97 01       		.byte	0x1
 3713 0e98 130B     		.2byte	0xb13
 3714 0e9a 00000000 		.4byte	.LFB72
 3715 0e9e 0C000000 		.4byte	.LFE72-.LFB72
 3716 0ea2 01       		.uleb128 0x1
 3717 0ea3 9C       		.byte	0x9c
 3718 0ea4 1A       		.uleb128 0x1a
 3719 0ea5 76000000 		.4byte	0x76
 3720 0ea9 B40E0000 		.4byte	0xeb4
 3721 0ead 1B       		.uleb128 0x1b
 3722 0eae B7000000 		.4byte	0xb7
 3723 0eb2 00       		.byte	0
 3724 0eb3 00       		.byte	0
 3725 0eb4 22       		.uleb128 0x22
 3726 0eb5 78080000 		.4byte	.LASF114
 3727 0eb9 01       		.byte	0x1
 3728 0eba 5D       		.byte	0x5d
 3729 0ebb BF0E0000 		.4byte	0xebf
 3730 0ebf 08       		.uleb128 0x8
 3731 0ec0 A40E0000 		.4byte	0xea4
 3732 0ec4 22       		.uleb128 0x22
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 118


 3733 0ec5 CD0A0000 		.4byte	.LASF115
 3734 0ec9 01       		.byte	0x1
 3735 0eca 61       		.byte	0x61
 3736 0ecb CF0E0000 		.4byte	0xecf
 3737 0ecf 08       		.uleb128 0x8
 3738 0ed0 10070000 		.4byte	0x710
 3739 0ed4 23       		.uleb128 0x23
 3740 0ed5 D8080000 		.4byte	.LASF116
 3741 0ed9 01       		.byte	0x1
 3742 0eda 65       		.byte	0x65
 3743 0edb EF090000 		.4byte	0x9ef
 3744 0edf 05       		.uleb128 0x5
 3745 0ee0 03       		.byte	0x3
 3746 0ee1 0C000000 		.4byte	Slider_posFiltersData
 3747 0ee5 1A       		.uleb128 0x1a
 3748 0ee6 76000000 		.4byte	0x76
 3749 0eea F50E0000 		.4byte	0xef5
 3750 0eee 1B       		.uleb128 0x1b
 3751 0eef B7000000 		.4byte	0xb7
 3752 0ef3 04       		.byte	0x4
 3753 0ef4 00       		.byte	0
 3754 0ef5 24       		.uleb128 0x24
 3755 0ef6 06090000 		.4byte	.LASF117
 3756 0efa 01       		.byte	0x1
 3757 0efb 2C       		.byte	0x2c
 3758 0efc E50E0000 		.4byte	0xee5
 3759 0f00 24       		.uleb128 0x24
 3760 0f01 C8020000 		.4byte	.LASF118
 3761 0f05 01       		.byte	0x1
 3762 0f06 2D       		.byte	0x2d
 3763 0f07 10070000 		.4byte	0x710
 3764 0f0b 1A       		.uleb128 0x1a
 3765 0f0c 6B000000 		.4byte	0x6b
 3766 0f10 1B0F0000 		.4byte	0xf1b
 3767 0f14 1B       		.uleb128 0x1b
 3768 0f15 B7000000 		.4byte	0xb7
 3769 0f19 04       		.byte	0x4
 3770 0f1a 00       		.byte	0
 3771 0f1b 24       		.uleb128 0x24
 3772 0f1c 46020000 		.4byte	.LASF119
 3773 0f20 01       		.byte	0x1
 3774 0f21 2E       		.byte	0x2e
 3775 0f22 260F0000 		.4byte	0xf26
 3776 0f26 08       		.uleb128 0x8
 3777 0f27 0B0F0000 		.4byte	0xf0b
 3778 0f2b 25       		.uleb128 0x25
 3779 0f2c AA030000 		.4byte	.LASF120
 3780 0f30 01       		.byte	0x1
 3781 0f31 34       		.byte	0x34
 3782 0f32 E50E0000 		.4byte	0xee5
 3783 0f36 05       		.uleb128 0x5
 3784 0f37 03       		.byte	0x3
 3785 0f38 00000000 		.4byte	Slider_sensorBaseline
 3786 0f3c 25       		.uleb128 0x25
 3787 0f3d 0F020000 		.4byte	.LASF121
 3788 0f41 01       		.byte	0x1
 3789 0f42 35       		.byte	0x35
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 119


 3790 0f43 0B0F0000 		.4byte	0xf0b
 3791 0f47 05       		.uleb128 0x5
 3792 0f48 03       		.byte	0x3
 3793 0f49 00000000 		.4byte	Slider_sensorBaselineLow
 3794 0f4d 25       		.uleb128 0x25
 3795 0f4e 0D010000 		.4byte	.LASF122
 3796 0f52 01       		.byte	0x1
 3797 0f53 36       		.byte	0x36
 3798 0f54 0B0F0000 		.4byte	0xf0b
 3799 0f58 05       		.uleb128 0x5
 3800 0f59 03       		.byte	0x3
 3801 0f5a 00000000 		.4byte	Slider_sensorSignal
 3802 0f5e 25       		.uleb128 0x25
 3803 0f5f 410A0000 		.4byte	.LASF123
 3804 0f63 01       		.byte	0x1
 3805 0f64 37       		.byte	0x37
 3806 0f65 10070000 		.4byte	0x710
 3807 0f69 05       		.uleb128 0x5
 3808 0f6a 03       		.byte	0x3
 3809 0f6b 00000000 		.4byte	Slider_sensorOnMask
 3810 0f6f 25       		.uleb128 0x25
 3811 0f70 B6040000 		.4byte	.LASF124
 3812 0f74 01       		.byte	0x1
 3813 0f75 39       		.byte	0x39
 3814 0f76 0B0F0000 		.4byte	0xf0b
 3815 0f7a 05       		.uleb128 0x5
 3816 0f7b 03       		.byte	0x3
 3817 0f7c 00000000 		.4byte	Slider_lowBaselineResetCnt
 3818 0f80 25       		.uleb128 0x25
 3819 0f81 0A070000 		.4byte	.LASF125
 3820 0f85 01       		.byte	0x1
 3821 0f86 3A       		.byte	0x3a
 3822 0f87 0B0F0000 		.4byte	0xf0b
 3823 0f8b 05       		.uleb128 0x5
 3824 0f8c 03       		.byte	0x3
 3825 0f8d 00000000 		.4byte	Slider_lowBaselineReset
 3826 0f91 25       		.uleb128 0x25
 3827 0f92 50010000 		.4byte	.LASF126
 3828 0f96 01       		.byte	0x1
 3829 0f97 49       		.byte	0x49
 3830 0f98 10070000 		.4byte	0x710
 3831 0f9c 05       		.uleb128 0x5
 3832 0f9d 03       		.byte	0x3
 3833 0f9e 00000000 		.4byte	Slider_fingerThreshold
 3834 0fa2 25       		.uleb128 0x25
 3835 0fa3 ED050000 		.4byte	.LASF127
 3836 0fa7 01       		.byte	0x1
 3837 0fa8 4B       		.byte	0x4b
 3838 0fa9 10070000 		.4byte	0x710
 3839 0fad 05       		.uleb128 0x5
 3840 0fae 03       		.byte	0x3
 3841 0faf 00000000 		.4byte	Slider_noiseThreshold
 3842 0fb3 25       		.uleb128 0x25
 3843 0fb4 7F000000 		.4byte	.LASF128
 3844 0fb8 01       		.byte	0x1
 3845 0fb9 4D       		.byte	0x4d
 3846 0fba 10070000 		.4byte	0x710
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 120


 3847 0fbe 05       		.uleb128 0x5
 3848 0fbf 03       		.byte	0x3
 3849 0fc0 00000000 		.4byte	Slider_negativeNoiseThreshold
 3850 0fc4 25       		.uleb128 0x25
 3851 0fc5 43090000 		.4byte	.LASF129
 3852 0fc9 01       		.byte	0x1
 3853 0fca 4F       		.byte	0x4f
 3854 0fcb 10070000 		.4byte	0x710
 3855 0fcf 05       		.uleb128 0x5
 3856 0fd0 03       		.byte	0x3
 3857 0fd1 00000000 		.4byte	Slider_hysteresis
 3858 0fd5 25       		.uleb128 0x25
 3859 0fd6 9B090000 		.4byte	.LASF130
 3860 0fda 01       		.byte	0x1
 3861 0fdb 51       		.byte	0x51
 3862 0fdc 10070000 		.4byte	0x710
 3863 0fe0 05       		.uleb128 0x5
 3864 0fe1 03       		.byte	0x3
 3865 0fe2 00000000 		.4byte	Slider_debounce
 3866 0fe6 25       		.uleb128 0x25
 3867 0fe7 21010000 		.4byte	.LASF131
 3868 0feb 01       		.byte	0x1
 3869 0fec 55       		.byte	0x55
 3870 0fed F70F0000 		.4byte	0xff7
 3871 0ff1 05       		.uleb128 0x5
 3872 0ff2 03       		.byte	0x3
 3873 0ff3 00000000 		.4byte	Slider_rawDataIndex
 3874 0ff7 08       		.uleb128 0x8
 3875 0ff8 10070000 		.4byte	0x710
 3876 0ffc 25       		.uleb128 0x25
 3877 0ffd EC020000 		.4byte	.LASF132
 3878 1001 01       		.byte	0x1
 3879 1002 59       		.byte	0x59
 3880 1003 0D100000 		.4byte	0x100d
 3881 1007 05       		.uleb128 0x5
 3882 1008 03       		.byte	0x3
 3883 1009 00000000 		.4byte	Slider_numberOfSensors
 3884 100d 08       		.uleb128 0x8
 3885 100e 10070000 		.4byte	0x710
 3886 1012 25       		.uleb128 0x25
 3887 1013 6C060000 		.4byte	.LASF133
 3888 1017 01       		.byte	0x1
 3889 1018 27       		.byte	0x27
 3890 1019 E50E0000 		.4byte	0xee5
 3891 101d 05       		.uleb128 0x5
 3892 101e 03       		.byte	0x3
 3893 101f 00000000 		.4byte	Slider_rawFilterData1
 3894 1023 24       		.uleb128 0x24
 3895 1024 03030000 		.4byte	.LASF134
 3896 1028 01       		.byte	0x1
 3897 1029 41       		.byte	0x41
 3898 102a 48020000 		.4byte	0x248
 3899 102e 25       		.uleb128 0x25
 3900 102f EE080000 		.4byte	.LASF135
 3901 1033 01       		.byte	0x1
 3902 1034 45       		.byte	0x45
 3903 1035 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 121


 3904 1039 05       		.uleb128 0x5
 3905 103a 03       		.byte	0x3
 3906 103b 00000000 		.4byte	Slider_enableRawFilters
 3907 103f 26       		.uleb128 0x26
 3908 1040 A9020000 		.4byte	.LASF136
 3909 1044 04       		.byte	0x4
 3910 1045 A0       		.byte	0xa0
 3911 1046 50100000 		.4byte	0x1050
 3912 104a 0A       		.uleb128 0xa
 3913 104b 81000000 		.4byte	0x81
 3914 104f 00       		.byte	0
 3915 1050 27       		.uleb128 0x27
 3916 1051 D1040000 		.4byte	.LASF142
 3917 1055 04       		.byte	0x4
 3918 1056 9F       		.byte	0x9f
 3919 1057 81000000 		.4byte	0x81
 3920 105b 28       		.uleb128 0x28
 3921 105c 120A0000 		.4byte	.LASF143
 3922 1060 04       		.byte	0x4
 3923 1061 A2       		.byte	0xa2
 3924 1062 29       		.uleb128 0x29
 3925 1063 550A0000 		.4byte	.LASF144
 3926 1067 03       		.byte	0x3
 3927 1068 61       		.byte	0x61
 3928 1069 81000000 		.4byte	0x81
 3929 106d 7C100000 		.4byte	0x107c
 3930 1071 0A       		.uleb128 0xa
 3931 1072 75010000 		.4byte	0x175
 3932 1076 0A       		.uleb128 0xa
 3933 1077 81000000 		.4byte	0x81
 3934 107b 00       		.byte	0
 3935 107c 26       		.uleb128 0x26
 3936 107d B7080000 		.4byte	.LASF137
 3937 1081 03       		.byte	0x3
 3938 1082 62       		.byte	0x62
 3939 1083 97100000 		.4byte	0x1097
 3940 1087 0A       		.uleb128 0xa
 3941 1088 6F010000 		.4byte	0x16f
 3942 108c 0A       		.uleb128 0xa
 3943 108d 81000000 		.4byte	0x81
 3944 1091 0A       		.uleb128 0xa
 3945 1092 81000000 		.4byte	0x81
 3946 1096 00       		.byte	0
 3947 1097 26       		.uleb128 0x26
 3948 1098 67010000 		.4byte	.LASF138
 3949 109c 03       		.byte	0x3
 3950 109d 78       		.byte	0x78
 3951 109e B2100000 		.4byte	0x10b2
 3952 10a2 0A       		.uleb128 0xa
 3953 10a3 B2100000 		.4byte	0x10b2
 3954 10a7 0A       		.uleb128 0xa
 3955 10a8 7B010000 		.4byte	0x17b
 3956 10ac 0A       		.uleb128 0xa
 3957 10ad B8100000 		.4byte	0x10b8
 3958 10b1 00       		.byte	0
 3959 10b2 07       		.uleb128 0x7
 3960 10b3 04       		.byte	0x4
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 122


 3961 10b4 48020000 		.4byte	0x248
 3962 10b8 07       		.uleb128 0x7
 3963 10b9 04       		.byte	0x4
 3964 10ba BE100000 		.4byte	0x10be
 3965 10be 08       		.uleb128 0x8
 3966 10bf 76000000 		.4byte	0x76
 3967 10c3 2A       		.uleb128 0x2a
 3968 10c4 AF050000 		.4byte	.LASF145
 3969 10c8 01       		.byte	0x1
 3970 10c9 17       		.byte	0x17
 3971 10ca 0A       		.uleb128 0xa
 3972 10cb 81000000 		.4byte	0x81
 3973 10cf 00       		.byte	0
 3974 10d0 00       		.byte	0
 3975              		.section	.debug_abbrev,"",%progbits
 3976              	.Ldebug_abbrev0:
 3977 0000 01       		.uleb128 0x1
 3978 0001 11       		.uleb128 0x11
 3979 0002 01       		.byte	0x1
 3980 0003 25       		.uleb128 0x25
 3981 0004 0E       		.uleb128 0xe
 3982 0005 13       		.uleb128 0x13
 3983 0006 0B       		.uleb128 0xb
 3984 0007 03       		.uleb128 0x3
 3985 0008 0E       		.uleb128 0xe
 3986 0009 1B       		.uleb128 0x1b
 3987 000a 0E       		.uleb128 0xe
 3988 000b 55       		.uleb128 0x55
 3989 000c 17       		.uleb128 0x17
 3990 000d 11       		.uleb128 0x11
 3991 000e 01       		.uleb128 0x1
 3992 000f 10       		.uleb128 0x10
 3993 0010 17       		.uleb128 0x17
 3994 0011 00       		.byte	0
 3995 0012 00       		.byte	0
 3996 0013 02       		.uleb128 0x2
 3997 0014 24       		.uleb128 0x24
 3998 0015 00       		.byte	0
 3999 0016 0B       		.uleb128 0xb
 4000 0017 0B       		.uleb128 0xb
 4001 0018 3E       		.uleb128 0x3e
 4002 0019 0B       		.uleb128 0xb
 4003 001a 03       		.uleb128 0x3
 4004 001b 0E       		.uleb128 0xe
 4005 001c 00       		.byte	0
 4006 001d 00       		.byte	0
 4007 001e 03       		.uleb128 0x3
 4008 001f 24       		.uleb128 0x24
 4009 0020 00       		.byte	0
 4010 0021 0B       		.uleb128 0xb
 4011 0022 0B       		.uleb128 0xb
 4012 0023 3E       		.uleb128 0x3e
 4013 0024 0B       		.uleb128 0xb
 4014 0025 03       		.uleb128 0x3
 4015 0026 08       		.uleb128 0x8
 4016 0027 00       		.byte	0
 4017 0028 00       		.byte	0
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 123


 4018 0029 04       		.uleb128 0x4
 4019 002a 16       		.uleb128 0x16
 4020 002b 00       		.byte	0
 4021 002c 03       		.uleb128 0x3
 4022 002d 0E       		.uleb128 0xe
 4023 002e 3A       		.uleb128 0x3a
 4024 002f 0B       		.uleb128 0xb
 4025 0030 3B       		.uleb128 0x3b
 4026 0031 0B       		.uleb128 0xb
 4027 0032 49       		.uleb128 0x49
 4028 0033 13       		.uleb128 0x13
 4029 0034 00       		.byte	0
 4030 0035 00       		.byte	0
 4031 0036 05       		.uleb128 0x5
 4032 0037 13       		.uleb128 0x13
 4033 0038 01       		.byte	0x1
 4034 0039 0B       		.uleb128 0xb
 4035 003a 0B       		.uleb128 0xb
 4036 003b 3A       		.uleb128 0x3a
 4037 003c 0B       		.uleb128 0xb
 4038 003d 3B       		.uleb128 0x3b
 4039 003e 0B       		.uleb128 0xb
 4040 003f 01       		.uleb128 0x1
 4041 0040 13       		.uleb128 0x13
 4042 0041 00       		.byte	0
 4043 0042 00       		.byte	0
 4044 0043 06       		.uleb128 0x6
 4045 0044 0D       		.uleb128 0xd
 4046 0045 00       		.byte	0
 4047 0046 03       		.uleb128 0x3
 4048 0047 0E       		.uleb128 0xe
 4049 0048 3A       		.uleb128 0x3a
 4050 0049 0B       		.uleb128 0xb
 4051 004a 3B       		.uleb128 0x3b
 4052 004b 0B       		.uleb128 0xb
 4053 004c 49       		.uleb128 0x49
 4054 004d 13       		.uleb128 0x13
 4055 004e 38       		.uleb128 0x38
 4056 004f 0B       		.uleb128 0xb
 4057 0050 00       		.byte	0
 4058 0051 00       		.byte	0
 4059 0052 07       		.uleb128 0x7
 4060 0053 0F       		.uleb128 0xf
 4061 0054 00       		.byte	0
 4062 0055 0B       		.uleb128 0xb
 4063 0056 0B       		.uleb128 0xb
 4064 0057 49       		.uleb128 0x49
 4065 0058 13       		.uleb128 0x13
 4066 0059 00       		.byte	0
 4067 005a 00       		.byte	0
 4068 005b 08       		.uleb128 0x8
 4069 005c 26       		.uleb128 0x26
 4070 005d 00       		.byte	0
 4071 005e 49       		.uleb128 0x49
 4072 005f 13       		.uleb128 0x13
 4073 0060 00       		.byte	0
 4074 0061 00       		.byte	0
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 124


 4075 0062 09       		.uleb128 0x9
 4076 0063 15       		.uleb128 0x15
 4077 0064 01       		.byte	0x1
 4078 0065 27       		.uleb128 0x27
 4079 0066 19       		.uleb128 0x19
 4080 0067 49       		.uleb128 0x49
 4081 0068 13       		.uleb128 0x13
 4082 0069 01       		.uleb128 0x1
 4083 006a 13       		.uleb128 0x13
 4084 006b 00       		.byte	0
 4085 006c 00       		.byte	0
 4086 006d 0A       		.uleb128 0xa
 4087 006e 05       		.uleb128 0x5
 4088 006f 00       		.byte	0
 4089 0070 49       		.uleb128 0x49
 4090 0071 13       		.uleb128 0x13
 4091 0072 00       		.byte	0
 4092 0073 00       		.byte	0
 4093 0074 0B       		.uleb128 0xb
 4094 0075 15       		.uleb128 0x15
 4095 0076 01       		.byte	0x1
 4096 0077 27       		.uleb128 0x27
 4097 0078 19       		.uleb128 0x19
 4098 0079 01       		.uleb128 0x1
 4099 007a 13       		.uleb128 0x13
 4100 007b 00       		.byte	0
 4101 007c 00       		.byte	0
 4102 007d 0C       		.uleb128 0xc
 4103 007e 2E       		.uleb128 0x2e
 4104 007f 01       		.byte	0x1
 4105 0080 3F       		.uleb128 0x3f
 4106 0081 19       		.uleb128 0x19
 4107 0082 03       		.uleb128 0x3
 4108 0083 0E       		.uleb128 0xe
 4109 0084 3A       		.uleb128 0x3a
 4110 0085 0B       		.uleb128 0xb
 4111 0086 3B       		.uleb128 0x3b
 4112 0087 0B       		.uleb128 0xb
 4113 0088 27       		.uleb128 0x27
 4114 0089 19       		.uleb128 0x19
 4115 008a 11       		.uleb128 0x11
 4116 008b 01       		.uleb128 0x1
 4117 008c 12       		.uleb128 0x12
 4118 008d 06       		.uleb128 0x6
 4119 008e 40       		.uleb128 0x40
 4120 008f 18       		.uleb128 0x18
 4121 0090 9742     		.uleb128 0x2117
 4122 0092 19       		.uleb128 0x19
 4123 0093 01       		.uleb128 0x1
 4124 0094 13       		.uleb128 0x13
 4125 0095 00       		.byte	0
 4126 0096 00       		.byte	0
 4127 0097 0D       		.uleb128 0xd
 4128 0098 05       		.uleb128 0x5
 4129 0099 00       		.byte	0
 4130 009a 03       		.uleb128 0x3
 4131 009b 0E       		.uleb128 0xe
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 125


 4132 009c 3A       		.uleb128 0x3a
 4133 009d 0B       		.uleb128 0xb
 4134 009e 3B       		.uleb128 0x3b
 4135 009f 0B       		.uleb128 0xb
 4136 00a0 49       		.uleb128 0x49
 4137 00a1 13       		.uleb128 0x13
 4138 00a2 02       		.uleb128 0x2
 4139 00a3 17       		.uleb128 0x17
 4140 00a4 00       		.byte	0
 4141 00a5 00       		.byte	0
 4142 00a6 0E       		.uleb128 0xe
 4143 00a7 898201   		.uleb128 0x4109
 4144 00aa 01       		.byte	0x1
 4145 00ab 11       		.uleb128 0x11
 4146 00ac 01       		.uleb128 0x1
 4147 00ad 31       		.uleb128 0x31
 4148 00ae 13       		.uleb128 0x13
 4149 00af 01       		.uleb128 0x1
 4150 00b0 13       		.uleb128 0x13
 4151 00b1 00       		.byte	0
 4152 00b2 00       		.byte	0
 4153 00b3 0F       		.uleb128 0xf
 4154 00b4 8A8201   		.uleb128 0x410a
 4155 00b7 00       		.byte	0
 4156 00b8 02       		.uleb128 0x2
 4157 00b9 18       		.uleb128 0x18
 4158 00ba 9142     		.uleb128 0x2111
 4159 00bc 18       		.uleb128 0x18
 4160 00bd 00       		.byte	0
 4161 00be 00       		.byte	0
 4162 00bf 10       		.uleb128 0x10
 4163 00c0 898201   		.uleb128 0x4109
 4164 00c3 00       		.byte	0
 4165 00c4 11       		.uleb128 0x11
 4166 00c5 01       		.uleb128 0x1
 4167 00c6 31       		.uleb128 0x31
 4168 00c7 13       		.uleb128 0x13
 4169 00c8 00       		.byte	0
 4170 00c9 00       		.byte	0
 4171 00ca 11       		.uleb128 0x11
 4172 00cb 898201   		.uleb128 0x4109
 4173 00ce 01       		.byte	0x1
 4174 00cf 11       		.uleb128 0x11
 4175 00d0 01       		.uleb128 0x1
 4176 00d1 31       		.uleb128 0x31
 4177 00d2 13       		.uleb128 0x13
 4178 00d3 00       		.byte	0
 4179 00d4 00       		.byte	0
 4180 00d5 12       		.uleb128 0x12
 4181 00d6 34       		.uleb128 0x34
 4182 00d7 00       		.byte	0
 4183 00d8 03       		.uleb128 0x3
 4184 00d9 08       		.uleb128 0x8
 4185 00da 3A       		.uleb128 0x3a
 4186 00db 0B       		.uleb128 0xb
 4187 00dc 3B       		.uleb128 0x3b
 4188 00dd 05       		.uleb128 0x5
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 126


 4189 00de 49       		.uleb128 0x49
 4190 00df 13       		.uleb128 0x13
 4191 00e0 02       		.uleb128 0x2
 4192 00e1 17       		.uleb128 0x17
 4193 00e2 00       		.byte	0
 4194 00e3 00       		.byte	0
 4195 00e4 13       		.uleb128 0x13
 4196 00e5 2E       		.uleb128 0x2e
 4197 00e6 01       		.byte	0x1
 4198 00e7 3F       		.uleb128 0x3f
 4199 00e8 19       		.uleb128 0x19
 4200 00e9 03       		.uleb128 0x3
 4201 00ea 0E       		.uleb128 0xe
 4202 00eb 3A       		.uleb128 0x3a
 4203 00ec 0B       		.uleb128 0xb
 4204 00ed 3B       		.uleb128 0x3b
 4205 00ee 05       		.uleb128 0x5
 4206 00ef 27       		.uleb128 0x27
 4207 00f0 19       		.uleb128 0x19
 4208 00f1 11       		.uleb128 0x11
 4209 00f2 01       		.uleb128 0x1
 4210 00f3 12       		.uleb128 0x12
 4211 00f4 06       		.uleb128 0x6
 4212 00f5 40       		.uleb128 0x40
 4213 00f6 18       		.uleb128 0x18
 4214 00f7 9742     		.uleb128 0x2117
 4215 00f9 19       		.uleb128 0x19
 4216 00fa 01       		.uleb128 0x1
 4217 00fb 13       		.uleb128 0x13
 4218 00fc 00       		.byte	0
 4219 00fd 00       		.byte	0
 4220 00fe 14       		.uleb128 0x14
 4221 00ff 34       		.uleb128 0x34
 4222 0100 00       		.byte	0
 4223 0101 03       		.uleb128 0x3
 4224 0102 0E       		.uleb128 0xe
 4225 0103 3A       		.uleb128 0x3a
 4226 0104 0B       		.uleb128 0xb
 4227 0105 3B       		.uleb128 0x3b
 4228 0106 05       		.uleb128 0x5
 4229 0107 49       		.uleb128 0x49
 4230 0108 13       		.uleb128 0x13
 4231 0109 02       		.uleb128 0x2
 4232 010a 17       		.uleb128 0x17
 4233 010b 00       		.byte	0
 4234 010c 00       		.byte	0
 4235 010d 15       		.uleb128 0x15
 4236 010e 2E       		.uleb128 0x2e
 4237 010f 01       		.byte	0x1
 4238 0110 3F       		.uleb128 0x3f
 4239 0111 19       		.uleb128 0x19
 4240 0112 03       		.uleb128 0x3
 4241 0113 0E       		.uleb128 0xe
 4242 0114 3A       		.uleb128 0x3a
 4243 0115 0B       		.uleb128 0xb
 4244 0116 3B       		.uleb128 0x3b
 4245 0117 05       		.uleb128 0x5
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 127


 4246 0118 27       		.uleb128 0x27
 4247 0119 19       		.uleb128 0x19
 4248 011a 49       		.uleb128 0x49
 4249 011b 13       		.uleb128 0x13
 4250 011c 11       		.uleb128 0x11
 4251 011d 01       		.uleb128 0x1
 4252 011e 12       		.uleb128 0x12
 4253 011f 06       		.uleb128 0x6
 4254 0120 40       		.uleb128 0x40
 4255 0121 18       		.uleb128 0x18
 4256 0122 9742     		.uleb128 0x2117
 4257 0124 19       		.uleb128 0x19
 4258 0125 01       		.uleb128 0x1
 4259 0126 13       		.uleb128 0x13
 4260 0127 00       		.byte	0
 4261 0128 00       		.byte	0
 4262 0129 16       		.uleb128 0x16
 4263 012a 05       		.uleb128 0x5
 4264 012b 00       		.byte	0
 4265 012c 03       		.uleb128 0x3
 4266 012d 0E       		.uleb128 0xe
 4267 012e 3A       		.uleb128 0x3a
 4268 012f 0B       		.uleb128 0xb
 4269 0130 3B       		.uleb128 0x3b
 4270 0131 05       		.uleb128 0x5
 4271 0132 49       		.uleb128 0x49
 4272 0133 13       		.uleb128 0x13
 4273 0134 02       		.uleb128 0x2
 4274 0135 17       		.uleb128 0x17
 4275 0136 00       		.byte	0
 4276 0137 00       		.byte	0
 4277 0138 17       		.uleb128 0x17
 4278 0139 05       		.uleb128 0x5
 4279 013a 00       		.byte	0
 4280 013b 03       		.uleb128 0x3
 4281 013c 0E       		.uleb128 0xe
 4282 013d 3A       		.uleb128 0x3a
 4283 013e 0B       		.uleb128 0xb
 4284 013f 3B       		.uleb128 0x3b
 4285 0140 05       		.uleb128 0x5
 4286 0141 49       		.uleb128 0x49
 4287 0142 13       		.uleb128 0x13
 4288 0143 02       		.uleb128 0x2
 4289 0144 18       		.uleb128 0x18
 4290 0145 00       		.byte	0
 4291 0146 00       		.byte	0
 4292 0147 18       		.uleb128 0x18
 4293 0148 34       		.uleb128 0x34
 4294 0149 00       		.byte	0
 4295 014a 03       		.uleb128 0x3
 4296 014b 0E       		.uleb128 0xe
 4297 014c 3A       		.uleb128 0x3a
 4298 014d 0B       		.uleb128 0xb
 4299 014e 3B       		.uleb128 0x3b
 4300 014f 05       		.uleb128 0x5
 4301 0150 49       		.uleb128 0x49
 4302 0151 13       		.uleb128 0x13
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 128


 4303 0152 1C       		.uleb128 0x1c
 4304 0153 0B       		.uleb128 0xb
 4305 0154 00       		.byte	0
 4306 0155 00       		.byte	0
 4307 0156 19       		.uleb128 0x19
 4308 0157 34       		.uleb128 0x34
 4309 0158 00       		.byte	0
 4310 0159 03       		.uleb128 0x3
 4311 015a 0E       		.uleb128 0xe
 4312 015b 3A       		.uleb128 0x3a
 4313 015c 0B       		.uleb128 0xb
 4314 015d 3B       		.uleb128 0x3b
 4315 015e 05       		.uleb128 0x5
 4316 015f 49       		.uleb128 0x49
 4317 0160 13       		.uleb128 0x13
 4318 0161 02       		.uleb128 0x2
 4319 0162 18       		.uleb128 0x18
 4320 0163 00       		.byte	0
 4321 0164 00       		.byte	0
 4322 0165 1A       		.uleb128 0x1a
 4323 0166 01       		.uleb128 0x1
 4324 0167 01       		.byte	0x1
 4325 0168 49       		.uleb128 0x49
 4326 0169 13       		.uleb128 0x13
 4327 016a 01       		.uleb128 0x1
 4328 016b 13       		.uleb128 0x13
 4329 016c 00       		.byte	0
 4330 016d 00       		.byte	0
 4331 016e 1B       		.uleb128 0x1b
 4332 016f 21       		.uleb128 0x21
 4333 0170 00       		.byte	0
 4334 0171 49       		.uleb128 0x49
 4335 0172 13       		.uleb128 0x13
 4336 0173 2F       		.uleb128 0x2f
 4337 0174 0B       		.uleb128 0xb
 4338 0175 00       		.byte	0
 4339 0176 00       		.byte	0
 4340 0177 1C       		.uleb128 0x1c
 4341 0178 2E       		.uleb128 0x2e
 4342 0179 01       		.byte	0x1
 4343 017a 3F       		.uleb128 0x3f
 4344 017b 19       		.uleb128 0x19
 4345 017c 03       		.uleb128 0x3
 4346 017d 0E       		.uleb128 0xe
 4347 017e 3A       		.uleb128 0x3a
 4348 017f 0B       		.uleb128 0xb
 4349 0180 3B       		.uleb128 0x3b
 4350 0181 05       		.uleb128 0x5
 4351 0182 27       		.uleb128 0x27
 4352 0183 19       		.uleb128 0x19
 4353 0184 49       		.uleb128 0x49
 4354 0185 13       		.uleb128 0x13
 4355 0186 11       		.uleb128 0x11
 4356 0187 01       		.uleb128 0x1
 4357 0188 12       		.uleb128 0x12
 4358 0189 06       		.uleb128 0x6
 4359 018a 40       		.uleb128 0x40
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 129


 4360 018b 18       		.uleb128 0x18
 4361 018c 9642     		.uleb128 0x2116
 4362 018e 19       		.uleb128 0x19
 4363 018f 01       		.uleb128 0x1
 4364 0190 13       		.uleb128 0x13
 4365 0191 00       		.byte	0
 4366 0192 00       		.byte	0
 4367 0193 1D       		.uleb128 0x1d
 4368 0194 05       		.uleb128 0x5
 4369 0195 00       		.byte	0
 4370 0196 03       		.uleb128 0x3
 4371 0197 08       		.uleb128 0x8
 4372 0198 3A       		.uleb128 0x3a
 4373 0199 0B       		.uleb128 0xb
 4374 019a 3B       		.uleb128 0x3b
 4375 019b 05       		.uleb128 0x5
 4376 019c 49       		.uleb128 0x49
 4377 019d 13       		.uleb128 0x13
 4378 019e 02       		.uleb128 0x2
 4379 019f 17       		.uleb128 0x17
 4380 01a0 00       		.byte	0
 4381 01a1 00       		.byte	0
 4382 01a2 1E       		.uleb128 0x1e
 4383 01a3 05       		.uleb128 0x5
 4384 01a4 00       		.byte	0
 4385 01a5 03       		.uleb128 0x3
 4386 01a6 08       		.uleb128 0x8
 4387 01a7 3A       		.uleb128 0x3a
 4388 01a8 0B       		.uleb128 0xb
 4389 01a9 3B       		.uleb128 0x3b
 4390 01aa 05       		.uleb128 0x5
 4391 01ab 49       		.uleb128 0x49
 4392 01ac 13       		.uleb128 0x13
 4393 01ad 02       		.uleb128 0x2
 4394 01ae 18       		.uleb128 0x18
 4395 01af 00       		.byte	0
 4396 01b0 00       		.byte	0
 4397 01b1 1F       		.uleb128 0x1f
 4398 01b2 34       		.uleb128 0x34
 4399 01b3 00       		.byte	0
 4400 01b4 03       		.uleb128 0x3
 4401 01b5 08       		.uleb128 0x8
 4402 01b6 3A       		.uleb128 0x3a
 4403 01b7 0B       		.uleb128 0xb
 4404 01b8 3B       		.uleb128 0x3b
 4405 01b9 05       		.uleb128 0x5
 4406 01ba 49       		.uleb128 0x49
 4407 01bb 13       		.uleb128 0x13
 4408 01bc 00       		.byte	0
 4409 01bd 00       		.byte	0
 4410 01be 20       		.uleb128 0x20
 4411 01bf 34       		.uleb128 0x34
 4412 01c0 00       		.byte	0
 4413 01c1 03       		.uleb128 0x3
 4414 01c2 0E       		.uleb128 0xe
 4415 01c3 3A       		.uleb128 0x3a
 4416 01c4 0B       		.uleb128 0xb
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 130


 4417 01c5 3B       		.uleb128 0x3b
 4418 01c6 05       		.uleb128 0x5
 4419 01c7 49       		.uleb128 0x49
 4420 01c8 13       		.uleb128 0x13
 4421 01c9 00       		.byte	0
 4422 01ca 00       		.byte	0
 4423 01cb 21       		.uleb128 0x21
 4424 01cc 2E       		.uleb128 0x2e
 4425 01cd 00       		.byte	0
 4426 01ce 3F       		.uleb128 0x3f
 4427 01cf 19       		.uleb128 0x19
 4428 01d0 03       		.uleb128 0x3
 4429 01d1 0E       		.uleb128 0xe
 4430 01d2 3A       		.uleb128 0x3a
 4431 01d3 0B       		.uleb128 0xb
 4432 01d4 3B       		.uleb128 0x3b
 4433 01d5 05       		.uleb128 0x5
 4434 01d6 27       		.uleb128 0x27
 4435 01d7 19       		.uleb128 0x19
 4436 01d8 11       		.uleb128 0x11
 4437 01d9 01       		.uleb128 0x1
 4438 01da 12       		.uleb128 0x12
 4439 01db 06       		.uleb128 0x6
 4440 01dc 40       		.uleb128 0x40
 4441 01dd 18       		.uleb128 0x18
 4442 01de 9742     		.uleb128 0x2117
 4443 01e0 19       		.uleb128 0x19
 4444 01e1 00       		.byte	0
 4445 01e2 00       		.byte	0
 4446 01e3 22       		.uleb128 0x22
 4447 01e4 34       		.uleb128 0x34
 4448 01e5 00       		.byte	0
 4449 01e6 03       		.uleb128 0x3
 4450 01e7 0E       		.uleb128 0xe
 4451 01e8 3A       		.uleb128 0x3a
 4452 01e9 0B       		.uleb128 0xb
 4453 01ea 3B       		.uleb128 0x3b
 4454 01eb 0B       		.uleb128 0xb
 4455 01ec 49       		.uleb128 0x49
 4456 01ed 13       		.uleb128 0x13
 4457 01ee 00       		.byte	0
 4458 01ef 00       		.byte	0
 4459 01f0 23       		.uleb128 0x23
 4460 01f1 34       		.uleb128 0x34
 4461 01f2 00       		.byte	0
 4462 01f3 03       		.uleb128 0x3
 4463 01f4 0E       		.uleb128 0xe
 4464 01f5 3A       		.uleb128 0x3a
 4465 01f6 0B       		.uleb128 0xb
 4466 01f7 3B       		.uleb128 0x3b
 4467 01f8 0B       		.uleb128 0xb
 4468 01f9 49       		.uleb128 0x49
 4469 01fa 13       		.uleb128 0x13
 4470 01fb 02       		.uleb128 0x2
 4471 01fc 18       		.uleb128 0x18
 4472 01fd 00       		.byte	0
 4473 01fe 00       		.byte	0
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 131


 4474 01ff 24       		.uleb128 0x24
 4475 0200 34       		.uleb128 0x34
 4476 0201 00       		.byte	0
 4477 0202 03       		.uleb128 0x3
 4478 0203 0E       		.uleb128 0xe
 4479 0204 3A       		.uleb128 0x3a
 4480 0205 0B       		.uleb128 0xb
 4481 0206 3B       		.uleb128 0x3b
 4482 0207 0B       		.uleb128 0xb
 4483 0208 49       		.uleb128 0x49
 4484 0209 13       		.uleb128 0x13
 4485 020a 3F       		.uleb128 0x3f
 4486 020b 19       		.uleb128 0x19
 4487 020c 3C       		.uleb128 0x3c
 4488 020d 19       		.uleb128 0x19
 4489 020e 00       		.byte	0
 4490 020f 00       		.byte	0
 4491 0210 25       		.uleb128 0x25
 4492 0211 34       		.uleb128 0x34
 4493 0212 00       		.byte	0
 4494 0213 03       		.uleb128 0x3
 4495 0214 0E       		.uleb128 0xe
 4496 0215 3A       		.uleb128 0x3a
 4497 0216 0B       		.uleb128 0xb
 4498 0217 3B       		.uleb128 0x3b
 4499 0218 0B       		.uleb128 0xb
 4500 0219 49       		.uleb128 0x49
 4501 021a 13       		.uleb128 0x13
 4502 021b 3F       		.uleb128 0x3f
 4503 021c 19       		.uleb128 0x19
 4504 021d 02       		.uleb128 0x2
 4505 021e 18       		.uleb128 0x18
 4506 021f 00       		.byte	0
 4507 0220 00       		.byte	0
 4508 0221 26       		.uleb128 0x26
 4509 0222 2E       		.uleb128 0x2e
 4510 0223 01       		.byte	0x1
 4511 0224 3F       		.uleb128 0x3f
 4512 0225 19       		.uleb128 0x19
 4513 0226 03       		.uleb128 0x3
 4514 0227 0E       		.uleb128 0xe
 4515 0228 3A       		.uleb128 0x3a
 4516 0229 0B       		.uleb128 0xb
 4517 022a 3B       		.uleb128 0x3b
 4518 022b 0B       		.uleb128 0xb
 4519 022c 27       		.uleb128 0x27
 4520 022d 19       		.uleb128 0x19
 4521 022e 3C       		.uleb128 0x3c
 4522 022f 19       		.uleb128 0x19
 4523 0230 01       		.uleb128 0x1
 4524 0231 13       		.uleb128 0x13
 4525 0232 00       		.byte	0
 4526 0233 00       		.byte	0
 4527 0234 27       		.uleb128 0x27
 4528 0235 2E       		.uleb128 0x2e
 4529 0236 00       		.byte	0
 4530 0237 3F       		.uleb128 0x3f
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 132


 4531 0238 19       		.uleb128 0x19
 4532 0239 03       		.uleb128 0x3
 4533 023a 0E       		.uleb128 0xe
 4534 023b 3A       		.uleb128 0x3a
 4535 023c 0B       		.uleb128 0xb
 4536 023d 3B       		.uleb128 0x3b
 4537 023e 0B       		.uleb128 0xb
 4538 023f 27       		.uleb128 0x27
 4539 0240 19       		.uleb128 0x19
 4540 0241 49       		.uleb128 0x49
 4541 0242 13       		.uleb128 0x13
 4542 0243 3C       		.uleb128 0x3c
 4543 0244 19       		.uleb128 0x19
 4544 0245 00       		.byte	0
 4545 0246 00       		.byte	0
 4546 0247 28       		.uleb128 0x28
 4547 0248 2E       		.uleb128 0x2e
 4548 0249 00       		.byte	0
 4549 024a 3F       		.uleb128 0x3f
 4550 024b 19       		.uleb128 0x19
 4551 024c 03       		.uleb128 0x3
 4552 024d 0E       		.uleb128 0xe
 4553 024e 3A       		.uleb128 0x3a
 4554 024f 0B       		.uleb128 0xb
 4555 0250 3B       		.uleb128 0x3b
 4556 0251 0B       		.uleb128 0xb
 4557 0252 27       		.uleb128 0x27
 4558 0253 19       		.uleb128 0x19
 4559 0254 3C       		.uleb128 0x3c
 4560 0255 19       		.uleb128 0x19
 4561 0256 00       		.byte	0
 4562 0257 00       		.byte	0
 4563 0258 29       		.uleb128 0x29
 4564 0259 2E       		.uleb128 0x2e
 4565 025a 01       		.byte	0x1
 4566 025b 3F       		.uleb128 0x3f
 4567 025c 19       		.uleb128 0x19
 4568 025d 03       		.uleb128 0x3
 4569 025e 0E       		.uleb128 0xe
 4570 025f 3A       		.uleb128 0x3a
 4571 0260 0B       		.uleb128 0xb
 4572 0261 3B       		.uleb128 0x3b
 4573 0262 0B       		.uleb128 0xb
 4574 0263 27       		.uleb128 0x27
 4575 0264 19       		.uleb128 0x19
 4576 0265 49       		.uleb128 0x49
 4577 0266 13       		.uleb128 0x13
 4578 0267 3C       		.uleb128 0x3c
 4579 0268 19       		.uleb128 0x19
 4580 0269 01       		.uleb128 0x1
 4581 026a 13       		.uleb128 0x13
 4582 026b 00       		.byte	0
 4583 026c 00       		.byte	0
 4584 026d 2A       		.uleb128 0x2a
 4585 026e 2E       		.uleb128 0x2e
 4586 026f 01       		.byte	0x1
 4587 0270 3F       		.uleb128 0x3f
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 133


 4588 0271 19       		.uleb128 0x19
 4589 0272 03       		.uleb128 0x3
 4590 0273 0E       		.uleb128 0xe
 4591 0274 3A       		.uleb128 0x3a
 4592 0275 0B       		.uleb128 0xb
 4593 0276 3B       		.uleb128 0x3b
 4594 0277 0B       		.uleb128 0xb
 4595 0278 27       		.uleb128 0x27
 4596 0279 19       		.uleb128 0x19
 4597 027a 3C       		.uleb128 0x3c
 4598 027b 19       		.uleb128 0x19
 4599 027c 00       		.byte	0
 4600 027d 00       		.byte	0
 4601 027e 00       		.byte	0
 4602              		.section	.debug_loc,"",%progbits
 4603              	.Ldebug_loc0:
 4604              	.LLST0:
 4605 0000 00000000 		.4byte	.LVL0
 4606 0004 0C000000 		.4byte	.LVL1
 4607 0008 0100     		.2byte	0x1
 4608 000a 50       		.byte	0x50
 4609 000b 0C000000 		.4byte	.LVL1
 4610 000f 24000000 		.4byte	.LFE35
 4611 0013 0400     		.2byte	0x4
 4612 0015 F3       		.byte	0xf3
 4613 0016 01       		.uleb128 0x1
 4614 0017 50       		.byte	0x50
 4615 0018 9F       		.byte	0x9f
 4616 0019 00000000 		.4byte	0
 4617 001d 00000000 		.4byte	0
 4618              	.LLST1:
 4619 0021 00000000 		.4byte	.LVL2
 4620 0025 07000000 		.4byte	.LVL3-1
 4621 0029 0100     		.2byte	0x1
 4622 002b 50       		.byte	0x50
 4623 002c 07000000 		.4byte	.LVL3-1
 4624 0030 16000000 		.4byte	.LVL6
 4625 0034 0100     		.2byte	0x1
 4626 0036 54       		.byte	0x54
 4627 0037 16000000 		.4byte	.LVL6
 4628 003b 18000000 		.4byte	.LFE36
 4629 003f 0400     		.2byte	0x4
 4630 0041 F3       		.byte	0xf3
 4631 0042 01       		.uleb128 0x1
 4632 0043 50       		.byte	0x50
 4633 0044 9F       		.byte	0x9f
 4634 0045 00000000 		.4byte	0
 4635 0049 00000000 		.4byte	0
 4636              	.LLST2:
 4637 004d 02000000 		.4byte	.LVL7
 4638 0051 06000000 		.4byte	.LVL8
 4639 0055 0200     		.2byte	0x2
 4640 0057 30       		.byte	0x30
 4641 0058 9F       		.byte	0x9f
 4642 0059 06000000 		.4byte	.LVL8
 4643 005d 12000000 		.4byte	.LVL11
 4644 0061 0100     		.2byte	0x1
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 134


 4645 0063 54       		.byte	0x54
 4646 0064 00000000 		.4byte	0
 4647 0068 00000000 		.4byte	0
 4648              	.LLST3:
 4649 006c 14000000 		.4byte	.LVL14
 4650 0070 2C000000 		.4byte	.LVL19
 4651 0074 0100     		.2byte	0x1
 4652 0076 54       		.byte	0x54
 4653 0077 00000000 		.4byte	0
 4654 007b 00000000 		.4byte	0
 4655              	.LLST4:
 4656 007f 1C000000 		.4byte	.LVL15
 4657 0083 22000000 		.4byte	.LVL16
 4658 0087 0100     		.2byte	0x1
 4659 0089 50       		.byte	0x50
 4660 008a 00000000 		.4byte	0
 4661 008e 00000000 		.4byte	0
 4662              	.LLST5:
 4663 0092 00000000 		.4byte	.LVL20
 4664 0096 02000000 		.4byte	.LVL21
 4665 009a 0100     		.2byte	0x1
 4666 009c 50       		.byte	0x50
 4667 009d 02000000 		.4byte	.LVL21
 4668 00a1 0C000000 		.4byte	.LFE43
 4669 00a5 0400     		.2byte	0x4
 4670 00a7 F3       		.byte	0xf3
 4671 00a8 01       		.uleb128 0x1
 4672 00a9 50       		.byte	0x50
 4673 00aa 9F       		.byte	0x9f
 4674 00ab 00000000 		.4byte	0
 4675 00af 00000000 		.4byte	0
 4676              	.LLST6:
 4677 00b3 00000000 		.4byte	.LVL22
 4678 00b7 02000000 		.4byte	.LVL23
 4679 00bb 0100     		.2byte	0x1
 4680 00bd 50       		.byte	0x50
 4681 00be 02000000 		.4byte	.LVL23
 4682 00c2 0C000000 		.4byte	.LFE44
 4683 00c6 0400     		.2byte	0x4
 4684 00c8 F3       		.byte	0xf3
 4685 00c9 01       		.uleb128 0x1
 4686 00ca 50       		.byte	0x50
 4687 00cb 9F       		.byte	0x9f
 4688 00cc 00000000 		.4byte	0
 4689 00d0 00000000 		.4byte	0
 4690              	.LLST7:
 4691 00d4 00000000 		.4byte	.LVL24
 4692 00d8 04000000 		.4byte	.LVL25
 4693 00dc 0100     		.2byte	0x1
 4694 00de 50       		.byte	0x50
 4695 00df 04000000 		.4byte	.LVL25
 4696 00e3 0C000000 		.4byte	.LFE45
 4697 00e7 0400     		.2byte	0x4
 4698 00e9 F3       		.byte	0xf3
 4699 00ea 01       		.uleb128 0x1
 4700 00eb 50       		.byte	0x50
 4701 00ec 9F       		.byte	0x9f
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 135


 4702 00ed 00000000 		.4byte	0
 4703 00f1 00000000 		.4byte	0
 4704              	.LLST8:
 4705 00f5 00000000 		.4byte	.LVL26
 4706 00f9 04000000 		.4byte	.LVL27
 4707 00fd 0100     		.2byte	0x1
 4708 00ff 50       		.byte	0x50
 4709 0100 04000000 		.4byte	.LVL27
 4710 0104 0C000000 		.4byte	.LFE46
 4711 0108 0400     		.2byte	0x4
 4712 010a F3       		.byte	0xf3
 4713 010b 01       		.uleb128 0x1
 4714 010c 50       		.byte	0x50
 4715 010d 9F       		.byte	0x9f
 4716 010e 00000000 		.4byte	0
 4717 0112 00000000 		.4byte	0
 4718              	.LLST9:
 4719 0116 00000000 		.4byte	.LVL28
 4720 011a 04000000 		.4byte	.LVL29
 4721 011e 0100     		.2byte	0x1
 4722 0120 50       		.byte	0x50
 4723 0121 04000000 		.4byte	.LVL29
 4724 0125 0C000000 		.4byte	.LFE47
 4725 0129 0400     		.2byte	0x4
 4726 012b F3       		.byte	0xf3
 4727 012c 01       		.uleb128 0x1
 4728 012d 50       		.byte	0x50
 4729 012e 9F       		.byte	0x9f
 4730 012f 00000000 		.4byte	0
 4731 0133 00000000 		.4byte	0
 4732              	.LLST10:
 4733 0137 00000000 		.4byte	.LVL30
 4734 013b 04000000 		.4byte	.LVL31
 4735 013f 0100     		.2byte	0x1
 4736 0141 50       		.byte	0x50
 4737 0142 04000000 		.4byte	.LVL31
 4738 0146 0C000000 		.4byte	.LFE48
 4739 014a 0400     		.2byte	0x4
 4740 014c F3       		.byte	0xf3
 4741 014d 01       		.uleb128 0x1
 4742 014e 50       		.byte	0x50
 4743 014f 9F       		.byte	0x9f
 4744 0150 00000000 		.4byte	0
 4745 0154 00000000 		.4byte	0
 4746              	.LLST11:
 4747 0158 00000000 		.4byte	.LVL32
 4748 015c 04000000 		.4byte	.LVL33
 4749 0160 0100     		.2byte	0x1
 4750 0162 50       		.byte	0x50
 4751 0163 04000000 		.4byte	.LVL33
 4752 0167 0C000000 		.4byte	.LFE49
 4753 016b 0400     		.2byte	0x4
 4754 016d F3       		.byte	0xf3
 4755 016e 01       		.uleb128 0x1
 4756 016f 50       		.byte	0x50
 4757 0170 9F       		.byte	0x9f
 4758 0171 00000000 		.4byte	0
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 136


 4759 0175 00000000 		.4byte	0
 4760              	.LLST12:
 4761 0179 00000000 		.4byte	.LVL34
 4762 017d 04000000 		.4byte	.LVL35
 4763 0181 0100     		.2byte	0x1
 4764 0183 50       		.byte	0x50
 4765 0184 04000000 		.4byte	.LVL35
 4766 0188 0C000000 		.4byte	.LFE50
 4767 018c 0400     		.2byte	0x4
 4768 018e F3       		.byte	0xf3
 4769 018f 01       		.uleb128 0x1
 4770 0190 50       		.byte	0x50
 4771 0191 9F       		.byte	0x9f
 4772 0192 00000000 		.4byte	0
 4773 0196 00000000 		.4byte	0
 4774              	.LLST13:
 4775 019a 00000000 		.4byte	.LVL41
 4776 019e 04000000 		.4byte	.LVL42
 4777 01a2 0100     		.2byte	0x1
 4778 01a4 50       		.byte	0x50
 4779 01a5 04000000 		.4byte	.LVL42
 4780 01a9 0C000000 		.4byte	.LFE56
 4781 01ad 0400     		.2byte	0x4
 4782 01af F3       		.byte	0xf3
 4783 01b0 01       		.uleb128 0x1
 4784 01b1 50       		.byte	0x50
 4785 01b2 9F       		.byte	0x9f
 4786 01b3 00000000 		.4byte	0
 4787 01b7 00000000 		.4byte	0
 4788              	.LLST14:
 4789 01bb 00000000 		.4byte	.LVL43
 4790 01bf 16000000 		.4byte	.LVL50
 4791 01c3 0100     		.2byte	0x1
 4792 01c5 50       		.byte	0x50
 4793 01c6 16000000 		.4byte	.LVL50
 4794 01ca 84000000 		.4byte	.LVL59
 4795 01ce 0100     		.2byte	0x1
 4796 01d0 54       		.byte	0x54
 4797 01d1 84000000 		.4byte	.LVL59
 4798 01d5 9C000000 		.4byte	.LFE57
 4799 01d9 0400     		.2byte	0x4
 4800 01db F3       		.byte	0xf3
 4801 01dc 01       		.uleb128 0x1
 4802 01dd 50       		.byte	0x50
 4803 01de 9F       		.byte	0x9f
 4804 01df 00000000 		.4byte	0
 4805 01e3 00000000 		.4byte	0
 4806              	.LLST15:
 4807 01e7 08000000 		.4byte	.LVL44
 4808 01eb 16000000 		.4byte	.LVL50
 4809 01ef 0200     		.2byte	0x2
 4810 01f1 70       		.byte	0x70
 4811 01f2 00       		.sleb128 0
 4812 01f3 16000000 		.4byte	.LVL50
 4813 01f7 84000000 		.4byte	.LVL59
 4814 01fb 0200     		.2byte	0x2
 4815 01fd 74       		.byte	0x74
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 137


 4816 01fe 00       		.sleb128 0
 4817 01ff 84000000 		.4byte	.LVL59
 4818 0203 9C000000 		.4byte	.LFE57
 4819 0207 0300     		.2byte	0x3
 4820 0209 F3       		.byte	0xf3
 4821 020a 01       		.uleb128 0x1
 4822 020b 50       		.byte	0x50
 4823 020c 00000000 		.4byte	0
 4824 0210 00000000 		.4byte	0
 4825              	.LLST16:
 4826 0214 14000000 		.4byte	.LVL49
 4827 0218 18000000 		.4byte	.LVL51
 4828 021c 0500     		.2byte	0x5
 4829 021e 72       		.byte	0x72
 4830 021f 00       		.sleb128 0
 4831 0220 73       		.byte	0x73
 4832 0221 00       		.sleb128 0
 4833 0222 22       		.byte	0x22
 4834 0223 18000000 		.4byte	.LVL51
 4835 0227 21000000 		.4byte	.LVL52-1
 4836 022b 0A00     		.2byte	0xa
 4837 022d 74       		.byte	0x74
 4838 022e 00       		.sleb128 0
 4839 022f 94       		.byte	0x94
 4840 0230 01       		.byte	0x1
 4841 0231 08       		.byte	0x8
 4842 0232 FF       		.byte	0xff
 4843 0233 1A       		.byte	0x1a
 4844 0234 72       		.byte	0x72
 4845 0235 00       		.sleb128 0
 4846 0236 22       		.byte	0x22
 4847 0237 21000000 		.4byte	.LVL52-1
 4848 023b 84000000 		.4byte	.LVL61
 4849 023f 0100     		.2byte	0x1
 4850 0241 57       		.byte	0x57
 4851 0242 00000000 		.4byte	0
 4852 0246 00000000 		.4byte	0
 4853              	.LLST17:
 4854 024a 0C000000 		.4byte	.LVL45
 4855 024e 0E000000 		.4byte	.LVL46
 4856 0252 0500     		.2byte	0x5
 4857 0254 72       		.byte	0x72
 4858 0255 00       		.sleb128 0
 4859 0256 73       		.byte	0x73
 4860 0257 00       		.sleb128 0
 4861 0258 22       		.byte	0x22
 4862 0259 0E000000 		.4byte	.LVL46
 4863 025d 18000000 		.4byte	.LVL51
 4864 0261 0800     		.2byte	0x8
 4865 0263 73       		.byte	0x73
 4866 0264 00       		.sleb128 0
 4867 0265 03       		.byte	0x3
 4868 0266 00000000 		.4byte	Slider_fingerThreshold
 4869 026a 22       		.byte	0x22
 4870 026b 18000000 		.4byte	.LVL51
 4871 026f 21000000 		.4byte	.LVL52-1
 4872 0273 0D00     		.2byte	0xd
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 138


 4873 0275 74       		.byte	0x74
 4874 0276 00       		.sleb128 0
 4875 0277 94       		.byte	0x94
 4876 0278 01       		.byte	0x1
 4877 0279 08       		.byte	0x8
 4878 027a FF       		.byte	0xff
 4879 027b 1A       		.byte	0x1a
 4880 027c 03       		.byte	0x3
 4881 027d 00000000 		.4byte	Slider_fingerThreshold
 4882 0281 22       		.byte	0x22
 4883 0282 21000000 		.4byte	.LVL52-1
 4884 0286 84000000 		.4byte	.LVL60
 4885 028a 0100     		.2byte	0x1
 4886 028c 56       		.byte	0x56
 4887 028d 00000000 		.4byte	0
 4888 0291 00000000 		.4byte	0
 4889              	.LLST18:
 4890 0295 10000000 		.4byte	.LVL47
 4891 0299 12000000 		.4byte	.LVL48
 4892 029d 0500     		.2byte	0x5
 4893 029f 72       		.byte	0x72
 4894 02a0 00       		.sleb128 0
 4895 02a1 73       		.byte	0x73
 4896 02a2 00       		.sleb128 0
 4897 02a3 22       		.byte	0x22
 4898 02a4 12000000 		.4byte	.LVL48
 4899 02a8 18000000 		.4byte	.LVL51
 4900 02ac 0800     		.2byte	0x8
 4901 02ae 73       		.byte	0x73
 4902 02af 00       		.sleb128 0
 4903 02b0 03       		.byte	0x3
 4904 02b1 00000000 		.4byte	Slider_hysteresis
 4905 02b5 22       		.byte	0x22
 4906 02b6 18000000 		.4byte	.LVL51
 4907 02ba 21000000 		.4byte	.LVL52-1
 4908 02be 0D00     		.2byte	0xd
 4909 02c0 74       		.byte	0x74
 4910 02c1 00       		.sleb128 0
 4911 02c2 94       		.byte	0x94
 4912 02c3 01       		.byte	0x1
 4913 02c4 08       		.byte	0x8
 4914 02c5 FF       		.byte	0xff
 4915 02c6 1A       		.byte	0x1a
 4916 02c7 03       		.byte	0x3
 4917 02c8 00000000 		.4byte	Slider_hysteresis
 4918 02cc 22       		.byte	0x22
 4919 02cd 21000000 		.4byte	.LVL52-1
 4920 02d1 2E000000 		.4byte	.LVL53
 4921 02d5 0100     		.2byte	0x1
 4922 02d7 55       		.byte	0x55
 4923 02d8 44000000 		.4byte	.LVL55
 4924 02dc 4C000000 		.4byte	.LVL56
 4925 02e0 0100     		.2byte	0x1
 4926 02e2 55       		.byte	0x55
 4927 02e3 00000000 		.4byte	0
 4928 02e7 00000000 		.4byte	0
 4929              	.LLST19:
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 139


 4930 02eb 00000000 		.4byte	.LVL62
 4931 02ef 08000000 		.4byte	.LVL64
 4932 02f3 0100     		.2byte	0x1
 4933 02f5 50       		.byte	0x50
 4934 02f6 08000000 		.4byte	.LVL64
 4935 02fa 1E000000 		.4byte	.LFE58
 4936 02fe 0400     		.2byte	0x4
 4937 0300 F3       		.byte	0xf3
 4938 0301 01       		.uleb128 0x1
 4939 0302 50       		.byte	0x50
 4940 0303 9F       		.byte	0x9f
 4941 0304 00000000 		.4byte	0
 4942 0308 00000000 		.4byte	0
 4943              	.LLST20:
 4944 030c 02000000 		.4byte	.LVL63
 4945 0310 08000000 		.4byte	.LVL64
 4946 0314 0200     		.2byte	0x2
 4947 0316 30       		.byte	0x30
 4948 0317 9F       		.byte	0x9f
 4949 0318 08000000 		.4byte	.LVL64
 4950 031c 1C000000 		.4byte	.LVL68
 4951 0320 0100     		.2byte	0x1
 4952 0322 54       		.byte	0x54
 4953 0323 00000000 		.4byte	0
 4954 0327 00000000 		.4byte	0
 4955              	.LLST21:
 4956 032b 02000000 		.4byte	.LVL63
 4957 032f 08000000 		.4byte	.LVL64
 4958 0333 0200     		.2byte	0x2
 4959 0335 30       		.byte	0x30
 4960 0336 9F       		.byte	0x9f
 4961 0337 08000000 		.4byte	.LVL64
 4962 033b 1C000000 		.4byte	.LVL69
 4963 033f 0100     		.2byte	0x1
 4964 0341 55       		.byte	0x55
 4965 0342 1C000000 		.4byte	.LVL69
 4966 0346 1E000000 		.4byte	.LFE58
 4967 034a 0100     		.2byte	0x1
 4968 034c 50       		.byte	0x50
 4969 034d 00000000 		.4byte	0
 4970 0351 00000000 		.4byte	0
 4971              	.LLST22:
 4972 0355 02000000 		.4byte	.LVL70
 4973 0359 0A000000 		.4byte	.LVL71
 4974 035d 0200     		.2byte	0x2
 4975 035f 30       		.byte	0x30
 4976 0360 9F       		.byte	0x9f
 4977 0361 0A000000 		.4byte	.LVL71
 4978 0365 1E000000 		.4byte	.LVL75
 4979 0369 0100     		.2byte	0x1
 4980 036b 54       		.byte	0x54
 4981 036c 00000000 		.4byte	0
 4982 0370 00000000 		.4byte	0
 4983              	.LLST23:
 4984 0374 02000000 		.4byte	.LVL70
 4985 0378 0A000000 		.4byte	.LVL71
 4986 037c 0200     		.2byte	0x2
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 140


 4987 037e 30       		.byte	0x30
 4988 037f 9F       		.byte	0x9f
 4989 0380 0A000000 		.4byte	.LVL71
 4990 0384 1E000000 		.4byte	.LVL76
 4991 0388 0100     		.2byte	0x1
 4992 038a 55       		.byte	0x55
 4993 038b 1E000000 		.4byte	.LVL76
 4994 038f 20000000 		.4byte	.LFE59
 4995 0393 0100     		.2byte	0x1
 4996 0395 50       		.byte	0x50
 4997 0396 00000000 		.4byte	0
 4998 039a 00000000 		.4byte	0
 4999              	.LLST24:
 5000 039e 00000000 		.4byte	.LVL77
 5001 03a2 06000000 		.4byte	.LVL79
 5002 03a6 0100     		.2byte	0x1
 5003 03a8 50       		.byte	0x50
 5004 03a9 06000000 		.4byte	.LVL79
 5005 03ad 20000000 		.4byte	.LFE60
 5006 03b1 0400     		.2byte	0x4
 5007 03b3 F3       		.byte	0xf3
 5008 03b4 01       		.uleb128 0x1
 5009 03b5 50       		.byte	0x50
 5010 03b6 9F       		.byte	0x9f
 5011 03b7 00000000 		.4byte	0
 5012 03bb 00000000 		.4byte	0
 5013              	.LLST25:
 5014 03bf 02000000 		.4byte	.LVL78
 5015 03c3 06000000 		.4byte	.LVL79
 5016 03c7 0200     		.2byte	0x2
 5017 03c9 30       		.byte	0x30
 5018 03ca 9F       		.byte	0x9f
 5019 03cb 06000000 		.4byte	.LVL79
 5020 03cf 12000000 		.4byte	.LVL81
 5021 03d3 0100     		.2byte	0x1
 5022 03d5 54       		.byte	0x54
 5023 03d6 12000000 		.4byte	.LVL81
 5024 03da 14000000 		.4byte	.LVL82
 5025 03de 0300     		.2byte	0x3
 5026 03e0 74       		.byte	0x74
 5027 03e1 7F       		.sleb128 -1
 5028 03e2 9F       		.byte	0x9f
 5029 03e3 14000000 		.4byte	.LVL82
 5030 03e7 18000000 		.4byte	.LVL83
 5031 03eb 0100     		.2byte	0x1
 5032 03ed 54       		.byte	0x54
 5033 03ee 00000000 		.4byte	0
 5034 03f2 00000000 		.4byte	0
 5035              	.LLST26:
 5036 03f6 00000000 		.4byte	.LVL84
 5037 03fa 06000000 		.4byte	.LVL86
 5038 03fe 0100     		.2byte	0x1
 5039 0400 50       		.byte	0x50
 5040 0401 06000000 		.4byte	.LVL86
 5041 0405 20000000 		.4byte	.LFE61
 5042 0409 0400     		.2byte	0x4
 5043 040b F3       		.byte	0xf3
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 141


 5044 040c 01       		.uleb128 0x1
 5045 040d 50       		.byte	0x50
 5046 040e 9F       		.byte	0x9f
 5047 040f 00000000 		.4byte	0
 5048 0413 00000000 		.4byte	0
 5049              	.LLST27:
 5050 0417 02000000 		.4byte	.LVL85
 5051 041b 06000000 		.4byte	.LVL86
 5052 041f 0200     		.2byte	0x2
 5053 0421 30       		.byte	0x30
 5054 0422 9F       		.byte	0x9f
 5055 0423 06000000 		.4byte	.LVL86
 5056 0427 12000000 		.4byte	.LVL88
 5057 042b 0100     		.2byte	0x1
 5058 042d 54       		.byte	0x54
 5059 042e 12000000 		.4byte	.LVL88
 5060 0432 14000000 		.4byte	.LVL89
 5061 0436 0300     		.2byte	0x3
 5062 0438 74       		.byte	0x74
 5063 0439 7F       		.sleb128 -1
 5064 043a 9F       		.byte	0x9f
 5065 043b 14000000 		.4byte	.LVL89
 5066 043f 18000000 		.4byte	.LVL90
 5067 0443 0100     		.2byte	0x1
 5068 0445 54       		.byte	0x54
 5069 0446 00000000 		.4byte	0
 5070 044a 00000000 		.4byte	0
 5071              	.LLST28:
 5072 044e 00000000 		.4byte	.LVL91
 5073 0452 0C000000 		.4byte	.LVL94
 5074 0456 0100     		.2byte	0x1
 5075 0458 50       		.byte	0x50
 5076 0459 0C000000 		.4byte	.LVL94
 5077 045d 2C000000 		.4byte	.LFE62
 5078 0461 0400     		.2byte	0x4
 5079 0463 F3       		.byte	0xf3
 5080 0464 01       		.uleb128 0x1
 5081 0465 50       		.byte	0x50
 5082 0466 9F       		.byte	0x9f
 5083 0467 00000000 		.4byte	0
 5084 046b 00000000 		.4byte	0
 5085              	.LLST29:
 5086 046f 08000000 		.4byte	.LVL93
 5087 0473 10000000 		.4byte	.LVL95
 5088 0477 0200     		.2byte	0x2
 5089 0479 30       		.byte	0x30
 5090 047a 9F       		.byte	0x9f
 5091 047b 10000000 		.4byte	.LVL95
 5092 047f 20000000 		.4byte	.LVL98
 5093 0483 0100     		.2byte	0x1
 5094 0485 53       		.byte	0x53
 5095 0486 20000000 		.4byte	.LVL98
 5096 048a 22000000 		.4byte	.LVL99
 5097 048e 0300     		.2byte	0x3
 5098 0490 73       		.byte	0x73
 5099 0491 7F       		.sleb128 -1
 5100 0492 9F       		.byte	0x9f
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 142


 5101 0493 22000000 		.4byte	.LVL99
 5102 0497 2C000000 		.4byte	.LFE62
 5103 049b 0100     		.2byte	0x1
 5104 049d 53       		.byte	0x53
 5105 049e 00000000 		.4byte	0
 5106 04a2 00000000 		.4byte	0
 5107              	.LLST30:
 5108 04a6 02000000 		.4byte	.LVL92
 5109 04aa 10000000 		.4byte	.LVL95
 5110 04ae 0300     		.2byte	0x3
 5111 04b0 09       		.byte	0x9
 5112 04b1 FF       		.byte	0xff
 5113 04b2 9F       		.byte	0x9f
 5114 04b3 10000000 		.4byte	.LVL95
 5115 04b7 2C000000 		.4byte	.LFE62
 5116 04bb 0100     		.2byte	0x1
 5117 04bd 50       		.byte	0x50
 5118 04be 00000000 		.4byte	0
 5119 04c2 00000000 		.4byte	0
 5120              	.LLST31:
 5121 04c6 02000000 		.4byte	.LVL92
 5122 04ca 10000000 		.4byte	.LVL95
 5123 04ce 0200     		.2byte	0x2
 5124 04d0 30       		.byte	0x30
 5125 04d1 9F       		.byte	0x9f
 5126 04d2 10000000 		.4byte	.LVL95
 5127 04d6 1C000000 		.4byte	.LVL96
 5128 04da 0100     		.2byte	0x1
 5129 04dc 56       		.byte	0x56
 5130 04dd 1E000000 		.4byte	.LVL97
 5131 04e1 26000000 		.4byte	.LVL101
 5132 04e5 0100     		.2byte	0x1
 5133 04e7 56       		.byte	0x56
 5134 04e8 00000000 		.4byte	0
 5135 04ec 00000000 		.4byte	0
 5136              	.LLST32:
 5137 04f0 08000000 		.4byte	.LVL93
 5138 04f4 26000000 		.4byte	.LVL100
 5139 04f8 0100     		.2byte	0x1
 5140 04fa 55       		.byte	0x55
 5141 04fb 00000000 		.4byte	0
 5142 04ff 00000000 		.4byte	0
 5143              	.LLST33:
 5144 0503 00000000 		.4byte	.LVL102
 5145 0507 0E000000 		.4byte	.LVL104
 5146 050b 0100     		.2byte	0x1
 5147 050d 50       		.byte	0x50
 5148 050e 0E000000 		.4byte	.LVL104
 5149 0512 E8000000 		.4byte	.LFE63
 5150 0516 0400     		.2byte	0x4
 5151 0518 F3       		.byte	0xf3
 5152 0519 01       		.uleb128 0x1
 5153 051a 50       		.byte	0x50
 5154 051b 9F       		.byte	0x9f
 5155 051c 00000000 		.4byte	0
 5156 0520 00000000 		.4byte	0
 5157              	.LLST34:
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 143


 5158 0524 00000000 		.4byte	.LVL102
 5159 0528 14000000 		.4byte	.LVL106
 5160 052c 0100     		.2byte	0x1
 5161 052e 51       		.byte	0x51
 5162 052f 14000000 		.4byte	.LVL106
 5163 0533 E8000000 		.4byte	.LFE63
 5164 0537 0400     		.2byte	0x4
 5165 0539 F3       		.byte	0xf3
 5166 053a 01       		.uleb128 0x1
 5167 053b 51       		.byte	0x51
 5168 053c 9F       		.byte	0x9f
 5169 053d 00000000 		.4byte	0
 5170 0541 00000000 		.4byte	0
 5171              	.LLST35:
 5172 0545 00000000 		.4byte	.LVL102
 5173 0549 3C000000 		.4byte	.LVL112
 5174 054d 0100     		.2byte	0x1
 5175 054f 52       		.byte	0x52
 5176 0550 3C000000 		.4byte	.LVL112
 5177 0554 48000000 		.4byte	.LVL113
 5178 0558 0400     		.2byte	0x4
 5179 055a F3       		.byte	0xf3
 5180 055b 01       		.uleb128 0x1
 5181 055c 52       		.byte	0x52
 5182 055d 9F       		.byte	0x9f
 5183 055e 48000000 		.4byte	.LVL113
 5184 0562 4A000000 		.4byte	.LVL114
 5185 0566 0100     		.2byte	0x1
 5186 0568 52       		.byte	0x52
 5187 0569 4A000000 		.4byte	.LVL114
 5188 056d E8000000 		.4byte	.LFE63
 5189 0571 0400     		.2byte	0x4
 5190 0573 F3       		.byte	0xf3
 5191 0574 01       		.uleb128 0x1
 5192 0575 52       		.byte	0x52
 5193 0576 9F       		.byte	0x9f
 5194 0577 00000000 		.4byte	0
 5195 057b 00000000 		.4byte	0
 5196              	.LLST36:
 5197 057f 00000000 		.4byte	.LVL102
 5198 0583 0C000000 		.4byte	.LVL103
 5199 0587 0100     		.2byte	0x1
 5200 0589 53       		.byte	0x53
 5201 058a 0C000000 		.4byte	.LVL103
 5202 058e E8000000 		.4byte	.LFE63
 5203 0592 0400     		.2byte	0x4
 5204 0594 F3       		.byte	0xf3
 5205 0595 01       		.uleb128 0x1
 5206 0596 53       		.byte	0x53
 5207 0597 9F       		.byte	0x9f
 5208 0598 00000000 		.4byte	0
 5209 059c 00000000 		.4byte	0
 5210              	.LLST37:
 5211 05a0 00000000 		.4byte	.LVL102
 5212 05a4 0C000000 		.4byte	.LVL103
 5213 05a8 0200     		.2byte	0x2
 5214 05aa 91       		.byte	0x91
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 144


 5215 05ab 00       		.sleb128 0
 5216 05ac 0C000000 		.4byte	.LVL103
 5217 05b0 10000000 		.4byte	.LVL105
 5218 05b4 0200     		.2byte	0x2
 5219 05b6 73       		.byte	0x73
 5220 05b7 00       		.sleb128 0
 5221 05b8 10000000 		.4byte	.LVL105
 5222 05bc E8000000 		.4byte	.LFE63
 5223 05c0 0200     		.2byte	0x2
 5224 05c2 7D       		.byte	0x7d
 5225 05c3 18       		.sleb128 24
 5226 05c4 00000000 		.4byte	0
 5227 05c8 00000000 		.4byte	0
 5228              	.LLST38:
 5229 05cc 14000000 		.4byte	.LVL106
 5230 05d0 1E000000 		.4byte	.LVL107
 5231 05d4 0200     		.2byte	0x2
 5232 05d6 30       		.byte	0x30
 5233 05d7 9F       		.byte	0x9f
 5234 05d8 1E000000 		.4byte	.LVL107
 5235 05dc 20000000 		.4byte	.LVL108
 5236 05e0 0100     		.2byte	0x1
 5237 05e2 53       		.byte	0x53
 5238 05e3 20000000 		.4byte	.LVL108
 5239 05e7 24000000 		.4byte	.LVL109
 5240 05eb 0200     		.2byte	0x2
 5241 05ed 30       		.byte	0x30
 5242 05ee 9F       		.byte	0x9f
 5243 05ef 24000000 		.4byte	.LVL109
 5244 05f3 DC000000 		.4byte	.LVL130
 5245 05f7 0100     		.2byte	0x1
 5246 05f9 58       		.byte	0x58
 5247 05fa 00000000 		.4byte	0
 5248 05fe 00000000 		.4byte	0
 5249              	.LLST39:
 5250 0602 2A000000 		.4byte	.LVL110
 5251 0606 38000000 		.4byte	.LVL111
 5252 060a 0100     		.2byte	0x1
 5253 060c 53       		.byte	0x53
 5254 060d 38000000 		.4byte	.LVL111
 5255 0611 48000000 		.4byte	.LVL113
 5256 0615 0100     		.2byte	0x1
 5257 0617 5C       		.byte	0x5c
 5258 0618 48000000 		.4byte	.LVL113
 5259 061c 50000000 		.4byte	.LVL115
 5260 0620 0100     		.2byte	0x1
 5261 0622 53       		.byte	0x53
 5262 0623 50000000 		.4byte	.LVL115
 5263 0627 60000000 		.4byte	.LVL117
 5264 062b 0100     		.2byte	0x1
 5265 062d 5C       		.byte	0x5c
 5266 062e 60000000 		.4byte	.LVL117
 5267 0632 62000000 		.4byte	.LVL118
 5268 0636 0100     		.2byte	0x1
 5269 0638 53       		.byte	0x53
 5270 0639 62000000 		.4byte	.LVL118
 5271 063d C9000000 		.4byte	.LVL123-1
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 145


 5272 0641 0100     		.2byte	0x1
 5273 0643 5C       		.byte	0x5c
 5274 0644 C9000000 		.4byte	.LVL123-1
 5275 0648 CC000000 		.4byte	.LVL124
 5276 064c 0300     		.2byte	0x3
 5277 064e 74       		.byte	0x74
 5278 064f 01       		.sleb128 1
 5279 0650 9F       		.byte	0x9f
 5280 0651 00000000 		.4byte	0
 5281 0655 00000000 		.4byte	0
 5282              	.LLST40:
 5283 0659 C0000000 		.4byte	.LVL120
 5284 065d C6000000 		.4byte	.LVL122
 5285 0661 0100     		.2byte	0x1
 5286 0663 50       		.byte	0x50
 5287 0664 C6000000 		.4byte	.LVL122
 5288 0668 C9000000 		.4byte	.LVL123-1
 5289 066c 0600     		.2byte	0x6
 5290 066e 72       		.byte	0x72
 5291 066f 00       		.sleb128 0
 5292 0670 75       		.byte	0x75
 5293 0671 00       		.sleb128 0
 5294 0672 1C       		.byte	0x1c
 5295 0673 9F       		.byte	0x9f
 5296 0674 00000000 		.4byte	0
 5297 0678 00000000 		.4byte	0
 5298              	.LLST41:
 5299 067c C4000000 		.4byte	.LVL121
 5300 0680 C9000000 		.4byte	.LVL123-1
 5301 0684 0100     		.2byte	0x1
 5302 0686 51       		.byte	0x51
 5303 0687 CE000000 		.4byte	.LVL125
 5304 068b D8000000 		.4byte	.LVL127
 5305 068f 0100     		.2byte	0x1
 5306 0691 50       		.byte	0x50
 5307 0692 D8000000 		.4byte	.LVL127
 5308 0696 DA000000 		.4byte	.LVL128
 5309 069a 0500     		.2byte	0x5
 5310 069c 70       		.byte	0x70
 5311 069d 80827E   		.sleb128 -32512
 5312 06a0 9F       		.byte	0x9f
 5313 06a1 00000000 		.4byte	0
 5314 06a5 00000000 		.4byte	0
 5315              	.LLST42:
 5316 06a9 14000000 		.4byte	.LVL106
 5317 06ad 52000000 		.4byte	.LVL116
 5318 06b1 0100     		.2byte	0x1
 5319 06b3 51       		.byte	0x51
 5320 06b4 60000000 		.4byte	.LVL117
 5321 06b8 72000000 		.4byte	.LVL119
 5322 06bc 0100     		.2byte	0x1
 5323 06be 51       		.byte	0x51
 5324 06bf 00000000 		.4byte	0
 5325 06c3 00000000 		.4byte	0
 5326              	.LLST43:
 5327 06c7 00000000 		.4byte	.LVL131
 5328 06cb 0C000000 		.4byte	.LVL133
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 146


 5329 06cf 0100     		.2byte	0x1
 5330 06d1 50       		.byte	0x50
 5331 06d2 0C000000 		.4byte	.LVL133
 5332 06d6 2E000000 		.4byte	.LVL138
 5333 06da 0100     		.2byte	0x1
 5334 06dc 54       		.byte	0x54
 5335 06dd 2E000000 		.4byte	.LVL138
 5336 06e1 3C000000 		.4byte	.LFE65
 5337 06e5 0400     		.2byte	0x4
 5338 06e7 F3       		.byte	0xf3
 5339 06e8 01       		.uleb128 0x1
 5340 06e9 50       		.byte	0x50
 5341 06ea 9F       		.byte	0x9f
 5342 06eb 00000000 		.4byte	0
 5343 06ef 00000000 		.4byte	0
 5344              	.LLST44:
 5345 06f3 12000000 		.4byte	.LVL134
 5346 06f7 27000000 		.4byte	.LVL135-1
 5347 06fb 0100     		.2byte	0x1
 5348 06fd 50       		.byte	0x50
 5349 06fe 2A000000 		.4byte	.LVL136
 5350 0702 2C000000 		.4byte	.LVL137
 5351 0706 0100     		.2byte	0x1
 5352 0708 50       		.byte	0x50
 5353 0709 00000000 		.4byte	0
 5354 070d 00000000 		.4byte	0
 5355              	.LLST45:
 5356 0711 28000000 		.4byte	.LVL135
 5357 0715 2A000000 		.4byte	.LVL136
 5358 0719 0100     		.2byte	0x1
 5359 071b 50       		.byte	0x50
 5360 071c 2C000000 		.4byte	.LVL137
 5361 0720 3C000000 		.4byte	.LFE65
 5362 0724 0100     		.2byte	0x1
 5363 0726 50       		.byte	0x50
 5364 0727 00000000 		.4byte	0
 5365 072b 00000000 		.4byte	0
 5366              	.LLST46:
 5367 072f 00000000 		.4byte	.LVL139
 5368 0733 08000000 		.4byte	.LVL140
 5369 0737 0100     		.2byte	0x1
 5370 0739 50       		.byte	0x50
 5371 073a 08000000 		.4byte	.LVL140
 5372 073e 0A000000 		.4byte	.LVL141
 5373 0742 0400     		.2byte	0x4
 5374 0744 F3       		.byte	0xf3
 5375 0745 01       		.uleb128 0x1
 5376 0746 50       		.byte	0x50
 5377 0747 9F       		.byte	0x9f
 5378 0748 0A000000 		.4byte	.LVL141
 5379 074c 1A000000 		.4byte	.LVL143
 5380 0750 0100     		.2byte	0x1
 5381 0752 50       		.byte	0x50
 5382 0753 00000000 		.4byte	0
 5383 0757 00000000 		.4byte	0
 5384              	.LLST47:
 5385 075b 00000000 		.4byte	.LVL139
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 147


 5386 075f 0A000000 		.4byte	.LVL141
 5387 0763 0100     		.2byte	0x1
 5388 0765 51       		.byte	0x51
 5389 0766 0A000000 		.4byte	.LVL141
 5390 076a 1C000000 		.4byte	.LFE66
 5391 076e 0100     		.2byte	0x1
 5392 0770 51       		.byte	0x51
 5393 0771 00000000 		.4byte	0
 5394 0775 00000000 		.4byte	0
 5395              	.LLST48:
 5396 0779 00000000 		.4byte	.LVL144
 5397 077d 02000000 		.4byte	.LVL145
 5398 0781 0100     		.2byte	0x1
 5399 0783 50       		.byte	0x50
 5400 0784 02000000 		.4byte	.LVL145
 5401 0788 0A000000 		.4byte	.LFE67
 5402 078c 0400     		.2byte	0x4
 5403 078e F3       		.byte	0xf3
 5404 078f 01       		.uleb128 0x1
 5405 0790 50       		.byte	0x50
 5406 0791 9F       		.byte	0x9f
 5407 0792 00000000 		.4byte	0
 5408 0796 00000000 		.4byte	0
 5409              	.LLST49:
 5410 079a 00000000 		.4byte	.LVL144
 5411 079e 04000000 		.4byte	.LVL146
 5412 07a2 0100     		.2byte	0x1
 5413 07a4 51       		.byte	0x51
 5414 07a5 04000000 		.4byte	.LVL146
 5415 07a9 0A000000 		.4byte	.LFE67
 5416 07ad 0400     		.2byte	0x4
 5417 07af F3       		.byte	0xf3
 5418 07b0 01       		.uleb128 0x1
 5419 07b1 51       		.byte	0x51
 5420 07b2 9F       		.byte	0x9f
 5421 07b3 00000000 		.4byte	0
 5422 07b7 00000000 		.4byte	0
 5423              	.LLST50:
 5424 07bb 02000000 		.4byte	.LVL145
 5425 07bf 06000000 		.4byte	.LVL147
 5426 07c3 0100     		.2byte	0x1
 5427 07c5 50       		.byte	0x50
 5428 07c6 06000000 		.4byte	.LVL147
 5429 07ca 08000000 		.4byte	.LVL148
 5430 07ce 0500     		.2byte	0x5
 5431 07d0 70       		.byte	0x70
 5432 07d1 00       		.sleb128 0
 5433 07d2 32       		.byte	0x32
 5434 07d3 25       		.byte	0x25
 5435 07d4 9F       		.byte	0x9f
 5436 07d5 08000000 		.4byte	.LVL148
 5437 07d9 0A000000 		.4byte	.LFE67
 5438 07dd 0100     		.2byte	0x1
 5439 07df 50       		.byte	0x50
 5440 07e0 00000000 		.4byte	0
 5441 07e4 00000000 		.4byte	0
 5442              	.LLST51:
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 148


 5443 07e8 00000000 		.4byte	.LVL149
 5444 07ec 2A000000 		.4byte	.LVL153
 5445 07f0 0100     		.2byte	0x1
 5446 07f2 50       		.byte	0x50
 5447 07f3 2A000000 		.4byte	.LVL153
 5448 07f7 D2000000 		.4byte	.LVL170
 5449 07fb 0100     		.2byte	0x1
 5450 07fd 54       		.byte	0x54
 5451 07fe D2000000 		.4byte	.LVL170
 5452 0802 D8000000 		.4byte	.LVL171
 5453 0806 0400     		.2byte	0x4
 5454 0808 F3       		.byte	0xf3
 5455 0809 01       		.uleb128 0x1
 5456 080a 50       		.byte	0x50
 5457 080b 9F       		.byte	0x9f
 5458 080c D8000000 		.4byte	.LVL171
 5459 0810 DC000000 		.4byte	.LVL173
 5460 0814 0100     		.2byte	0x1
 5461 0816 54       		.byte	0x54
 5462 0817 DC000000 		.4byte	.LVL173
 5463 081b E0000000 		.4byte	.LVL174
 5464 081f 0400     		.2byte	0x4
 5465 0821 F3       		.byte	0xf3
 5466 0822 01       		.uleb128 0x1
 5467 0823 50       		.byte	0x50
 5468 0824 9F       		.byte	0x9f
 5469 0825 E0000000 		.4byte	.LVL174
 5470 0829 E4000000 		.4byte	.LVL175
 5471 082d 0100     		.2byte	0x1
 5472 082f 54       		.byte	0x54
 5473 0830 E4000000 		.4byte	.LVL175
 5474 0834 14010000 		.4byte	.LFE39
 5475 0838 0400     		.2byte	0x4
 5476 083a F3       		.byte	0xf3
 5477 083b 01       		.uleb128 0x1
 5478 083c 50       		.byte	0x50
 5479 083d 9F       		.byte	0x9f
 5480 083e 00000000 		.4byte	0
 5481 0842 00000000 		.4byte	0
 5482              	.LLST52:
 5483 0846 A6000000 		.4byte	.LVL163
 5484 084a B0000000 		.4byte	.LVL165
 5485 084e 0100     		.2byte	0x1
 5486 0850 50       		.byte	0x50
 5487 0851 B0000000 		.4byte	.LVL165
 5488 0855 B2000000 		.4byte	.LVL166
 5489 0859 0100     		.2byte	0x1
 5490 085b 55       		.byte	0x55
 5491 085c B2000000 		.4byte	.LVL166
 5492 0860 BE000000 		.4byte	.LVL167
 5493 0864 0100     		.2byte	0x1
 5494 0866 53       		.byte	0x53
 5495 0867 00000000 		.4byte	0
 5496 086b 00000000 		.4byte	0
 5497              	.LLST53:
 5498 086f 52000000 		.4byte	.LVL158
 5499 0873 58000000 		.4byte	.LVL159
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 149


 5500 0877 0200     		.2byte	0x2
 5501 0879 31       		.byte	0x31
 5502 087a 9F       		.byte	0x9f
 5503 087b 5C000000 		.4byte	.LVL160
 5504 087f 60000000 		.4byte	.LVL161
 5505 0883 0200     		.2byte	0x2
 5506 0885 30       		.byte	0x30
 5507 0886 9F       		.byte	0x9f
 5508 0887 60000000 		.4byte	.LVL161
 5509 088b CA000000 		.4byte	.LVL168
 5510 088f 0100     		.2byte	0x1
 5511 0891 59       		.byte	0x59
 5512 0892 CA000000 		.4byte	.LVL168
 5513 0896 D0000000 		.4byte	.LVL169
 5514 089a 0100     		.2byte	0x1
 5515 089c 53       		.byte	0x53
 5516 089d D0000000 		.4byte	.LVL169
 5517 08a1 D8000000 		.4byte	.LVL171
 5518 08a5 0100     		.2byte	0x1
 5519 08a7 59       		.byte	0x59
 5520 08a8 D8000000 		.4byte	.LVL171
 5521 08ac DA000000 		.4byte	.LVL172
 5522 08b0 0100     		.2byte	0x1
 5523 08b2 53       		.byte	0x53
 5524 08b3 DA000000 		.4byte	.LVL172
 5525 08b7 E8000000 		.4byte	.LVL178
 5526 08bb 0100     		.2byte	0x1
 5527 08bd 59       		.byte	0x59
 5528 08be 00000000 		.4byte	0
 5529 08c2 00000000 		.4byte	0
 5530              	.LLST54:
 5531 08c6 52000000 		.4byte	.LVL158
 5532 08ca 58000000 		.4byte	.LVL159
 5533 08ce 0100     		.2byte	0x1
 5534 08d0 56       		.byte	0x56
 5535 08d1 5C000000 		.4byte	.LVL160
 5536 08d5 E8000000 		.4byte	.LVL176
 5537 08d9 0100     		.2byte	0x1
 5538 08db 56       		.byte	0x56
 5539 08dc 00000000 		.4byte	0
 5540 08e0 00000000 		.4byte	0
 5541              	.LLST55:
 5542 08e4 1A000000 		.4byte	.LVL151
 5543 08e8 1C000000 		.4byte	.LVL152
 5544 08ec 0500     		.2byte	0x5
 5545 08ee 73       		.byte	0x73
 5546 08ef 00       		.sleb128 0
 5547 08f0 72       		.byte	0x72
 5548 08f1 00       		.sleb128 0
 5549 08f2 22       		.byte	0x22
 5550 08f3 1C000000 		.4byte	.LVL152
 5551 08f7 2D000000 		.4byte	.LVL154-1
 5552 08fb 0200     		.2byte	0x2
 5553 08fd 72       		.byte	0x72
 5554 08fe 00       		.sleb128 0
 5555 08ff 2D000000 		.4byte	.LVL154-1
 5556 0903 30000000 		.4byte	.LVL155
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 150


 5557 0907 0100     		.2byte	0x1
 5558 0909 55       		.byte	0x55
 5559 090a 30000000 		.4byte	.LVL155
 5560 090e 34000000 		.4byte	.LVL156
 5561 0912 0100     		.2byte	0x1
 5562 0914 50       		.byte	0x50
 5563 0915 34000000 		.4byte	.LVL156
 5564 0919 B0000000 		.4byte	.LVL165
 5565 091d 0100     		.2byte	0x1
 5566 091f 55       		.byte	0x55
 5567 0920 00000000 		.4byte	0
 5568 0924 00000000 		.4byte	0
 5569              	.LLST56:
 5570 0928 14000000 		.4byte	.LVL150
 5571 092c 2D000000 		.4byte	.LVL154-1
 5572 0930 0800     		.2byte	0x8
 5573 0932 77       		.byte	0x77
 5574 0933 00       		.sleb128 0
 5575 0934 03       		.byte	0x3
 5576 0935 00000000 		.4byte	Slider_noiseThreshold
 5577 0939 22       		.byte	0x22
 5578 093a 2D000000 		.4byte	.LVL154-1
 5579 093e E8000000 		.4byte	.LVL177
 5580 0942 0100     		.2byte	0x1
 5581 0944 58       		.byte	0x58
 5582 0945 00000000 		.4byte	0
 5583 0949 00000000 		.4byte	0
 5584              	.LLST57:
 5585 094d 00000000 		.4byte	.LVL179
 5586 0951 07000000 		.4byte	.LVL180-1
 5587 0955 0100     		.2byte	0x1
 5588 0957 50       		.byte	0x50
 5589 0958 07000000 		.4byte	.LVL180-1
 5590 095c 0E000000 		.4byte	.LVL182
 5591 0960 0100     		.2byte	0x1
 5592 0962 54       		.byte	0x54
 5593 0963 0E000000 		.4byte	.LVL182
 5594 0967 10000000 		.4byte	.LFE40
 5595 096b 0400     		.2byte	0x4
 5596 096d F3       		.byte	0xf3
 5597 096e 01       		.uleb128 0x1
 5598 096f 50       		.byte	0x50
 5599 0970 9F       		.byte	0x9f
 5600 0971 00000000 		.4byte	0
 5601 0975 00000000 		.4byte	0
 5602              	.LLST58:
 5603 0979 02000000 		.4byte	.LVL183
 5604 097d 08000000 		.4byte	.LVL184
 5605 0981 0200     		.2byte	0x2
 5606 0983 30       		.byte	0x30
 5607 0984 9F       		.byte	0x9f
 5608 0985 08000000 		.4byte	.LVL184
 5609 0989 20000000 		.4byte	.LVL189
 5610 098d 0100     		.2byte	0x1
 5611 098f 54       		.byte	0x54
 5612 0990 00000000 		.4byte	0
 5613 0994 00000000 		.4byte	0
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 151


 5614              	.LLST59:
 5615 0998 10000000 		.4byte	.LVL185
 5616 099c 16000000 		.4byte	.LVL186
 5617 09a0 0100     		.2byte	0x1
 5618 09a2 50       		.byte	0x50
 5619 09a3 00000000 		.4byte	0
 5620 09a7 00000000 		.4byte	0
 5621              	.LLST60:
 5622 09ab 00000000 		.4byte	.LVL190
 5623 09af 08000000 		.4byte	.LVL192
 5624 09b3 0100     		.2byte	0x1
 5625 09b5 50       		.byte	0x50
 5626 09b6 08000000 		.4byte	.LVL192
 5627 09ba 28000000 		.4byte	.LFE42
 5628 09be 0400     		.2byte	0x4
 5629 09c0 F3       		.byte	0xf3
 5630 09c1 01       		.uleb128 0x1
 5631 09c2 50       		.byte	0x50
 5632 09c3 9F       		.byte	0x9f
 5633 09c4 00000000 		.4byte	0
 5634 09c8 00000000 		.4byte	0
 5635              	.LLST61:
 5636 09cc 02000000 		.4byte	.LVL191
 5637 09d0 08000000 		.4byte	.LVL192
 5638 09d4 0200     		.2byte	0x2
 5639 09d6 30       		.byte	0x30
 5640 09d7 9F       		.byte	0x9f
 5641 09d8 08000000 		.4byte	.LVL192
 5642 09dc 20000000 		.4byte	.LVL197
 5643 09e0 0100     		.2byte	0x1
 5644 09e2 54       		.byte	0x54
 5645 09e3 00000000 		.4byte	0
 5646 09e7 00000000 		.4byte	0
 5647              	.LLST62:
 5648 09eb 10000000 		.4byte	.LVL193
 5649 09ef 16000000 		.4byte	.LVL194
 5650 09f3 0100     		.2byte	0x1
 5651 09f5 50       		.byte	0x50
 5652 09f6 00000000 		.4byte	0
 5653 09fa 00000000 		.4byte	0
 5654              	.LLST63:
 5655 09fe 00000000 		.4byte	.LVL198
 5656 0a02 12000000 		.4byte	.LVL201
 5657 0a06 0100     		.2byte	0x1
 5658 0a08 50       		.byte	0x50
 5659 0a09 12000000 		.4byte	.LVL201
 5660 0a0d 40000000 		.4byte	.LVL207
 5661 0a11 0100     		.2byte	0x1
 5662 0a13 54       		.byte	0x54
 5663 0a14 40000000 		.4byte	.LVL207
 5664 0a18 4C000000 		.4byte	.LVL210
 5665 0a1c 0400     		.2byte	0x4
 5666 0a1e F3       		.byte	0xf3
 5667 0a1f 01       		.uleb128 0x1
 5668 0a20 50       		.byte	0x50
 5669 0a21 9F       		.byte	0x9f
 5670 0a22 4C000000 		.4byte	.LVL210
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 152


 5671 0a26 4E000000 		.4byte	.LVL211
 5672 0a2a 0100     		.2byte	0x1
 5673 0a2c 54       		.byte	0x54
 5674 0a2d 4E000000 		.4byte	.LVL211
 5675 0a31 5E000000 		.4byte	.LVL216
 5676 0a35 0400     		.2byte	0x4
 5677 0a37 F3       		.byte	0xf3
 5678 0a38 01       		.uleb128 0x1
 5679 0a39 50       		.byte	0x50
 5680 0a3a 9F       		.byte	0x9f
 5681 0a3b 5E000000 		.4byte	.LVL216
 5682 0a3f 68000000 		.4byte	.LVL218
 5683 0a43 0100     		.2byte	0x1
 5684 0a45 54       		.byte	0x54
 5685 0a46 68000000 		.4byte	.LVL218
 5686 0a4a 7C000000 		.4byte	.LFE64
 5687 0a4e 0400     		.2byte	0x4
 5688 0a50 F3       		.byte	0xf3
 5689 0a51 01       		.uleb128 0x1
 5690 0a52 50       		.byte	0x50
 5691 0a53 9F       		.byte	0x9f
 5692 0a54 00000000 		.4byte	0
 5693 0a58 00000000 		.4byte	0
 5694              	.LLST64:
 5695 0a5c 34000000 		.4byte	.LVL205
 5696 0a60 36000000 		.4byte	.LVL206
 5697 0a64 0100     		.2byte	0x1
 5698 0a66 52       		.byte	0x52
 5699 0a67 36000000 		.4byte	.LVL206
 5700 0a6b 42000000 		.4byte	.LVL208
 5701 0a6f 0100     		.2byte	0x1
 5702 0a71 51       		.byte	0x51
 5703 0a72 42000000 		.4byte	.LVL208
 5704 0a76 46000000 		.4byte	.LVL209
 5705 0a7a 0300     		.2byte	0x3
 5706 0a7c 75       		.byte	0x75
 5707 0a7d 01       		.sleb128 1
 5708 0a7e 9F       		.byte	0x9f
 5709 0a7f 4C000000 		.4byte	.LVL210
 5710 0a83 52000000 		.4byte	.LVL212
 5711 0a87 0100     		.2byte	0x1
 5712 0a89 51       		.byte	0x51
 5713 0a8a 52000000 		.4byte	.LVL212
 5714 0a8e 5E000000 		.4byte	.LVL216
 5715 0a92 0300     		.2byte	0x3
 5716 0a94 75       		.byte	0x75
 5717 0a95 01       		.sleb128 1
 5718 0a96 9F       		.byte	0x9f
 5719 0a97 00000000 		.4byte	0
 5720 0a9b 00000000 		.4byte	0
 5721              	.LLST65:
 5722 0a9f 0C000000 		.4byte	.LVL199
 5723 0aa3 0E000000 		.4byte	.LVL200
 5724 0aa7 0200     		.2byte	0x2
 5725 0aa9 73       		.byte	0x73
 5726 0aaa 0C       		.sleb128 12
 5727 0aab 0E000000 		.4byte	.LVL200
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 153


 5728 0aaf 12000000 		.4byte	.LVL201
 5729 0ab3 0800     		.2byte	0x8
 5730 0ab5 70       		.byte	0x70
 5731 0ab6 00       		.sleb128 0
 5732 0ab7 03       		.byte	0x3
 5733 0ab8 0C000000 		.4byte	.LANCHOR1+12
 5734 0abc 22       		.byte	0x22
 5735 0abd 12000000 		.4byte	.LVL201
 5736 0ac1 17000000 		.4byte	.LVL202-1
 5737 0ac5 0800     		.2byte	0x8
 5738 0ac7 74       		.byte	0x74
 5739 0ac8 00       		.sleb128 0
 5740 0ac9 03       		.byte	0x3
 5741 0aca 0C000000 		.4byte	.LANCHOR1+12
 5742 0ace 22       		.byte	0x22
 5743 0acf 17000000 		.4byte	.LVL202-1
 5744 0ad3 46000000 		.4byte	.LVL209
 5745 0ad7 0100     		.2byte	0x1
 5746 0ad9 55       		.byte	0x55
 5747 0ada 4C000000 		.4byte	.LVL210
 5748 0ade 62000000 		.4byte	.LVL217
 5749 0ae2 0100     		.2byte	0x1
 5750 0ae4 55       		.byte	0x55
 5751 0ae5 00000000 		.4byte	0
 5752 0ae9 00000000 		.4byte	0
 5753              	.LLST66:
 5754 0aed 18000000 		.4byte	.LVL202
 5755 0af1 2D000000 		.4byte	.LVL203-1
 5756 0af5 0100     		.2byte	0x1
 5757 0af7 50       		.byte	0x50
 5758 0af8 5E000000 		.4byte	.LVL216
 5759 0afc 68000000 		.4byte	.LVL218
 5760 0b00 0100     		.2byte	0x1
 5761 0b02 50       		.byte	0x50
 5762 0b03 00000000 		.4byte	0
 5763 0b07 00000000 		.4byte	0
 5764              	.LLST67:
 5765 0b0b 30000000 		.4byte	.LVL204
 5766 0b0f 54000000 		.4byte	.LVL213
 5767 0b13 0100     		.2byte	0x1
 5768 0b15 50       		.byte	0x50
 5769 0b16 54000000 		.4byte	.LVL213
 5770 0b1a 57000000 		.4byte	.LVL214-1
 5771 0b1e 0100     		.2byte	0x1
 5772 0b20 53       		.byte	0x53
 5773 0b21 5A000000 		.4byte	.LVL215
 5774 0b25 5E000000 		.4byte	.LVL216
 5775 0b29 0100     		.2byte	0x1
 5776 0b2b 50       		.byte	0x50
 5777 0b2c 5E000000 		.4byte	.LVL216
 5778 0b30 68000000 		.4byte	.LVL218
 5779 0b34 0300     		.2byte	0x3
 5780 0b36 09       		.byte	0x9
 5781 0b37 FF       		.byte	0xff
 5782 0b38 9F       		.byte	0x9f
 5783 0b39 68000000 		.4byte	.LVL218
 5784 0b3d 7C000000 		.4byte	.LFE64
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 154


 5785 0b41 0100     		.2byte	0x1
 5786 0b43 50       		.byte	0x50
 5787 0b44 00000000 		.4byte	0
 5788 0b48 00000000 		.4byte	0
 5789              	.LLST68:
 5790 0b4c 00000000 		.4byte	.LVL219
 5791 0b50 04000000 		.4byte	.LVL220
 5792 0b54 0100     		.2byte	0x1
 5793 0b56 50       		.byte	0x50
 5794 0b57 04000000 		.4byte	.LVL220
 5795 0b5b 0C000000 		.4byte	.LFE68
 5796 0b5f 0400     		.2byte	0x4
 5797 0b61 F3       		.byte	0xf3
 5798 0b62 01       		.uleb128 0x1
 5799 0b63 50       		.byte	0x50
 5800 0b64 9F       		.byte	0x9f
 5801 0b65 00000000 		.4byte	0
 5802 0b69 00000000 		.4byte	0
 5803              	.LLST69:
 5804 0b6d 00000000 		.4byte	.LVL221
 5805 0b71 04000000 		.4byte	.LVL222
 5806 0b75 0100     		.2byte	0x1
 5807 0b77 50       		.byte	0x50
 5808 0b78 04000000 		.4byte	.LVL222
 5809 0b7c 0C000000 		.4byte	.LFE69
 5810 0b80 0400     		.2byte	0x4
 5811 0b82 F3       		.byte	0xf3
 5812 0b83 01       		.uleb128 0x1
 5813 0b84 50       		.byte	0x50
 5814 0b85 9F       		.byte	0x9f
 5815 0b86 00000000 		.4byte	0
 5816 0b8a 00000000 		.4byte	0
 5817              	.LLST70:
 5818 0b8e 00000000 		.4byte	.LVL223
 5819 0b92 04000000 		.4byte	.LVL224
 5820 0b96 0100     		.2byte	0x1
 5821 0b98 50       		.byte	0x50
 5822 0b99 04000000 		.4byte	.LVL224
 5823 0b9d 0C000000 		.4byte	.LFE70
 5824 0ba1 0400     		.2byte	0x4
 5825 0ba3 F3       		.byte	0xf3
 5826 0ba4 01       		.uleb128 0x1
 5827 0ba5 50       		.byte	0x50
 5828 0ba6 9F       		.byte	0x9f
 5829 0ba7 00000000 		.4byte	0
 5830 0bab 00000000 		.4byte	0
 5831              		.section	.debug_aranges,"",%progbits
 5832 0000 44010000 		.4byte	0x144
 5833 0004 0200     		.2byte	0x2
 5834 0006 00000000 		.4byte	.Ldebug_info0
 5835 000a 04       		.byte	0x4
 5836 000b 00       		.byte	0
 5837 000c 0000     		.2byte	0
 5838 000e 0000     		.2byte	0
 5839 0010 00000000 		.4byte	.LFB35
 5840 0014 24000000 		.4byte	.LFE35-.LFB35
 5841 0018 00000000 		.4byte	.LFB36
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 155


 5842 001c 18000000 		.4byte	.LFE36-.LFB36
 5843 0020 00000000 		.4byte	.LFB37
 5844 0024 14000000 		.4byte	.LFE37-.LFB37
 5845 0028 00000000 		.4byte	.LFB38
 5846 002c 34000000 		.4byte	.LFE38-.LFB38
 5847 0030 00000000 		.4byte	.LFB43
 5848 0034 0C000000 		.4byte	.LFE43-.LFB43
 5849 0038 00000000 		.4byte	.LFB44
 5850 003c 0C000000 		.4byte	.LFE44-.LFB44
 5851 0040 00000000 		.4byte	.LFB45
 5852 0044 0C000000 		.4byte	.LFE45-.LFB45
 5853 0048 00000000 		.4byte	.LFB46
 5854 004c 0C000000 		.4byte	.LFE46-.LFB46
 5855 0050 00000000 		.4byte	.LFB47
 5856 0054 0C000000 		.4byte	.LFE47-.LFB47
 5857 0058 00000000 		.4byte	.LFB48
 5858 005c 0C000000 		.4byte	.LFE48-.LFB48
 5859 0060 00000000 		.4byte	.LFB49
 5860 0064 0C000000 		.4byte	.LFE49-.LFB49
 5861 0068 00000000 		.4byte	.LFB50
 5862 006c 0C000000 		.4byte	.LFE50-.LFB50
 5863 0070 00000000 		.4byte	.LFB51
 5864 0074 0C000000 		.4byte	.LFE51-.LFB51
 5865 0078 00000000 		.4byte	.LFB52
 5866 007c 0C000000 		.4byte	.LFE52-.LFB52
 5867 0080 00000000 		.4byte	.LFB53
 5868 0084 0C000000 		.4byte	.LFE53-.LFB53
 5869 0088 00000000 		.4byte	.LFB54
 5870 008c 0C000000 		.4byte	.LFE54-.LFB54
 5871 0090 00000000 		.4byte	.LFB55
 5872 0094 0C000000 		.4byte	.LFE55-.LFB55
 5873 0098 00000000 		.4byte	.LFB56
 5874 009c 0C000000 		.4byte	.LFE56-.LFB56
 5875 00a0 00000000 		.4byte	.LFB57
 5876 00a4 9C000000 		.4byte	.LFE57-.LFB57
 5877 00a8 00000000 		.4byte	.LFB58
 5878 00ac 1E000000 		.4byte	.LFE58-.LFB58
 5879 00b0 00000000 		.4byte	.LFB59
 5880 00b4 20000000 		.4byte	.LFE59-.LFB59
 5881 00b8 00000000 		.4byte	.LFB60
 5882 00bc 20000000 		.4byte	.LFE60-.LFB60
 5883 00c0 00000000 		.4byte	.LFB61
 5884 00c4 20000000 		.4byte	.LFE61-.LFB61
 5885 00c8 00000000 		.4byte	.LFB62
 5886 00cc 2C000000 		.4byte	.LFE62-.LFB62
 5887 00d0 00000000 		.4byte	.LFB63
 5888 00d4 E8000000 		.4byte	.LFE63-.LFB63
 5889 00d8 00000000 		.4byte	.LFB65
 5890 00dc 3C000000 		.4byte	.LFE65-.LFB65
 5891 00e0 00000000 		.4byte	.LFB66
 5892 00e4 1C000000 		.4byte	.LFE66-.LFB66
 5893 00e8 00000000 		.4byte	.LFB67
 5894 00ec 0A000000 		.4byte	.LFE67-.LFB67
 5895 00f0 00000000 		.4byte	.LFB39
 5896 00f4 14010000 		.4byte	.LFE39-.LFB39
 5897 00f8 00000000 		.4byte	.LFB40
 5898 00fc 10000000 		.4byte	.LFE40-.LFB40
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 156


 5899 0100 00000000 		.4byte	.LFB41
 5900 0104 28000000 		.4byte	.LFE41-.LFB41
 5901 0108 00000000 		.4byte	.LFB42
 5902 010c 28000000 		.4byte	.LFE42-.LFB42
 5903 0110 00000000 		.4byte	.LFB64
 5904 0114 7C000000 		.4byte	.LFE64-.LFB64
 5905 0118 00000000 		.4byte	.LFB68
 5906 011c 0C000000 		.4byte	.LFE68-.LFB68
 5907 0120 00000000 		.4byte	.LFB69
 5908 0124 0C000000 		.4byte	.LFE69-.LFB69
 5909 0128 00000000 		.4byte	.LFB70
 5910 012c 0C000000 		.4byte	.LFE70-.LFB70
 5911 0130 00000000 		.4byte	.LFB71
 5912 0134 0C000000 		.4byte	.LFE71-.LFB71
 5913 0138 00000000 		.4byte	.LFB72
 5914 013c 0C000000 		.4byte	.LFE72-.LFB72
 5915 0140 00000000 		.4byte	0
 5916 0144 00000000 		.4byte	0
 5917              		.section	.debug_ranges,"",%progbits
 5918              	.Ldebug_ranges0:
 5919 0000 00000000 		.4byte	.LFB35
 5920 0004 24000000 		.4byte	.LFE35
 5921 0008 00000000 		.4byte	.LFB36
 5922 000c 18000000 		.4byte	.LFE36
 5923 0010 00000000 		.4byte	.LFB37
 5924 0014 14000000 		.4byte	.LFE37
 5925 0018 00000000 		.4byte	.LFB38
 5926 001c 34000000 		.4byte	.LFE38
 5927 0020 00000000 		.4byte	.LFB43
 5928 0024 0C000000 		.4byte	.LFE43
 5929 0028 00000000 		.4byte	.LFB44
 5930 002c 0C000000 		.4byte	.LFE44
 5931 0030 00000000 		.4byte	.LFB45
 5932 0034 0C000000 		.4byte	.LFE45
 5933 0038 00000000 		.4byte	.LFB46
 5934 003c 0C000000 		.4byte	.LFE46
 5935 0040 00000000 		.4byte	.LFB47
 5936 0044 0C000000 		.4byte	.LFE47
 5937 0048 00000000 		.4byte	.LFB48
 5938 004c 0C000000 		.4byte	.LFE48
 5939 0050 00000000 		.4byte	.LFB49
 5940 0054 0C000000 		.4byte	.LFE49
 5941 0058 00000000 		.4byte	.LFB50
 5942 005c 0C000000 		.4byte	.LFE50
 5943 0060 00000000 		.4byte	.LFB51
 5944 0064 0C000000 		.4byte	.LFE51
 5945 0068 00000000 		.4byte	.LFB52
 5946 006c 0C000000 		.4byte	.LFE52
 5947 0070 00000000 		.4byte	.LFB53
 5948 0074 0C000000 		.4byte	.LFE53
 5949 0078 00000000 		.4byte	.LFB54
 5950 007c 0C000000 		.4byte	.LFE54
 5951 0080 00000000 		.4byte	.LFB55
 5952 0084 0C000000 		.4byte	.LFE55
 5953 0088 00000000 		.4byte	.LFB56
 5954 008c 0C000000 		.4byte	.LFE56
 5955 0090 00000000 		.4byte	.LFB57
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 157


 5956 0094 9C000000 		.4byte	.LFE57
 5957 0098 00000000 		.4byte	.LFB58
 5958 009c 1E000000 		.4byte	.LFE58
 5959 00a0 00000000 		.4byte	.LFB59
 5960 00a4 20000000 		.4byte	.LFE59
 5961 00a8 00000000 		.4byte	.LFB60
 5962 00ac 20000000 		.4byte	.LFE60
 5963 00b0 00000000 		.4byte	.LFB61
 5964 00b4 20000000 		.4byte	.LFE61
 5965 00b8 00000000 		.4byte	.LFB62
 5966 00bc 2C000000 		.4byte	.LFE62
 5967 00c0 00000000 		.4byte	.LFB63
 5968 00c4 E8000000 		.4byte	.LFE63
 5969 00c8 00000000 		.4byte	.LFB65
 5970 00cc 3C000000 		.4byte	.LFE65
 5971 00d0 00000000 		.4byte	.LFB66
 5972 00d4 1C000000 		.4byte	.LFE66
 5973 00d8 00000000 		.4byte	.LFB67
 5974 00dc 0A000000 		.4byte	.LFE67
 5975 00e0 00000000 		.4byte	.LFB39
 5976 00e4 14010000 		.4byte	.LFE39
 5977 00e8 00000000 		.4byte	.LFB40
 5978 00ec 10000000 		.4byte	.LFE40
 5979 00f0 00000000 		.4byte	.LFB41
 5980 00f4 28000000 		.4byte	.LFE41
 5981 00f8 00000000 		.4byte	.LFB42
 5982 00fc 28000000 		.4byte	.LFE42
 5983 0100 00000000 		.4byte	.LFB64
 5984 0104 7C000000 		.4byte	.LFE64
 5985 0108 00000000 		.4byte	.LFB68
 5986 010c 0C000000 		.4byte	.LFE68
 5987 0110 00000000 		.4byte	.LFB69
 5988 0114 0C000000 		.4byte	.LFE69
 5989 0118 00000000 		.4byte	.LFB70
 5990 011c 0C000000 		.4byte	.LFE70
 5991 0120 00000000 		.4byte	.LFB71
 5992 0124 0C000000 		.4byte	.LFE71
 5993 0128 00000000 		.4byte	.LFB72
 5994 012c 0C000000 		.4byte	.LFE72
 5995 0130 00000000 		.4byte	0
 5996 0134 00000000 		.4byte	0
 5997              		.section	.debug_line,"",%progbits
 5998              	.Ldebug_line0:
 5999 0000 6A040000 		.section	.debug_str,"MS",%progbits,1
 5999      02006600 
 5999      00000201 
 5999      FB0E0D00 
 5999      01010101 
 6000              	.LASF100:
 6001 0000 536C6964 		.ascii	"Slider_UpdateEnabledBaselines\000"
 6001      65725F55 
 6001      70646174 
 6001      65456E61 
 6001      626C6564 
 6002              	.LASF111:
 6003 001e 536C6964 		.ascii	"Slider_GetDebounce\000"
 6003      65725F47 
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 158


 6003      65744465 
 6003      626F756E 
 6003      636500
 6004              	.LASF73:
 6005 0031 536C6964 		.ascii	"Slider_CheckIsAnyWidgetActive\000"
 6005      65725F43 
 6005      6865636B 
 6005      4973416E 
 6005      79576964 
 6006              	.LASF46:
 6007 004f 536C6964 		.ascii	"Slider_SetBaselineData\000"
 6007      65725F53 
 6007      65744261 
 6007      73656C69 
 6007      6E654461 
 6008              	.LASF38:
 6009 0066 706F696E 		.ascii	"pointers\000"
 6009      74657273 
 6009      00
 6010              	.LASF26:
 6011 006f 6E756D62 		.ascii	"numberOfSensors\000"
 6011      65724F66 
 6011      53656E73 
 6011      6F727300 
 6012              	.LASF128:
 6013 007f 536C6964 		.ascii	"Slider_negativeNoiseThreshold\000"
 6013      65725F6E 
 6013      65676174 
 6013      6976654E 
 6013      6F697365 
 6014              	.LASF30:
 6015 009d 70747247 		.ascii	"ptrGetBitValue\000"
 6015      65744269 
 6015      7456616C 
 6015      756500
 6016              	.LASF106:
 6017 00ac 706F7349 		.ascii	"posIndex\000"
 6017      6E646578 
 6017      00
 6018              	.LASF45:
 6019 00b5 69735365 		.ascii	"isSensorEnabled\000"
 6019      6E736F72 
 6019      456E6162 
 6019      6C656400 
 6020              	.LASF71:
 6021 00c5 6E756D4F 		.ascii	"numOfSensors\000"
 6021      6653656E 
 6021      736F7273 
 6021      00
 6022              	.LASF8:
 6023 00d2 756E7369 		.ascii	"unsigned int\000"
 6023      676E6564 
 6023      20696E74 
 6023      00
 6024              	.LASF35:
 6025 00df 746F7461 		.ascii	"totalSensorsNum\000"
 6025      6C53656E 
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 159


 6025      736F7273 
 6025      4E756D00 
 6026              	.LASF87:
 6027 00ef 536C6964 		.ascii	"Slider_centroid\000"
 6027      65725F63 
 6027      656E7472 
 6027      6F696400 
 6028              	.LASF86:
 6029 00ff 706F734E 		.ascii	"posNext\000"
 6029      65787400 
 6030              	.LASF12:
 6031 0107 696E7431 		.ascii	"int16\000"
 6031      3600
 6032              	.LASF122:
 6033 010d 536C6964 		.ascii	"Slider_sensorSignal\000"
 6033      65725F73 
 6033      656E736F 
 6033      72536967 
 6033      6E616C00 
 6034              	.LASF131:
 6035 0121 536C6964 		.ascii	"Slider_rawDataIndex\000"
 6035      65725F72 
 6035      61774461 
 6035      7461496E 
 6035      64657800 
 6036              	.LASF69:
 6037 0135 536C6964 		.ascii	"Slider_CheckIsWidgetActive\000"
 6037      65725F43 
 6037      6865636B 
 6037      49735769 
 6037      64676574 
 6038              	.LASF126:
 6039 0150 536C6964 		.ascii	"Slider_fingerThreshold\000"
 6039      65725F66 
 6039      696E6765 
 6039      72546872 
 6039      6573686F 
 6040              	.LASF138:
 6041 0167 4D656173 		.ascii	"MeasureNoiseEnvelope_P4_v2_20\000"
 6041      7572654E 
 6041      6F697365 
 6041      456E7665 
 6041      6C6F7065 
 6042              	.LASF99:
 6043 0185 536C6964 		.ascii	"Slider_UpdateSensorBaseline\000"
 6043      65725F55 
 6043      70646174 
 6043      6553656E 
 6043      736F7242 
 6044              	.LASF85:
 6045 01a1 706F7350 		.ascii	"posPrev\000"
 6045      72657600 
 6046              	.LASF40:
 6047 01a9 536C6964 		.ascii	"Slider_BaseInit\000"
 6047      65725F42 
 6047      61736549 
 6047      6E697400 
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 160


 6048              	.LASF25:
 6049 01b9 72617744 		.ascii	"rawDataIndex\000"
 6049      61746149 
 6049      6E646578 
 6049      00
 6050              	.LASF34:
 6051 01c6 746F7461 		.ascii	"totalWidgetsNum\000"
 6051      6C576964 
 6051      67657473 
 6051      4E756D00 
 6052              	.LASF90:
 6053 01d6 64656E6F 		.ascii	"denominator\000"
 6053      6D696E61 
 6053      746F7200 
 6054              	.LASF140:
 6055 01e2 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\Slider_CSHL.c\000"
 6055      6E657261 
 6055      7465645F 
 6055      536F7572 
 6055      63655C50 
 6056              	.LASF14:
 6057 0209 666C6F61 		.ascii	"float\000"
 6057      7400
 6058              	.LASF121:
 6059 020f 536C6964 		.ascii	"Slider_sensorBaselineLow\000"
 6059      65725F73 
 6059      656E736F 
 6059      72426173 
 6059      656C696E 
 6060              	.LASF50:
 6061 0228 536C6964 		.ascii	"Slider_SetDiffCountData\000"
 6061      65725F53 
 6061      65744469 
 6061      6666436F 
 6061      756E7444 
 6062              	.LASF13:
 6063 0240 696E7433 		.ascii	"int32\000"
 6063      3200
 6064              	.LASF119:
 6065 0246 536C6964 		.ascii	"Slider_widgetNumber\000"
 6065      65725F77 
 6065      69646765 
 6065      744E756D 
 6065      62657200 
 6066              	.LASF78:
 6067 025a 636F756E 		.ascii	"count\000"
 6067      7400
 6068              	.LASF24:
 6069 0260 7265736F 		.ascii	"resolutionsTbl\000"
 6069      6C757469 
 6069      6F6E7354 
 6069      626C00
 6070              	.LASF108:
 6071 026f 706F7346 		.ascii	"posFiltersMask\000"
 6071      696C7465 
 6071      72734D61 
 6071      736B00
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 161


 6072              	.LASF7:
 6073 027e 6C6F6E67 		.ascii	"long long unsigned int\000"
 6073      206C6F6E 
 6073      6720756E 
 6073      7369676E 
 6073      65642069 
 6074              	.LASF74:
 6075 0295 536C6964 		.ascii	"Slider_EnableWidget\000"
 6075      65725F45 
 6075      6E61626C 
 6075      65576964 
 6075      67657400 
 6076              	.LASF136:
 6077 02a9 536C6964 		.ascii	"Slider_ScanSensor\000"
 6077      65725F53 
 6077      63616E53 
 6077      656E736F 
 6077      7200
 6078              	.LASF53:
 6079 02bb 77696467 		.ascii	"widget\000"
 6079      657400
 6080              	.LASF51:
 6081 02c2 76616C75 		.ascii	"value\000"
 6081      6500
 6082              	.LASF118:
 6083 02c8 536C6964 		.ascii	"Slider_sensorEnableMask\000"
 6083      65725F73 
 6083      656E736F 
 6083      72456E61 
 6083      626C654D 
 6084              	.LASF96:
 6085 02e0 7369676E 		.ascii	"sign\000"
 6085      00
 6086              	.LASF77:
 6087 02e5 6F666673 		.ascii	"offset\000"
 6087      657400
 6088              	.LASF132:
 6089 02ec 536C6964 		.ascii	"Slider_numberOfSensors\000"
 6089      65725F6E 
 6089      756D6265 
 6089      724F6653 
 6089      656E736F 
 6090              	.LASF134:
 6091 0303 536C6964 		.ascii	"Slider_config\000"
 6091      65725F63 
 6091      6F6E6669 
 6091      6700
 6092              	.LASF112:
 6093 0311 536C6964 		.ascii	"Slider_EnableRawDataFilters\000"
 6093      65725F45 
 6093      6E61626C 
 6093      65526177 
 6093      44617461 
 6094              	.LASF95:
 6095 032d 63616C63 		.ascii	"calc\000"
 6095      00
 6096              	.LASF94:
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 162


 6097 0332 536C6964 		.ascii	"Slider_UpdateBaselineNoThreshold\000"
 6097      65725F55 
 6097      70646174 
 6097      65426173 
 6097      656C696E 
 6098              	.LASF29:
 6099 0353 70747252 		.ascii	"ptrReadSensorRaw\000"
 6099      65616453 
 6099      656E736F 
 6099      72526177 
 6099      00
 6100              	.LASF67:
 6101 0364 68797374 		.ascii	"hysteresis\000"
 6101      65726573 
 6101      697300
 6102              	.LASF57:
 6103 036f 536C6964 		.ascii	"Slider_SetFingerThreshold\000"
 6103      65725F53 
 6103      65744669 
 6103      6E676572 
 6103      54687265 
 6104              	.LASF98:
 6105 0389 66696C74 		.ascii	"filteredRawData\000"
 6105      65726564 
 6105      52617744 
 6105      61746100 
 6106              	.LASF102:
 6107 0399 73656E73 		.ascii	"sensorsPerWidget\000"
 6107      6F727350 
 6107      65725769 
 6107      64676574 
 6107      00
 6108              	.LASF120:
 6109 03aa 536C6964 		.ascii	"Slider_sensorBaseline\000"
 6109      65725F73 
 6109      656E736F 
 6109      72426173 
 6109      656C696E 
 6110              	.LASF139:
 6111 03c0 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 6111      4320342E 
 6111      382E3420 
 6111      32303134 
 6111      30353236 
 6112 03f3 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m0 -mthumb -g -O"
 6112      20726576 
 6112      6973696F 
 6112      6E203231 
 6112      31333538 
 6113 0426 67202D66 		.ascii	"g -ffunction-sections\000"
 6113      66756E63 
 6113      74696F6E 
 6113      2D736563 
 6113      74696F6E 
 6114              	.LASF49:
 6115 043c 536C6964 		.ascii	"Slider_GetDiffCountData\000"
 6115      65725F47 
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 163


 6115      65744469 
 6115      6666436F 
 6115      756E7444 
 6116              	.LASF105:
 6117 0454 536C6964 		.ascii	"Slider_GetCentroidPos\000"
 6117      65725F47 
 6117      65744365 
 6117      6E74726F 
 6117      6964506F 
 6118              	.LASF33:
 6119 046a 746F7461 		.ascii	"totalScanslotsNum\000"
 6119      6C536361 
 6119      6E736C6F 
 6119      74734E75 
 6119      6D00
 6120              	.LASF43:
 6121 047c 536C6964 		.ascii	"Slider_InitializeAllBaselines\000"
 6121      65725F49 
 6121      6E697469 
 6121      616C697A 
 6121      65416C6C 
 6122              	.LASF42:
 6123 049a 73656E73 		.ascii	"sensor\000"
 6123      6F7200
 6124              	.LASF36:
 6125 04a1 73656E73 		.ascii	"sensetivitySeed\000"
 6125      65746976 
 6125      69747953 
 6125      65656400 
 6126              	.LASF16:
 6127 04b1 63686172 		.ascii	"char\000"
 6127      00
 6128              	.LASF124:
 6129 04b6 536C6964 		.ascii	"Slider_lowBaselineResetCnt\000"
 6129      65725F6C 
 6129      6F774261 
 6129      73656C69 
 6129      6E655265 
 6130              	.LASF142:
 6131 04d1 536C6964 		.ascii	"Slider_IsBusy\000"
 6131      65725F49 
 6131      73427573 
 6131      7900
 6132              	.LASF10:
 6133 04df 75696E74 		.ascii	"uint16\000"
 6133      313600
 6134              	.LASF47:
 6135 04e6 64617461 		.ascii	"data\000"
 6135      00
 6136              	.LASF18:
 6137 04eb 69646163 		.ascii	"idac1LevelsTbl\000"
 6137      314C6576 
 6137      656C7354 
 6137      626C00
 6138              	.LASF41:
 6139 04fa 536C6964 		.ascii	"Slider_InitializeSensorBaseline\000"
 6139      65725F49 
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 164


 6139      6E697469 
 6139      616C697A 
 6139      6553656E 
 6140              	.LASF83:
 6141 051a 7265736F 		.ascii	"resolution\000"
 6141      6C757469 
 6141      6F6E00
 6142              	.LASF54:
 6143 0525 536C6964 		.ascii	"Slider_GetNoiseThreshold\000"
 6143      65725F47 
 6143      65744E6F 
 6143      69736554 
 6143      68726573 
 6144              	.LASF70:
 6145 053e 72617749 		.ascii	"rawIndex\000"
 6145      6E646578 
 6145      00
 6146              	.LASF109:
 6147 0547 536C6964 		.ascii	"Slider_GetWidgetNumber\000"
 6147      65725F47 
 6147      65745769 
 6147      64676574 
 6147      4E756D62 
 6148              	.LASF6:
 6149 055e 6C6F6E67 		.ascii	"long long int\000"
 6149      206C6F6E 
 6149      6720696E 
 6149      7400
 6150              	.LASF82:
 6151 056c 536C6964 		.ascii	"Slider_CalcCentroid\000"
 6151      65725F43 
 6151      616C6343 
 6151      656E7472 
 6151      6F696400 
 6152              	.LASF64:
 6153 0580 6465626F 		.ascii	"debounce\000"
 6153      756E6365 
 6153      00
 6154              	.LASF55:
 6155 0589 536C6964 		.ascii	"Slider_GetFingerHysteresis\000"
 6155      65725F47 
 6155      65744669 
 6155      6E676572 
 6155      48797374 
 6156              	.LASF28:
 6157 05a4 70747250 		.ascii	"ptrPreScan\000"
 6157      72655363 
 6157      616E00
 6158              	.LASF145:
 6159 05af 536C6964 		.ascii	"Slider_UpdateThresholds\000"
 6159      65725F55 
 6159      70646174 
 6159      65546872 
 6159      6573686F 
 6160              	.LASF91:
 6161 05c7 536C6964 		.ascii	"Slider_GetRadialCentroidPos\000"
 6161      65725F47 
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 165


 6161      65745261 
 6161      6469616C 
 6161      43656E74 
 6162              	.LASF27:
 6163 05e3 70747247 		.ascii	"ptrGetRaw\000"
 6163      65745261 
 6163      7700
 6164              	.LASF127:
 6165 05ed 536C6964 		.ascii	"Slider_noiseThreshold\000"
 6165      65725F6E 
 6165      6F697365 
 6165      54687265 
 6165      73686F6C 
 6166              	.LASF11:
 6167 0603 75696E74 		.ascii	"uint32\000"
 6167      333200
 6168              	.LASF107:
 6169 060a 66697273 		.ascii	"firstTimeIndex\000"
 6169      7454696D 
 6169      65496E64 
 6169      657800
 6170              	.LASF81:
 6171 0619 73746172 		.ascii	"startOfSlider\000"
 6171      744F6653 
 6171      6C696465 
 6171      7200
 6172              	.LASF89:
 6173 0627 6E756D65 		.ascii	"numerator\000"
 6173      7261746F 
 6173      7200
 6174              	.LASF104:
 6175 0631 6C617374 		.ascii	"lastSensor\000"
 6175      53656E73 
 6175      6F7200
 6176              	.LASF37:
 6177 063c 6866636C 		.ascii	"hfclkFreq_MHz\000"
 6177      6B467265 
 6177      715F4D48 
 6177      7A00
 6178              	.LASF44:
 6179 064a 536C6964 		.ascii	"Slider_InitializeEnabledBaselines\000"
 6179      65725F49 
 6179      6E697469 
 6179      616C697A 
 6179      65456E61 
 6180              	.LASF133:
 6181 066c 536C6964 		.ascii	"Slider_rawFilterData1\000"
 6181      65725F72 
 6181      61774669 
 6181      6C746572 
 6181      44617461 
 6182              	.LASF110:
 6183 0682 536C6964 		.ascii	"Slider_GetLowBaselineReset\000"
 6183      65725F47 
 6183      65744C6F 
 6183      77426173 
 6183      656C696E 
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 166


 6184              	.LASF19:
 6185 069d 69646163 		.ascii	"idac2LevelsTbl\000"
 6185      324C6576 
 6185      656C7354 
 6185      626C00
 6186              	.LASF2:
 6187 06ac 73686F72 		.ascii	"short int\000"
 6187      7420696E 
 6187      7400
 6188              	.LASF93:
 6189 06b6 536C6964 		.ascii	"Slider_IIR4Filter\000"
 6189      65725F49 
 6189      49523446 
 6189      696C7465 
 6189      7200
 6190              	.LASF52:
 6191 06c8 536C6964 		.ascii	"Slider_GetFingerThreshold\000"
 6191      65725F47 
 6191      65744669 
 6191      6E676572 
 6191      54687265 
 6192              	.LASF4:
 6193 06e2 6C6F6E67 		.ascii	"long int\000"
 6193      20696E74 
 6193      00
 6194              	.LASF76:
 6195 06eb 536C6964 		.ascii	"Slider_FindMaximum\000"
 6195      65725F46 
 6195      696E644D 
 6195      6178696D 
 6195      756D00
 6196              	.LASF103:
 6197 06fe 66697273 		.ascii	"firstSensor\000"
 6197      7453656E 
 6197      736F7200 
 6198              	.LASF125:
 6199 070a 536C6964 		.ascii	"Slider_lowBaselineReset\000"
 6199      65725F6C 
 6199      6F774261 
 6199      73656C69 
 6199      6E655265 
 6200              	.LASF48:
 6201 0722 536C6964 		.ascii	"Slider_GetBaselineData\000"
 6201      65725F47 
 6201      65744261 
 6201      73656C69 
 6201      6E654461 
 6202              	.LASF80:
 6203 0739 74656D70 		.ascii	"temp\000"
 6203      00
 6204              	.LASF39:
 6205 073e 536C6964 		.ascii	"Slider_CONFIG_TYPE_P4_v2_20\000"
 6205      65725F43 
 6205      4F4E4649 
 6205      475F5459 
 6205      50455F50 
 6206              	.LASF23:
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 167


 6207 075a 77696467 		.ascii	"widgetNubmersTbl\000"
 6207      65744E75 
 6207      626D6572 
 6207      7354626C 
 6207      00
 6208              	.LASF63:
 6209 076b 536C6964 		.ascii	"Slider_CheckIsSensorActive\000"
 6209      65725F43 
 6209      6865636B 
 6209      49735365 
 6209      6E736F72 
 6210              	.LASF56:
 6211 0786 536C6964 		.ascii	"Slider_GetNegativeNoiseThreshold\000"
 6211      65725F47 
 6211      65744E65 
 6211      67617469 
 6211      76654E6F 
 6212              	.LASF75:
 6213 07a7 536C6964 		.ascii	"Slider_DisableWidget\000"
 6213      65725F44 
 6213      69736162 
 6213      6C655769 
 6213      64676574 
 6214              	.LASF79:
 6215 07bc 6D617869 		.ascii	"maximum\000"
 6215      6D756D00 
 6216              	.LASF17:
 6217 07c4 73697A65 		.ascii	"sizetype\000"
 6217      74797065 
 6217      00
 6218              	.LASF5:
 6219 07cd 6C6F6E67 		.ascii	"long unsigned int\000"
 6219      20756E73 
 6219      69676E65 
 6219      6420696E 
 6219      7400
 6220              	.LASF141:
 6221 07df 593A5C72 		.ascii	"Y:\\repos\\PSoC-4-BLE-Experiments\\Project 003 Cust"
 6221      65706F73 
 6221      5C50536F 
 6221      432D342D 
 6221      424C452D 
 6222 080f 6F6D2050 		.ascii	"om Profile CapSense RGB LED\\PSoC\\CapSenseRGB\\Cap"
 6222      726F6669 
 6222      6C652043 
 6222      61705365 
 6222      6E736520 
 6223 083f 53656E73 		.ascii	"SenseRGB.cydsn\000"
 6223      65524742 
 6223      2E637964 
 6223      736E00
 6224              	.LASF59:
 6225 084e 536C6964 		.ascii	"Slider_SetFingerHysteresis\000"
 6225      65725F53 
 6225      65744669 
 6225      6E676572 
 6225      48797374 
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 168


 6226              	.LASF84:
 6227 0869 6E6F6973 		.ascii	"noiseThreshold\000"
 6227      65546872 
 6227      6573686F 
 6227      6C6400
 6228              	.LASF114:
 6229 0878 536C6964 		.ascii	"Slider_centroidMult\000"
 6229      65725F63 
 6229      656E7472 
 6229      6F69644D 
 6229      756C7400 
 6230              	.LASF66:
 6231 088c 66696E67 		.ascii	"fingerThreshold\000"
 6231      65725468 
 6231      72657368 
 6231      6F6C6400 
 6232              	.LASF21:
 6233 089c 63686172 		.ascii	"chargeDivTbl\000"
 6233      67654469 
 6233      7654626C 
 6233      00
 6234              	.LASF1:
 6235 08a9 756E7369 		.ascii	"unsigned char\000"
 6235      676E6564 
 6235      20636861 
 6235      7200
 6236              	.LASF137:
 6237 08b7 536C6964 		.ascii	"Slider_SetBitValue\000"
 6237      65725F53 
 6237      65744269 
 6237      7456616C 
 6237      756500
 6238              	.LASF65:
 6239 08ca 6465626F 		.ascii	"debounceIndex\000"
 6239      756E6365 
 6239      496E6465 
 6239      7800
 6240              	.LASF116:
 6241 08d8 536C6964 		.ascii	"Slider_posFiltersData\000"
 6241      65725F70 
 6241      6F734669 
 6241      6C746572 
 6241      73446174 
 6242              	.LASF135:
 6243 08ee 536C6964 		.ascii	"Slider_enableRawFilters\000"
 6243      65725F65 
 6243      6E61626C 
 6243      65526177 
 6243      46696C74 
 6244              	.LASF117:
 6245 0906 536C6964 		.ascii	"Slider_sensorRaw\000"
 6245      65725F73 
 6245      656E736F 
 6245      72526177 
 6245      00
 6246              	.LASF20:
 6247 0917 73656E73 		.ascii	"sensetivityTbl\000"
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 169


 6247      65746976 
 6247      69747954 
 6247      626C00
 6248              	.LASF68:
 6249 0926 536C6964 		.ascii	"Slider_debounceCounter\000"
 6249      65725F64 
 6249      65626F75 
 6249      6E636543 
 6249      6F756E74 
 6250              	.LASF72:
 6251 093d 73746174 		.ascii	"state\000"
 6251      6500
 6252              	.LASF129:
 6253 0943 536C6964 		.ascii	"Slider_hysteresis\000"
 6253      65725F68 
 6253      79737465 
 6253      72657369 
 6253      7300
 6254              	.LASF60:
 6255 0955 536C6964 		.ascii	"Slider_SetNegativeNoiseThreshold\000"
 6255      65725F53 
 6255      65744E65 
 6255      67617469 
 6255      76654E6F 
 6256              	.LASF32:
 6257 0976 536C6964 		.ascii	"Slider_CONFIG_TYPE_POINTERS_P4_v2_20\000"
 6257      65725F43 
 6257      4F4E4649 
 6257      475F5459 
 6257      50455F50 
 6258              	.LASF130:
 6259 099b 536C6964 		.ascii	"Slider_debounce\000"
 6259      65725F64 
 6259      65626F75 
 6259      6E636500 
 6260              	.LASF61:
 6261 09ab 536C6964 		.ascii	"Slider_SetDebounce\000"
 6261      65725F53 
 6261      65744465 
 6261      626F756E 
 6261      636500
 6262              	.LASF22:
 6263 09be 6D6F6444 		.ascii	"modDivTbl\000"
 6263      69765462 
 6263      6C00
 6264              	.LASF0:
 6265 09c8 7369676E 		.ascii	"signed char\000"
 6265      65642063 
 6265      68617200 
 6266              	.LASF101:
 6267 09d4 536C6964 		.ascii	"Slider_UpdateWidgetBaseline\000"
 6267      65725F55 
 6267      70646174 
 6267      65576964 
 6267      67657442 
 6268              	.LASF3:
 6269 09f0 73686F72 		.ascii	"short unsigned int\000"
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 170


 6269      7420756E 
 6269      7369676E 
 6269      65642069 
 6269      6E7400
 6270              	.LASF31:
 6271 0a03 70747253 		.ascii	"ptrSetBitValue\000"
 6271      65744269 
 6271      7456616C 
 6271      756500
 6272              	.LASF143:
 6273 0a12 536C6964 		.ascii	"Slider_ScanEnabledWidgets\000"
 6273      65725F53 
 6273      63616E45 
 6273      6E61626C 
 6273      65645769 
 6274              	.LASF97:
 6275 0a2c 74656D70 		.ascii	"tempRaw\000"
 6275      52617700 
 6276              	.LASF9:
 6277 0a34 75696E74 		.ascii	"uint8\000"
 6277      3800
 6278              	.LASF15:
 6279 0a3a 646F7562 		.ascii	"double\000"
 6279      6C6500
 6280              	.LASF123:
 6281 0a41 536C6964 		.ascii	"Slider_sensorOnMask\000"
 6281      65725F73 
 6281      656E736F 
 6281      724F6E4D 
 6281      61736B00 
 6282              	.LASF144:
 6283 0a55 536C6964 		.ascii	"Slider_GetBitValue\000"
 6283      65725F47 
 6283      65744269 
 6283      7456616C 
 6283      756500
 6284              	.LASF62:
 6285 0a68 536C6964 		.ascii	"Slider_SetLowBaselineReset\000"
 6285      65725F53 
 6285      65744C6F 
 6285      77426173 
 6285      656C696E 
 6286              	.LASF92:
 6287 0a83 536C6964 		.ascii	"Slider_MedianFilter\000"
 6287      65725F4D 
 6287      65646961 
 6287      6E46696C 
 6287      74657200 
 6288              	.LASF113:
 6289 0a97 536C6964 		.ascii	"Slider_DisableRawDataFilters\000"
 6289      65725F44 
 6289      69736162 
 6289      6C655261 
 6289      77446174 
 6290              	.LASF58:
 6291 0ab4 536C6964 		.ascii	"Slider_SetNoiseThreshold\000"
 6291      65725F53 
ARM GAS  C:\Users\danielpi\AppData\Local\Temp\cc2vUELq.s 			page 171


 6291      65744E6F 
 6291      69736554 
 6291      68726573 
 6292              	.LASF115:
 6293 0acd 536C6964 		.ascii	"Slider_posFiltersMask\000"
 6293      65725F70 
 6293      6F734669 
 6293      6C746572 
 6293      734D6173 
 6294              	.LASF88:
 6295 0ae3 706F7369 		.ascii	"position\000"
 6295      74696F6E 
 6295      00
 6296              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
