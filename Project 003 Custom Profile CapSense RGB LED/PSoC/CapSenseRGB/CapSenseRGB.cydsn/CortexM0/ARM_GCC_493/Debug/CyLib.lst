ARM GAS  C:\Users\ELECTR~1\AppData\Local\Temp\ccybjnra.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"CyLib.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.CySysClkImoStart,"ax",%progbits
  18              		.align	2
  19              		.global	CySysClkImoStart
  20              		.code	16
  21              		.thumb_func
  22              		.type	CySysClkImoStart, %function
  23              	CySysClkImoStart:
  24              	.LFB2:
  25              		.file 1 ".\\Generated_Source\\PSoC4\\CyLib.c"
   1:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/CyLib.c **** * File Name: CyLib.c
   3:.\Generated_Source\PSoC4/CyLib.c **** * Version 5.10
   4:.\Generated_Source\PSoC4/CyLib.c **** *
   5:.\Generated_Source\PSoC4/CyLib.c **** *  Description:
   6:.\Generated_Source\PSoC4/CyLib.c **** *   Provides a system API for the clocking, interrupts, and watchdog timer.
   7:.\Generated_Source\PSoC4/CyLib.c **** *
   8:.\Generated_Source\PSoC4/CyLib.c **** *  Note:
   9:.\Generated_Source\PSoC4/CyLib.c **** *   Documentation of the API's in this file is located in the
  10:.\Generated_Source\PSoC4/CyLib.c **** *   System Reference Guide provided with PSoC Creator.
  11:.\Generated_Source\PSoC4/CyLib.c **** *
  12:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
  13:.\Generated_Source\PSoC4/CyLib.c **** * Copyright 2010-2015, Cypress Semiconductor Corporation.  All rights reserved.
  14:.\Generated_Source\PSoC4/CyLib.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:.\Generated_Source\PSoC4/CyLib.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:.\Generated_Source\PSoC4/CyLib.c **** * the software package with which this file was provided.
  17:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  18:.\Generated_Source\PSoC4/CyLib.c **** 
  19:.\Generated_Source\PSoC4/CyLib.c **** #include "CyLib.h"
  20:.\Generated_Source\PSoC4/CyLib.c **** 
  21:.\Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2 && CY_IP_FMLT)
  22:.\Generated_Source\PSoC4/CyLib.c ****     #include "CyFlash.h"
  23:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_FMLT) */
  24:.\Generated_Source\PSoC4/CyLib.c **** 
  25:.\Generated_Source\PSoC4/CyLib.c **** 
  26:.\Generated_Source\PSoC4/CyLib.c **** /* Do not use these definitions directly in your application */
  27:.\Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqHz  = CYDEV_BCLK__SYSCLK__HZ;
  28:.\Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqKhz = (CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRE
  29:.\Generated_Source\PSoC4/CyLib.c **** uint8  cydelayFreqMhz = (uint8)((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY
  30:.\Generated_Source\PSoC4/CyLib.c **** uint32 cydelay32kMs   = CY_DELAY_MS_OVERFLOW * ((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRES
  31:.\Generated_Source\PSoC4/CyLib.c ****                         CY_DELAY_1K_THRESHOLD);
  32:.\Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\ELECTR~1\AppData\Local\Temp\ccybjnra.s 			page 2


  33:.\Generated_Source\PSoC4/CyLib.c **** 
  34:.\Generated_Source\PSoC4/CyLib.c **** static cySysTickCallback CySysTickCallbacks[CY_SYS_SYST_NUM_OF_CALLBACKS];
  35:.\Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void);
  36:.\Generated_Source\PSoC4/CyLib.c **** #if (CY_PSOC4_4100M || CY_PSOC4_4200M)
  37:.\Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkImoGetWcoLock(void);
  38:.\Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_PSOC4_4100M || CY_PSOC4_4200M) */
  39:.\Generated_Source\PSoC4/CyLib.c **** 
  40:.\Generated_Source\PSoC4/CyLib.c **** 
  41:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
  42:.\Generated_Source\PSoC4/CyLib.c **** * Indicates whether or not the SysTick has been initialized. The variable is
  43:.\Generated_Source\PSoC4/CyLib.c **** * initialized to 0 and set to 1 the first time CySysTickStart() is called.
  44:.\Generated_Source\PSoC4/CyLib.c **** *
  45:.\Generated_Source\PSoC4/CyLib.c **** * This allows the component to restart without reinitialization after the first
  46:.\Generated_Source\PSoC4/CyLib.c **** * call to the CySysTickStart() routine.
  47:.\Generated_Source\PSoC4/CyLib.c **** *
  48:.\Generated_Source\PSoC4/CyLib.c **** * If reinitialization of the SysTick is required, call CySysTickInit() before
  49:.\Generated_Source\PSoC4/CyLib.c **** * calling CySysTickStart(). Alternatively, the SysTick can be reinitialized by
  50:.\Generated_Source\PSoC4/CyLib.c **** * calling the CySysTickInit() and CySysTickEnable() functions.
  51:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  52:.\Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickInitVar = 0u;
  53:.\Generated_Source\PSoC4/CyLib.c **** 
  54:.\Generated_Source\PSoC4/CyLib.c **** 
  55:.\Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
  56:.\Generated_Source\PSoC4/CyLib.c ****         /* Conversion between CySysClkWriteImoFreq() parameter and register's value */
  57:.\Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_FREQ_TABLE_SIZE] = {
  58:.\Generated_Source\PSoC4/CyLib.c ****             /*  3 MHz */ 0x03u,  /*  4 MHz */ 0x04u,  /*  5 MHz */ 0x05u,  /*  6 MHz */ 0x06u,
  59:.\Generated_Source\PSoC4/CyLib.c ****             /*  7 MHz */ 0x07u,  /*  8 MHz */ 0x08u,  /*  9 MHz */ 0x09u,  /* 10 MHz */ 0x0Au,
  60:.\Generated_Source\PSoC4/CyLib.c ****             /* 11 MHz */ 0x0Bu,  /* 12 MHz */ 0x0Cu,  /* 13 MHz */ 0x0Eu,  /* 14 MHz */ 0x0Fu,
  61:.\Generated_Source\PSoC4/CyLib.c ****             /* 15 MHz */ 0x10u,  /* 16 MHz */ 0x11u,  /* 17 MHz */ 0x12u,  /* 18 MHz */ 0x13u,
  62:.\Generated_Source\PSoC4/CyLib.c ****             /* 19 MHz */ 0x14u,  /* 20 MHz */ 0x15u,  /* 21 MHz */ 0x16u,  /* 22 MHz */ 0x17u,
  63:.\Generated_Source\PSoC4/CyLib.c ****             /* 23 MHz */ 0x18u,  /* 24 MHz */ 0x19u,  /* 25 MHz */ 0x1Bu,  /* 26 MHz */ 0x1Cu,
  64:.\Generated_Source\PSoC4/CyLib.c ****             /* 27 MHz */ 0x1Du,  /* 28 MHz */ 0x1Eu,  /* 29 MHz */ 0x1Fu,  /* 30 MHz */ 0x20u,
  65:.\Generated_Source\PSoC4/CyLib.c ****             /* 31 MHz */ 0x21u,  /* 32 MHz */ 0x22u,  /* 33 MHz */ 0x23u,  /* 34 MHz */ 0x25u,
  66:.\Generated_Source\PSoC4/CyLib.c ****             /* 35 MHz */ 0x26u,  /* 36 MHz */ 0x27u,  /* 37 MHz */ 0x28u,  /* 38 MHz */ 0x29u,
  67:.\Generated_Source\PSoC4/CyLib.c ****             /* 39 MHz */ 0x2Au,  /* 40 MHz */ 0x2Bu,  /* 41 MHz */ 0x2Eu,  /* 42 MHz */ 0x2Fu,
  68:.\Generated_Source\PSoC4/CyLib.c ****             /* 43 MHz */ 0x30u,  /* 44 MHz */ 0x31u,  /* 45 MHz */ 0x32u,  /* 46 MHz */ 0x33u,
  69:.\Generated_Source\PSoC4/CyLib.c ****             /* 47 MHz */ 0x34u,  /* 48 MHz */ 0x35u };
  70:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
  71:.\Generated_Source\PSoC4/CyLib.c **** 
  72:.\Generated_Source\PSoC4/CyLib.c **** 
  73:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
  74:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStart
  75:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
  76:.\Generated_Source\PSoC4/CyLib.c **** *
  77:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
  78:.\Generated_Source\PSoC4/CyLib.c **** *  Enables the IMO.
  79:.\Generated_Source\PSoC4/CyLib.c **** *
  80:.\Generated_Source\PSoC4/CyLib.c **** *  For PSoC 4100M / PSoC 4200M devices, this function will also enable WCO lock
  81:.\Generated_Source\PSoC4/CyLib.c **** *  if selected in the Design Wide Resources tab.
  82:.\Generated_Source\PSoC4/CyLib.c **** *
  83:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
  84:.\Generated_Source\PSoC4/CyLib.c **** *  None
  85:.\Generated_Source\PSoC4/CyLib.c **** *
  86:.\Generated_Source\PSoC4/CyLib.c **** * Return:
  87:.\Generated_Source\PSoC4/CyLib.c **** *  None
  88:.\Generated_Source\PSoC4/CyLib.c **** *
  89:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
ARM GAS  C:\Users\ELECTR~1\AppData\Local\Temp\ccybjnra.s 			page 3


  90:.\Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStart(void)
  91:.\Generated_Source\PSoC4/CyLib.c **** {
  26              		.loc 1 91 0
  27              		.cfi_startproc
  92:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG |= CY_SYS_CLK_IMO_CONFIG_ENABLE;
  28              		.loc 1 92 0
  29 0000 034A     		ldr	r2, .L2
  30 0002 1368     		ldr	r3, [r2]
  31 0004 8021     		mov	r1, #128
  32 0006 0906     		lsl	r1, r1, #24
  33 0008 0B43     		orr	r3, r1
  34 000a 1360     		str	r3, [r2]
  93:.\Generated_Source\PSoC4/CyLib.c **** 
  94:.\Generated_Source\PSoC4/CyLib.c ****     #if (CY_PSOC4_4100M || CY_PSOC4_4200M)
  95:.\Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_WCO == 1u)
  96:.\Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableWcoLock();
  97:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_WCO == 1u) */
  98:.\Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_PSOC4_4100M || CY_PSOC4_4200M) */
  99:.\Generated_Source\PSoC4/CyLib.c **** 
 100:.\Generated_Source\PSoC4/CyLib.c **** }
  35              		.loc 1 100 0
  36              		@ sp needed
  37 000c 7047     		bx	lr
  38              	.L3:
  39 000e C046     		.align	2
  40              	.L2:
  41 0010 08010B40 		.word	1074462984
  42              		.cfi_endproc
  43              	.LFE2:
  44              		.size	CySysClkImoStart, .-CySysClkImoStart
  45              		.section	.text.CySysClkImoStop,"ax",%progbits
  46              		.align	2
  47              		.global	CySysClkImoStop
  48              		.code	16
  49              		.thumb_func
  50              		.type	CySysClkImoStop, %function
  51              	CySysClkImoStop:
  52              	.LFB3:
 101:.\Generated_Source\PSoC4/CyLib.c **** 
 102:.\Generated_Source\PSoC4/CyLib.c **** 
 103:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 104:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStop
 105:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
 106:.\Generated_Source\PSoC4/CyLib.c **** *
 107:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
 108:.\Generated_Source\PSoC4/CyLib.c **** *  Disables the IMO.
 109:.\Generated_Source\PSoC4/CyLib.c **** *
 110:.\Generated_Source\PSoC4/CyLib.c **** *  For PSoC 4100M/PSoC 4200M devices , this function will also disable WCO lock
 111:.\Generated_Source\PSoC4/CyLib.c **** *  if already enabled.
 112:.\Generated_Source\PSoC4/CyLib.c **** *
 113:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
 114:.\Generated_Source\PSoC4/CyLib.c **** *  None
 115:.\Generated_Source\PSoC4/CyLib.c **** *
 116:.\Generated_Source\PSoC4/CyLib.c **** * Return:
 117:.\Generated_Source\PSoC4/CyLib.c **** *  None
 118:.\Generated_Source\PSoC4/CyLib.c **** *
 119:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
ARM GAS  C:\Users\ELECTR~1\AppData\Local\Temp\ccybjnra.s 			page 4


 120:.\Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStop(void)
 121:.\Generated_Source\PSoC4/CyLib.c **** {
  53              		.loc 1 121 0
  54              		.cfi_startproc
 122:.\Generated_Source\PSoC4/CyLib.c ****     #if (CY_PSOC4_4100M || CY_PSOC4_4200M)
 123:.\Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableWcoLock();
 124:.\Generated_Source\PSoC4/CyLib.c ****     #endif  /* #if (CY_PSOC4_4100M || CY_PSOC4_4200M) */
 125:.\Generated_Source\PSoC4/CyLib.c **** 
 126:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG &= ( uint32 ) ( ~( uint32 )CY_SYS_CLK_IMO_CONFIG_ENABLE);
  55              		.loc 1 126 0
  56 0000 024A     		ldr	r2, .L5
  57 0002 1368     		ldr	r3, [r2]
  58 0004 5B00     		lsl	r3, r3, #1
  59 0006 5B08     		lsr	r3, r3, #1
  60 0008 1360     		str	r3, [r2]
 127:.\Generated_Source\PSoC4/CyLib.c **** }
  61              		.loc 1 127 0
  62              		@ sp needed
  63 000a 7047     		bx	lr
  64              	.L6:
  65              		.align	2
  66              	.L5:
  67 000c 08010B40 		.word	1074462984
  68              		.cfi_endproc
  69              	.LFE3:
  70              		.size	CySysClkImoStop, .-CySysClkImoStop
  71              		.section	.text.CySysClkWriteHfclkDirect,"ax",%progbits
  72              		.align	2
  73              		.global	CySysClkWriteHfclkDirect
  74              		.code	16
  75              		.thumb_func
  76              		.type	CySysClkWriteHfclkDirect, %function
  77              	CySysClkWriteHfclkDirect:
  78              	.LFB4:
 128:.\Generated_Source\PSoC4/CyLib.c **** 
 129:.\Generated_Source\PSoC4/CyLib.c **** #if (CY_PSOC4_4100M || CY_PSOC4_4200M)
 130:.\Generated_Source\PSoC4/CyLib.c **** 
 131:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 132:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableWcoLock
 133:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 134:.\Generated_Source\PSoC4/CyLib.c ****     *
 135:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
 136:.\Generated_Source\PSoC4/CyLib.c ****     *  Enables the IMO to WCO lock feature. This function works only if the WCO is
 137:.\Generated_Source\PSoC4/CyLib.c ****     *  already enabled. If the WCO is not enabled then this function returns
 138:.\Generated_Source\PSoC4/CyLib.c ****     *  without enabling the lock feature.
 139:.\Generated_Source\PSoC4/CyLib.c ****     *
 140:.\Generated_Source\PSoC4/CyLib.c ****     *  This function is applicable for PSoC 4100M/PSoC 4200M devices only.
 141:.\Generated_Source\PSoC4/CyLib.c ****     *
 142:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 143:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 144:.\Generated_Source\PSoC4/CyLib.c ****     *
 145:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
 146:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 147:.\Generated_Source\PSoC4/CyLib.c ****     *
 148:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 149:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableWcoLock(void)
 150:.\Generated_Source\PSoC4/CyLib.c ****     {
ARM GAS  C:\Users\ELECTR~1\AppData\Local\Temp\ccybjnra.s 			page 5


 151:.\Generated_Source\PSoC4/CyLib.c ****         uint32 i;
 152:.\Generated_Source\PSoC4/CyLib.c ****         uint32 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 153:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 154:.\Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
 155:.\Generated_Source\PSoC4/CyLib.c ****         volatile uint32 flashCtlReg;
 156:.\Generated_Source\PSoC4/CyLib.c **** 
 157:.\Generated_Source\PSoC4/CyLib.c ****         if (0u != CySysClkWcoEnabled())
 158:.\Generated_Source\PSoC4/CyLib.c ****         {
 159:.\Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 160:.\Generated_Source\PSoC4/CyLib.c **** 
 161:.\Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 162:.\Generated_Source\PSoC4/CyLib.c ****             for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 163:.\Generated_Source\PSoC4/CyLib.c ****             {
 164:.\Generated_Source\PSoC4/CyLib.c ****                 if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImoFreq
 165:.\Generated_Source\PSoC4/CyLib.c ****                 {
 166:.\Generated_Source\PSoC4/CyLib.c ****                     freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 167:.\Generated_Source\PSoC4/CyLib.c ****                     break;
 168:.\Generated_Source\PSoC4/CyLib.c ****                 }
 169:.\Generated_Source\PSoC4/CyLib.c ****             }
 170:.\Generated_Source\PSoC4/CyLib.c **** 
 171:.\Generated_Source\PSoC4/CyLib.c ****             if ((CY_SYS_CLK_IMO_TRIM4_REG & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK) == 0u)
 172:.\Generated_Source\PSoC4/CyLib.c ****             {
 173:.\Generated_Source\PSoC4/CyLib.c **** 			    CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_GAIN_M
 174:.\Generated_Source\PSoC4/CyLib.c **** 			             				    CY_SYS_CLK_IMO_TRIM4_GAIN;
 175:.\Generated_Source\PSoC4/CyLib.c ****             }
 176:.\Generated_Source\PSoC4/CyLib.c **** 
 177:.\Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_DPLL_MULT_MASK |
 178:.\Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
 179:.\Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN_MASK);
 180:.\Generated_Source\PSoC4/CyLib.c **** 
 181:.\Generated_Source\PSoC4/CyLib.c ****             /* Set multiplier to determine IMO frequency in multiples of the WCO frequency */
 182:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_DPLL_MULT_VALUE(freq) & CY_SYS_CLK_WCO_DPLL_MULT_MASK);
 183:.\Generated_Source\PSoC4/CyLib.c **** 
 184:.\Generated_Source\PSoC4/CyLib.c ****             /* Set DPLL Loop Filter Integral and Proportional Gains Setting */
 185:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN | CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN);
 186:.\Generated_Source\PSoC4/CyLib.c **** 
 187:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = regTmp;
 188:.\Generated_Source\PSoC4/CyLib.c **** 
 189:.\Generated_Source\PSoC4/CyLib.c ****             flashCtlReg = CY_FLASH_CTL_REG;
 190:.\Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 191:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 192:.\Generated_Source\PSoC4/CyLib.c ****             CyDelay(320u);
 193:.\Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CTL_REG = flashCtlReg;
 194:.\Generated_Source\PSoC4/CyLib.c **** 
 195:.\Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 196:.\Generated_Source\PSoC4/CyLib.c ****         }
 197:.\Generated_Source\PSoC4/CyLib.c ****     }
 198:.\Generated_Source\PSoC4/CyLib.c **** 
 199:.\Generated_Source\PSoC4/CyLib.c **** 
 200:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 201:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableWcoLock
 202:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 203:.\Generated_Source\PSoC4/CyLib.c ****     *
 204:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
 205:.\Generated_Source\PSoC4/CyLib.c ****     *  Disables the IMO to WCO lock feature.
 206:.\Generated_Source\PSoC4/CyLib.c ****     *
 207:.\Generated_Source\PSoC4/CyLib.c ****     *  This function is applicable for PSoC 4100M/PSoC 4200M devices only.
ARM GAS  C:\Users\ELECTR~1\AppData\Local\Temp\ccybjnra.s 			page 6


 208:.\Generated_Source\PSoC4/CyLib.c ****     *
 209:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 210:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 211:.\Generated_Source\PSoC4/CyLib.c ****     *
 212:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
 213:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 214:.\Generated_Source\PSoC4/CyLib.c ****     *
 215:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 216:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableWcoLock(void)
 217:.\Generated_Source\PSoC4/CyLib.c ****     {
 218:.\Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 219:.\Generated_Source\PSoC4/CyLib.c ****     }
 220:.\Generated_Source\PSoC4/CyLib.c **** 
 221:.\Generated_Source\PSoC4/CyLib.c **** 
 222:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 223:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetWcoLock
 224:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 225:.\Generated_Source\PSoC4/CyLib.c ****     *
 226:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
 227:.\Generated_Source\PSoC4/CyLib.c ****     *  Reports the IMO to WCO lock enable state.
 228:.\Generated_Source\PSoC4/CyLib.c ****     *
 229:.\Generated_Source\PSoC4/CyLib.c ****     *  This function is applicable for PSoC 4100M/PSoC 4200M devices only.
 230:.\Generated_Source\PSoC4/CyLib.c ****     *
 231:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 232:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 233:.\Generated_Source\PSoC4/CyLib.c ****     *
 234:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
 235:.\Generated_Source\PSoC4/CyLib.c ****     *  1 if IMO to WCO lock is enabled, and 0 if IMO to WCO lock is disabled.
 236:.\Generated_Source\PSoC4/CyLib.c ****     *
 237:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 238:.\Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkImoGetWcoLock(void)
 239:.\Generated_Source\PSoC4/CyLib.c ****     {
 240:.\Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE)) ?
 241:.\Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 242:.\Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 243:.\Generated_Source\PSoC4/CyLib.c ****     }
 244:.\Generated_Source\PSoC4/CyLib.c **** 
 245:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_PSOC4_4100M || CY_PSOC4_4200M) */
 246:.\Generated_Source\PSoC4/CyLib.c **** 
 247:.\Generated_Source\PSoC4/CyLib.c **** 
 248:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 249:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteHfclkDirect
 250:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
 251:.\Generated_Source\PSoC4/CyLib.c **** *
 252:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
 253:.\Generated_Source\PSoC4/CyLib.c **** *  Selects the direct source for the HFCLK.
 254:.\Generated_Source\PSoC4/CyLib.c **** *
 255:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
 256:.\Generated_Source\PSoC4/CyLib.c **** *  clkSelect: One of the available HFCLK direct sources:
 257:.\Generated_Source\PSoC4/CyLib.c **** *   Define                    Source
 258:.\Generated_Source\PSoC4/CyLib.c **** *    CY_SYS_CLK_HFCLK_IMO     IMO
 259:.\Generated_Source\PSoC4/CyLib.c **** *    CY_SYS_CLK_HFCLK_EXTCLK  External clock pin
 260:.\Generated_Source\PSoC4/CyLib.c **** *    CY_SYS_CLK_HFCLK_ECO     External crystal oscillator
 261:.\Generated_Source\PSoC4/CyLib.c **** *                             (applicable only for PSoC 4100-BL / PSoC 4200-BL)
 262:.\Generated_Source\PSoC4/CyLib.c **** *
 263:.\Generated_Source\PSoC4/CyLib.c **** * Return:
 264:.\Generated_Source\PSoC4/CyLib.c **** *  None
ARM GAS  C:\Users\ELECTR~1\AppData\Local\Temp\ccybjnra.s 			page 7


 265:.\Generated_Source\PSoC4/CyLib.c **** *
 266:.\Generated_Source\PSoC4/CyLib.c **** * Side Effects:
 267:.\Generated_Source\PSoC4/CyLib.c **** *  The new source must be running and stable before calling this function.
 268:.\Generated_Source\PSoC4/CyLib.c **** *
 269:.\Generated_Source\PSoC4/CyLib.c **** *  PSoC 4000:
 270:.\Generated_Source\PSoC4/CyLib.c **** *  The SYSCLK has a maximum speed of 16 MHz, so HFCLK and SYSCLK dividers should
 271:.\Generated_Source\PSoC4/CyLib.c **** *  be selected in a way to not to exceed 16 MHz for the System clock.
 272:.\Generated_Source\PSoC4/CyLib.c **** *
 273:.\Generated_Source\PSoC4/CyLib.c **** *  If the SYSCLK clock frequency increases during device operation, call
 274:.\Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 275:.\Generated_Source\PSoC4/CyLib.c **** *  of clock cycles the cache will wait before sampling data comes back from
 276:.\Generated_Source\PSoC4/CyLib.c **** *  Flash. If the SYSCLK clock frequency decreases, you can call
 277:.\Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles() to improve the CPU performance. See
 278:.\Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles() description for more information.
 279:.\Generated_Source\PSoC4/CyLib.c **** *
 280:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 281:.\Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteHfclkDirect(uint32 clkSelect)
 282:.\Generated_Source\PSoC4/CyLib.c **** {
  79              		.loc 1 282 0
  80              		.cfi_startproc
  81              	.LVL0:
  82 0000 10B5     		push	{r4, lr}
  83              		.cfi_def_cfa_offset 8
  84              		.cfi_offset 4, -8
  85              		.cfi_offset 14, -4
  86 0002 041C     		mov	r4, r0
 283:.\Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 284:.\Generated_Source\PSoC4/CyLib.c **** 
 285:.\Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
  87              		.loc 1 285 0
  88 0004 FFF7FEFF 		bl	CyEnterCriticalSection
  89              	.LVL1:
 286:.\Generated_Source\PSoC4/CyLib.c **** 
 287:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & (( uint32 ) ~(( uint32 )CY_SYS_CLK_SELECT_DIR
  90              		.loc 1 287 0
  91 0008 054A     		ldr	r2, .L8
  92 000a 1368     		ldr	r3, [r2]
  93 000c 0721     		mov	r1, #7
  94 000e 8B43     		bic	r3, r1
 288:.\Generated_Source\PSoC4/CyLib.c ****                         (( uint32 ) (clkSelect & ( uint32 )CY_SYS_CLK_SELECT_DIRECT_SEL_PARAM_MASK)
  95              		.loc 1 288 0
  96 0010 0439     		sub	r1, r1, #4
  97 0012 0C40     		and	r4, r1
  98              	.LVL2:
 287:.\Generated_Source\PSoC4/CyLib.c ****                         (( uint32 ) (clkSelect & ( uint32 )CY_SYS_CLK_SELECT_DIRECT_SEL_PARAM_MASK)
  99              		.loc 1 287 0
 100 0014 1C43     		orr	r4, r3
 101 0016 1460     		str	r4, [r2]
 289:.\Generated_Source\PSoC4/CyLib.c **** 
 290:.\Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 102              		.loc 1 290 0
 103 0018 FFF7FEFF 		bl	CyExitCriticalSection
 104              	.LVL3:
 291:.\Generated_Source\PSoC4/CyLib.c **** }
 105              		.loc 1 291 0
 106              		@ sp needed
 107 001c 10BD     		pop	{r4, pc}
ARM GAS  C:\Users\ELECTR~1\AppData\Local\Temp\ccybjnra.s 			page 8


 108              	.L9:
 109 001e C046     		.align	2
 110              	.L8:
 111 0020 00010B40 		.word	1074462976
 112              		.cfi_endproc
 113              	.LFE4:
 114              		.size	CySysClkWriteHfclkDirect, .-CySysClkWriteHfclkDirect
 115              		.section	.text.CySysClkWriteSysclkDiv,"ax",%progbits
 116              		.align	2
 117              		.global	CySysClkWriteSysclkDiv
 118              		.code	16
 119              		.thumb_func
 120              		.type	CySysClkWriteSysclkDiv, %function
 121              	CySysClkWriteSysclkDiv:
 122              	.LFB5:
 292:.\Generated_Source\PSoC4/CyLib.c **** 
 293:.\Generated_Source\PSoC4/CyLib.c **** 
 294:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 295:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteSysclkDiv
 296:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
 297:.\Generated_Source\PSoC4/CyLib.c **** *
 298:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
 299:.\Generated_Source\PSoC4/CyLib.c **** *  Selects the prescaler divide amount for SYSCLK from HFCLK.
 300:.\Generated_Source\PSoC4/CyLib.c **** *
 301:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
 302:.\Generated_Source\PSoC4/CyLib.c **** *  divider: Power of 2 prescaler selection
 303:.\Generated_Source\PSoC4/CyLib.c **** *
 304:.\Generated_Source\PSoC4/CyLib.c **** *   Define                        Description
 305:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_CLK_SYSCLK_DIV1        SYSCLK = HFCLK / 1
 306:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_CLK_SYSCLK_DIV2        SYSCLK = HFCLK / 2
 307:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_CLK_SYSCLK_DIV4        SYSCLK = HFCLK / 4
 308:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_CLK_SYSCLK_DIV8        SYSCLK = HFCLK / 8
 309:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_CLK_SYSCLK_DIV16       SYSCLK = HFCLK / 16  (N/A for 4000 Family)
 310:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_CLK_SYSCLK_DIV32       SYSCLK = HFCLK / 32  (N/A for 4000 Family)
 311:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_CLK_SYSCLK_DIV64       SYSCLK = HFCLK / 64  (N/A for 4000 Family)
 312:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_CLK_SYSCLK_DIV128      SYSCLK = HFCLK / 128 (N/A for 4000 Family)
 313:.\Generated_Source\PSoC4/CyLib.c **** *
 314:.\Generated_Source\PSoC4/CyLib.c **** * Return:
 315:.\Generated_Source\PSoC4/CyLib.c **** *  None
 316:.\Generated_Source\PSoC4/CyLib.c **** *
 317:.\Generated_Source\PSoC4/CyLib.c **** * Side Effects:
 318:.\Generated_Source\PSoC4/CyLib.c **** *  4000 Family:
 319:.\Generated_Source\PSoC4/CyLib.c **** *  The SYS_CLK has the speed of 16 MHz, so dividers HF_CLK and SYS_CLK
 320:.\Generated_Source\PSoC4/CyLib.c **** *  dividers should be selected in a way, not to exceed 16 MHz for SYS_CLK.
 321:.\Generated_Source\PSoC4/CyLib.c **** *
 322:.\Generated_Source\PSoC4/CyLib.c **** *  If the SYSCLK clock frequency increases during the device operation, call
 323:.\Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 324:.\Generated_Source\PSoC4/CyLib.c **** *  of clock cycles the cache will wait before sampling data comes back from
 325:.\Generated_Source\PSoC4/CyLib.c **** *  Flash. If the SYSCLK clock frequency decreases, you can call
 326:.\Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles() to improve the CPU performance. See
 327:.\Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles() description for more information.
 328:.\Generated_Source\PSoC4/CyLib.c **** *
 329:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 330:.\Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteSysclkDiv(uint32 divider)
 331:.\Generated_Source\PSoC4/CyLib.c **** {
 123              		.loc 1 331 0
 124              		.cfi_startproc
ARM GAS  C:\Users\ELECTR~1\AppData\Local\Temp\ccybjnra.s 			page 9


 125              	.LVL4:
 126 0000 10B5     		push	{r4, lr}
 127              		.cfi_def_cfa_offset 8
 128              		.cfi_offset 4, -8
 129              		.cfi_offset 14, -4
 130 0002 041C     		mov	r4, r0
 332:.\Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 333:.\Generated_Source\PSoC4/CyLib.c **** 
 334:.\Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 131              		.loc 1 334 0
 132 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 133              	.LVL5:
 335:.\Generated_Source\PSoC4/CyLib.c **** 
 336:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = ((uint32)(((uint32)divider & CY_SYS_CLK_SELECT_SYSCLK_DIV_MASK) <<
 134              		.loc 1 336 0
 135 0008 0723     		mov	r3, #7
 136 000a 1C40     		and	r4, r3
 137              	.LVL6:
 138 000c E404     		lsl	r4, r4, #19
 337:.\Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 338:.\Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 139              		.loc 1 338 0
 140 000e 0449     		ldr	r1, .L11
 141 0010 0B68     		ldr	r3, [r1]
 142 0012 044A     		ldr	r2, .L11+4
 143 0014 1340     		and	r3, r2
 337:.\Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 144              		.loc 1 337 0
 145 0016 2343     		orr	r3, r4
 336:.\Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 146              		.loc 1 336 0
 147 0018 0B60     		str	r3, [r1]
 339:.\Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT))));
 340:.\Generated_Source\PSoC4/CyLib.c **** 
 341:.\Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 148              		.loc 1 341 0
 149 001a FFF7FEFF 		bl	CyExitCriticalSection
 150              	.LVL7:
 342:.\Generated_Source\PSoC4/CyLib.c **** }
 151              		.loc 1 342 0
 152              		@ sp needed
 153 001e 10BD     		pop	{r4, pc}
 154              	.L12:
 155              		.align	2
 156              	.L11:
 157 0020 00010B40 		.word	1074462976
 158 0024 FFFFC7FF 		.word	-3670017
 159              		.cfi_endproc
 160              	.LFE5:
 161              		.size	CySysClkWriteSysclkDiv, .-CySysClkWriteSysclkDiv
 162              		.section	.text.CySysClkWriteImoFreq,"ax",%progbits
 163              		.align	2
 164              		.global	CySysClkWriteImoFreq
 165              		.code	16
 166              		.thumb_func
 167              		.type	CySysClkWriteImoFreq, %function
 168              	CySysClkWriteImoFreq:
ARM GAS  C:\Users\ELECTR~1\AppData\Local\Temp\ccybjnra.s 			page 10


 169              	.LFB6:
 343:.\Generated_Source\PSoC4/CyLib.c **** 
 344:.\Generated_Source\PSoC4/CyLib.c **** 
 345:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 346:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteImoFreq
 347:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
 348:.\Generated_Source\PSoC4/CyLib.c **** *
 349:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
 350:.\Generated_Source\PSoC4/CyLib.c **** *  Sets the frequency of the IMO.
 351:.\Generated_Source\PSoC4/CyLib.c **** *
 352:.\Generated_Source\PSoC4/CyLib.c **** *  If IMO is currently driving the HFCLK, and if the HFCLK frequency decreases,
 353:.\Generated_Source\PSoC4/CyLib.c **** *  you can call CySysFlashSetWaitCycles () to improve CPU performance. See
 354:.\Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles () for more information.
 355:.\Generated_Source\PSoC4/CyLib.c **** *
 356:.\Generated_Source\PSoC4/CyLib.c **** *  For PSoC 4000 family of devices, maximum HFCLK frequency is 16 MHz. If IMO is
 357:.\Generated_Source\PSoC4/CyLib.c **** *  configured to frequencies above 16 MHz, ensure to set the appropriate HFCLK
 358:.\Generated_Source\PSoC4/CyLib.c **** *  predivider value first.
 359:.\Generated_Source\PSoC4/CyLib.c **** *
 360:.\Generated_Source\PSoC4/CyLib.c **** *  For PSoC 4100M/PSoC 4200M devices, if WCO lock feature is enabled then this
 361:.\Generated_Source\PSoC4/CyLib.c **** *  API will disable the lock, write the new IMO frequency and then re-enable the
 362:.\Generated_Source\PSoC4/CyLib.c **** *  lock.
 363:.\Generated_Source\PSoC4/CyLib.c **** *
 364:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
 365:.\Generated_Source\PSoC4/CyLib.c **** *  All PSoC 4 families excluding PSoC 4000: Valid range [3-48] with step size
 366:.\Generated_Source\PSoC4/CyLib.c **** *  equals 1.
 367:.\Generated_Source\PSoC4/CyLib.c **** *
 368:.\Generated_Source\PSoC4/CyLib.c **** *  PSoC 4000: Valid range [24-48] with step size equals 4.
 369:.\Generated_Source\PSoC4/CyLib.c **** *
 370:.\Generated_Source\PSoC4/CyLib.c **** *  Note: The CPU is halted if new frequency is invalid and project is
 371:.\Generated_Source\PSoC4/CyLib.c **** *  compiled in debug mode.
 372:.\Generated_Source\PSoC4/CyLib.c **** *
 373:.\Generated_Source\PSoC4/CyLib.c **** * Return:
 374:.\Generated_Source\PSoC4/CyLib.c **** *  None
 375:.\Generated_Source\PSoC4/CyLib.c **** *
 376:.\Generated_Source\PSoC4/CyLib.c **** * Side Effects:
 377:.\Generated_Source\PSoC4/CyLib.c **** *  If the SYSCLK clock frequency increases during the device operation, call
 378:.\Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 379:.\Generated_Source\PSoC4/CyLib.c **** *  of clock cycles the cache will wait before sampling data comes back from
 380:.\Generated_Source\PSoC4/CyLib.c **** *  Flash. If the SYSCLK clock frequency decreases, you can call
 381:.\Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles() to improve the CPU performance. See
 382:.\Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles() description for more information.
 383:.\Generated_Source\PSoC4/CyLib.c **** *
 384:.\Generated_Source\PSoC4/CyLib.c **** *  PSoC 4000: The System Clock (SYSCLK) has maximum speed of 16 MHz, so HFCLK
 385:.\Generated_Source\PSoC4/CyLib.c **** *  and SYSCLK dividers should be selected in a way, to not to exceed 16 MHz for
 386:.\Generated_Source\PSoC4/CyLib.c **** *  the System clock.
 387:.\Generated_Source\PSoC4/CyLib.c **** *
 388:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 389:.\Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
 390:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 391:.\Generated_Source\PSoC4/CyLib.c ****     {
 170              		.loc 1 391 0
 171              		.cfi_startproc
 172              	.LVL8:
 173 0000 10B5     		push	{r4, lr}
 174              		.cfi_def_cfa_offset 8
 175              		.cfi_offset 4, -8
 176              		.cfi_offset 14, -4
ARM GAS  C:\Users\ELECTR~1\AppData\Local\Temp\ccybjnra.s 			page 11


 177 0002 86B0     		sub	sp, sp, #24
 178              		.cfi_def_cfa_offset 32
 179 0004 041C     		mov	r4, r0
 392:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 393:.\Generated_Source\PSoC4/CyLib.c ****             volatile uint32   parameters[2u];
 394:.\Generated_Source\PSoC4/CyLib.c ****             volatile uint32   regValues[4u];
 395:.\Generated_Source\PSoC4/CyLib.c ****         #else
 396:.\Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim4;
 397:.\Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim5;
 398:.\Generated_Source\PSoC4/CyLib.c ****             uint8  newImoTrim2Value;
 399:.\Generated_Source\PSoC4/CyLib.c ****             uint8  currentImoTrim2Value;
 400:.\Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FM) */
 401:.\Generated_Source\PSoC4/CyLib.c **** 
 402:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_PSOC4_4100M || CY_PSOC4_4200M)
 403:.\Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 404:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* #if (CY_PSOC4_4100M || CY_PSOC4_4200M) */
 405:.\Generated_Source\PSoC4/CyLib.c **** 
 406:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 407:.\Generated_Source\PSoC4/CyLib.c **** 
 408:.\Generated_Source\PSoC4/CyLib.c **** 
 409:.\Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 180              		.loc 1 409 0
 181 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 182              	.LVL9:
 410:.\Generated_Source\PSoC4/CyLib.c **** 
 411:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_PSOC4_4100M || CY_PSOC4_4200M)
 412:.\Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkImoGetWcoLock())
 413:.\Generated_Source\PSoC4/CyLib.c ****             {
 414:.\Generated_Source\PSoC4/CyLib.c ****                 wcoLock = 1u;
 415:.\Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoDisableWcoLock();
 416:.\Generated_Source\PSoC4/CyLib.c ****             }
 417:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* #if (CY_PSOC4_4100M || CY_PSOC4_4200M) */
 418:.\Generated_Source\PSoC4/CyLib.c **** 
 419:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 420:.\Generated_Source\PSoC4/CyLib.c **** 
 421:.\Generated_Source\PSoC4/CyLib.c ****             /* FM-Lite Clock Restore */
 422:.\Generated_Source\PSoC4/CyLib.c ****             regValues[0u] = CY_SYS_CLK_IMO_CONFIG_REG;
 183              		.loc 1 422 0
 184 000a 0E4B     		ldr	r3, .L14
 185 000c 1B68     		ldr	r3, [r3]
 186 000e 0093     		str	r3, [sp]
 423:.\Generated_Source\PSoC4/CyLib.c ****             regValues[1u] = CY_SYS_CLK_SELECT_REG;
 187              		.loc 1 423 0
 188 0010 0D4B     		ldr	r3, .L14+4
 189 0012 1B68     		ldr	r3, [r3]
 190 0014 0193     		str	r3, [sp, #4]
 424:.\Generated_Source\PSoC4/CyLib.c ****             regValues[2u] = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 191              		.loc 1 424 0
 192 0016 033C     		sub	r4, r4, #3
 193              	.LVL10:
 194 0018 0C4B     		ldr	r3, .L14+8
 195 001a 1B5D     		ldrb	r3, [r3, r4]
 196 001c 0293     		str	r3, [sp, #8]
 425:.\Generated_Source\PSoC4/CyLib.c ****             regValues[3u] = CY_FLASH_CTL_REG;
 197              		.loc 1 425 0
 198 001e 0C4B     		ldr	r3, .L14+12
 199 0020 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\ELECTR~1\AppData\Local\Temp\ccybjnra.s 			page 12


 200 0022 0393     		str	r3, [sp, #12]
 426:.\Generated_Source\PSoC4/CyLib.c **** 
 427:.\Generated_Source\PSoC4/CyLib.c ****             parameters[0u] =
 201              		.loc 1 427 0
 202 0024 04AA     		add	r2, sp, #16
 203 0026 0B4B     		ldr	r3, .L14+16
 204 0028 0493     		str	r3, [sp, #16]
 428:.\Generated_Source\PSoC4/CyLib.c ****                 (uint32) ((CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_CLK_RESTORE) <<  CY_FLASH_PARAM_KEY
 429:.\Generated_Source\PSoC4/CyLib.c ****                             CY_FLASH_KEY_ONE);
 430:.\Generated_Source\PSoC4/CyLib.c ****             parameters[1u] = (uint32) &regValues[0u];
 205              		.loc 1 430 0
 206 002a 6B46     		mov	r3, sp
 207 002c 0593     		str	r3, [sp, #20]
 431:.\Generated_Source\PSoC4/CyLib.c **** 
 432:.\Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 208              		.loc 1 432 0
 209 002e 0A4B     		ldr	r3, .L14+20
 210 0030 1A60     		str	r2, [r3]
 433:.\Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_RESTORE;
 211              		.loc 1 433 0
 212 0032 0A49     		ldr	r1, .L14+24
 213 0034 0A4A     		ldr	r2, .L14+28
 214 0036 1160     		str	r1, [r2]
 434:.\Generated_Source\PSoC4/CyLib.c ****             (void) CY_FLASH_CPUSS_SYSARG_REG;
 215              		.loc 1 434 0
 216 0038 1B68     		ldr	r3, [r3]
 435:.\Generated_Source\PSoC4/CyLib.c **** 
 436:.\Generated_Source\PSoC4/CyLib.c ****         #else /* (CY_IP_FM) */
 437:.\Generated_Source\PSoC4/CyLib.c **** 
 438:.\Generated_Source\PSoC4/CyLib.c ****         if ((freq >= CY_SYS_CLK_IMO_MIN_FREQ_MHZ) && (freq <= CY_SYS_CLK_IMO_MAX_FREQ_MHZ))
 439:.\Generated_Source\PSoC4/CyLib.c ****         {
 440:.\Generated_Source\PSoC4/CyLib.c ****             if(freq <= CY_SFLASH_IMO_MAXF0_REG)
 441:.\Generated_Source\PSoC4/CyLib.c ****             {
 442:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS0_REG;
 443:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 444:.\Generated_Source\PSoC4/CyLib.c ****             }
 445:.\Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF1_REG)
 446:.\Generated_Source\PSoC4/CyLib.c ****             {
 447:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS1_REG;
 448:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
 449:.\Generated_Source\PSoC4/CyLib.c ****             }
 450:.\Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF2_REG)
 451:.\Generated_Source\PSoC4/CyLib.c ****             {
 452:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS2_REG;
 453:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 454:.\Generated_Source\PSoC4/CyLib.c ****             }
 455:.\Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF3_REG)
 456:.\Generated_Source\PSoC4/CyLib.c ****             {
 457:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS3_REG;
 458:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 459:.\Generated_Source\PSoC4/CyLib.c ****             }
 460:.\Generated_Source\PSoC4/CyLib.c ****             else
 461:.\Generated_Source\PSoC4/CyLib.c ****             {
 462:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS4_REG;
 463:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 464:.\Generated_Source\PSoC4/CyLib.c ****             }
 465:.\Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\ELECTR~1\AppData\Local\Temp\ccybjnra.s 			page 13


 466:.\Generated_Source\PSoC4/CyLib.c ****             /* Get IMO_TRIM2 value for the new frequency */
 467:.\Generated_Source\PSoC4/CyLib.c ****             newImoTrim2Value = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 468:.\Generated_Source\PSoC4/CyLib.c **** 
 469:.\Generated_Source\PSoC4/CyLib.c **** 
 470:.\Generated_Source\PSoC4/CyLib.c ****             /**********************************************`*****************************
 471:.\Generated_Source\PSoC4/CyLib.c ****             * The IMO can have a different trim per frequency. To avoid possible corner
 472:.\Generated_Source\PSoC4/CyLib.c ****             * cases where a trim change can exceed the maximum frequency, the trim must
 473:.\Generated_Source\PSoC4/CyLib.c ****             * be applied at a frequency that is low enough.
 474:.\Generated_Source\PSoC4/CyLib.c ****             *
 475:.\Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 476:.\Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 477:.\Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 478:.\Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 479:.\Generated_Source\PSoC4/CyLib.c ****             if ((newImoTrim2Value >= CY_SYS_CLK_IMO_BOUNDARY_FREQ_TRIM2) && (freq >= CY_SYS_CLK_IMO
 480:.\Generated_Source\PSoC4/CyLib.c ****             {
 481:.\Generated_Source\PSoC4/CyLib.c ****                 /* Set boundary IMO frequency: safe for IMO above 48 MHZ trimming */
 482:.\Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = (uint32) cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_TEMP_FREQ_MHZ -
 483:.\Generated_Source\PSoC4/CyLib.c ****                                                                      CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 484:.\Generated_Source\PSoC4/CyLib.c **** 
 485:.\Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 486:.\Generated_Source\PSoC4/CyLib.c **** 
 487:.\Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = CY_SYS_CLK_IMO_TEMP_FREQ_TRIM2;
 488:.\Generated_Source\PSoC4/CyLib.c ****             }
 489:.\Generated_Source\PSoC4/CyLib.c ****             else
 490:.\Generated_Source\PSoC4/CyLib.c ****             {
 491:.\Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = (uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS
 492:.\Generated_Source\PSoC4/CyLib.c ****             }
 493:.\Generated_Source\PSoC4/CyLib.c **** 
 494:.\Generated_Source\PSoC4/CyLib.c **** 
 495:.\Generated_Source\PSoC4/CyLib.c ****             /***************************************************************************
 496:.\Generated_Source\PSoC4/CyLib.c ****             * A trim change needs to be allowed to settle (within 5us) before the Freq
 497:.\Generated_Source\PSoC4/CyLib.c ****             * can be changed to a new frequency.
 498:.\Generated_Source\PSoC4/CyLib.c ****             *
 499:.\Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 500:.\Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 501:.\Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 502:.\Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 503:.\Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value < currentImoTrim2Value)
 504:.\Generated_Source\PSoC4/CyLib.c ****             {
 505:.\Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 506:.\Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 507:.\Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 508:.\Generated_Source\PSoC4/CyLib.c ****             }
 509:.\Generated_Source\PSoC4/CyLib.c **** 
 510:.\Generated_Source\PSoC4/CyLib.c ****             /* Set trims for the new IMO frequency */
 511:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_T
 512:.\Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 513:.\Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 514:.\Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 515:.\Generated_Source\PSoC4/CyLib.c **** 
 516:.\Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value > currentImoTrim2Value)
 517:.\Generated_Source\PSoC4/CyLib.c ****             {
 518:.\Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 519:.\Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 520:.\Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 521:.\Generated_Source\PSoC4/CyLib.c ****             }
 522:.\Generated_Source\PSoC4/CyLib.c ****         }
ARM GAS  C:\Users\ELECTR~1\AppData\Local\Temp\ccybjnra.s 			page 14


 523:.\Generated_Source\PSoC4/CyLib.c ****         else
 524:.\Generated_Source\PSoC4/CyLib.c ****         {
 525:.\Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 526:.\Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 527:.\Generated_Source\PSoC4/CyLib.c ****         }
 528:.\Generated_Source\PSoC4/CyLib.c **** 
 529:.\Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FMLT) */
 530:.\Generated_Source\PSoC4/CyLib.c **** 
 531:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_PSOC4_4100M || CY_PSOC4_4200M)
 532:.\Generated_Source\PSoC4/CyLib.c ****             if (1u == wcoLock)
 533:.\Generated_Source\PSoC4/CyLib.c ****             {
 534:.\Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableWcoLock();
 535:.\Generated_Source\PSoC4/CyLib.c ****             }
 536:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* #if (CY_PSOC4_4100M || CY_PSOC4_4200M) */
 537:.\Generated_Source\PSoC4/CyLib.c **** 
 538:.\Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 217              		.loc 1 538 0
 218 003a FFF7FEFF 		bl	CyExitCriticalSection
 219              	.LVL11:
 539:.\Generated_Source\PSoC4/CyLib.c ****     }
 220              		.loc 1 539 0
 221 003e 06B0     		add	sp, sp, #24
 222              		@ sp needed
 223              	.LVL12:
 224 0040 10BD     		pop	{r4, pc}
 225              	.L15:
 226 0042 C046     		.align	2
 227              	.L14:
 228 0044 08010B40 		.word	1074462984
 229 0048 00010B40 		.word	1074462976
 230 004c 00000000 		.word	.LANCHOR0
 231 0050 30001040 		.word	1074790448
 232 0054 B6EA0000 		.word	60086
 233 0058 08001040 		.word	1074790408
 234 005c 17000080 		.word	-2147483625
 235 0060 04001040 		.word	1074790404
 236              		.cfi_endproc
 237              	.LFE6:
 238              		.size	CySysClkWriteImoFreq, .-CySysClkWriteImoFreq
 239              		.section	.text.CySysClkEcoStop,"ax",%progbits
 240              		.align	2
 241              		.global	CySysClkEcoStop
 242              		.code	16
 243              		.thumb_func
 244              		.type	CySysClkEcoStop, %function
 245              	CySysClkEcoStop:
 246              	.LFB8:
 540:.\Generated_Source\PSoC4/CyLib.c **** 
 541:.\Generated_Source\PSoC4/CyLib.c **** #else
 542:.\Generated_Source\PSoC4/CyLib.c **** 
 543:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 544:.\Generated_Source\PSoC4/CyLib.c ****     {
 545:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 546:.\Generated_Source\PSoC4/CyLib.c **** 
 547:.\Generated_Source\PSoC4/CyLib.c ****         if ((freq == 24u) || (freq == 32u) || (freq == 48u))
 548:.\Generated_Source\PSoC4/CyLib.c ****         {
 549:.\Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
ARM GAS  C:\Users\ELECTR~1\AppData\Local\Temp\ccybjnra.s 			page 15


 550:.\Generated_Source\PSoC4/CyLib.c **** 
 551:.\Generated_Source\PSoC4/CyLib.c ****             /* Set IMO to 24 MHz - CLK_IMO_SELECT.FREQ = 0 */
 552:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_SELECT_REG &= ((uint32) ~CY_SYS_CLK_IMO_SELECT_FREQ_MASK);
 553:.\Generated_Source\PSoC4/CyLib.c **** 
 554:.\Generated_Source\PSoC4/CyLib.c ****             /* Apply coarse trim */
 555:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (CY_SYS_CLK_IMO_TRIM1_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM1_
 556:.\Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM1_
 557:.\Generated_Source\PSoC4/CyLib.c **** 
 558:.\Generated_Source\PSoC4/CyLib.c ****             /* Zero out fine trim */
 559:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM2_REG = CY_SYS_CLK_IMO_TRIM2_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM2_F
 560:.\Generated_Source\PSoC4/CyLib.c **** 
 561:.\Generated_Source\PSoC4/CyLib.c ****             /* Apply TC trim */
 562:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM3_REG = (CY_SYS_CLK_IMO_TRIM3_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM3_
 563:.\Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
 564:.\Generated_Source\PSoC4/CyLib.c **** 
 565:.\Generated_Source\PSoC4/CyLib.c ****             CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_US);
 566:.\Generated_Source\PSoC4/CyLib.c **** 
 567:.\Generated_Source\PSoC4/CyLib.c ****             if (freq > CY_SYS_CLK_IMO_MIN_FREQ_MHZ)
 568:.\Generated_Source\PSoC4/CyLib.c ****             {
 569:.\Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
 570:.\Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
 571:.\Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
 572:.\Generated_Source\PSoC4/CyLib.c **** 
 573:.\Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_US);
 574:.\Generated_Source\PSoC4/CyLib.c **** 
 575:.\Generated_Source\PSoC4/CyLib.c ****                 /* Make small step to final frequency */
 576:.\Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
 577:.\Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
 578:.\Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
 579:.\Generated_Source\PSoC4/CyLib.c ****             }
 580:.\Generated_Source\PSoC4/CyLib.c **** 
 581:.\Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 582:.\Generated_Source\PSoC4/CyLib.c ****         }
 583:.\Generated_Source\PSoC4/CyLib.c ****         else
 584:.\Generated_Source\PSoC4/CyLib.c ****         {
 585:.\Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 586:.\Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 587:.\Generated_Source\PSoC4/CyLib.c ****         }
 588:.\Generated_Source\PSoC4/CyLib.c ****     }
 589:.\Generated_Source\PSoC4/CyLib.c **** 
 590:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
 591:.\Generated_Source\PSoC4/CyLib.c **** 
 592:.\Generated_Source\PSoC4/CyLib.c **** 
 593:.\Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSLT)
 594:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 595:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkWriteHfclkDiv
 596:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 597:.\Generated_Source\PSoC4/CyLib.c ****     *
 598:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
 599:.\Generated_Source\PSoC4/CyLib.c ****     *  Selects the pre-scaler divider value for HFCLK from IMO.
 600:.\Generated_Source\PSoC4/CyLib.c ****     *
 601:.\Generated_Source\PSoC4/CyLib.c ****     *  The HFCLK predivider allows the device to divide the HFCLK selection mux
 602:.\Generated_Source\PSoC4/CyLib.c ****     *  input before use as HFCLK. The predivider is capable of dividing the HFCLK by
 603:.\Generated_Source\PSoC4/CyLib.c ****     *  powers of 2 between 1 and 8.
 604:.\Generated_Source\PSoC4/CyLib.c ****     *
 605:.\Generated_Source\PSoC4/CyLib.c ****     *  Note HFCLK's frequency cannot exceed 16 MHz. This API is applicable for
 606:.\Generated_Source\PSoC4/CyLib.c ****     *  PSoC 4000 family of devices only.
ARM GAS  C:\Users\ELECTR~1\AppData\Local\Temp\ccybjnra.s 			page 16


 607:.\Generated_Source\PSoC4/CyLib.c ****     *
 608:.\Generated_Source\PSoC4/CyLib.c ****     *
 609:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 610:.\Generated_Source\PSoC4/CyLib.c ****     *  divider: HF clock divider value
 611:.\Generated_Source\PSoC4/CyLib.c ****     *   Define                        Description
 612:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_CLK_HFCLK_DIV_NODIV    Transparent mode (w/o dividing)
 613:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_CLK_HFCLK_DIV_2        Divide selected clock source by 2
 614:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_CLK_HFCLK_DIV_4        Divide selected clock source by 4
 615:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_CLK_HFCLK_DIV_8        Divide selected clock source by 8
 616:.\Generated_Source\PSoC4/CyLib.c ****     *
 617:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
 618:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 619:.\Generated_Source\PSoC4/CyLib.c ****     *
 620:.\Generated_Source\PSoC4/CyLib.c ****     * Side Effects:
 621:.\Generated_Source\PSoC4/CyLib.c ****     *  If the SYSCLK clock frequency increases during the device operation, call
 622:.\Generated_Source\PSoC4/CyLib.c ****     *  CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 623:.\Generated_Source\PSoC4/CyLib.c ****     *  of clock cycles the cache will wait before sampling data comes back from
 624:.\Generated_Source\PSoC4/CyLib.c ****     *  Flash. If the SYSCLK clock frequency decreases, you can call
 625:.\Generated_Source\PSoC4/CyLib.c ****     *  CySysFlashSetWaitCycles() to improve the CPU performance. See
 626:.\Generated_Source\PSoC4/CyLib.c ****     *  CySysFlashSetWaitCycles() description for more information.
 627:.\Generated_Source\PSoC4/CyLib.c ****     *
 628:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 629:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteHfclkDiv(uint32 divider)
 630:.\Generated_Source\PSoC4/CyLib.c ****     {
 631:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 632:.\Generated_Source\PSoC4/CyLib.c **** 
 633:.\Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 634:.\Generated_Source\PSoC4/CyLib.c **** 
 635:.\Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & ((uint32) (~(CY_SYS_CLK_SELECT_HFCLK_DIV_
 636:.\Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
 637:.\Generated_Source\PSoC4/CyLib.c ****                     ((uint32)((divider & CY_SYS_CLK_SELECT_HFCLK_DIV_MASK) << CY_SYS_CLK_SELECT_HFC
 638:.\Generated_Source\PSoC4/CyLib.c **** 
 639:.\Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 640:.\Generated_Source\PSoC4/CyLib.c ****     }
 641:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT) */
 642:.\Generated_Source\PSoC4/CyLib.c **** 
 643:.\Generated_Source\PSoC4/CyLib.c **** 
 644:.\Generated_Source\PSoC4/CyLib.c **** #if (CY_PSOC4_4100BL || CY_PSOC4_4200BL)
 645:.\Generated_Source\PSoC4/CyLib.c **** 
 646:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 647:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStart
 648:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 649:.\Generated_Source\PSoC4/CyLib.c ****     *
 650:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
 651:.\Generated_Source\PSoC4/CyLib.c ****     *  Starts the External Crystal Oscillator (ECO). Refer to the device datasheet
 652:.\Generated_Source\PSoC4/CyLib.c ****     *  for the ECO startup time.
 653:.\Generated_Source\PSoC4/CyLib.c ****     *
 654:.\Generated_Source\PSoC4/CyLib.c ****     *  The timeout interval is measured based on the system frequency defined by
 655:.\Generated_Source\PSoC4/CyLib.c ****     *  PSoC Creator at build time. If System clock frequency is changed in
 656:.\Generated_Source\PSoC4/CyLib.c ****     *  runtime, the CyDelayFreq() with the appropriate parameter should be called.
 657:.\Generated_Source\PSoC4/CyLib.c ****     *
 658:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 659:.\Generated_Source\PSoC4/CyLib.c ****     *  timeoutUs: Timeout in microseconds. If zero is specified, the function
 660:.\Generated_Source\PSoC4/CyLib.c ****     *             starts the crystal and returns CYRET_SUCCESS. If non-zero
 661:.\Generated_Source\PSoC4/CyLib.c ****     *             value is passed, the CYRET_SUCCESS is returned once crystal
 662:.\Generated_Source\PSoC4/CyLib.c ****     *             is oscillating and amplitude reached 60% and it does not mean
 663:.\Generated_Source\PSoC4/CyLib.c ****     *             24 MHz crystal is within 50 ppm. If it is not oscillating or
ARM GAS  C:\Users\ELECTR~1\AppData\Local\Temp\ccybjnra.s 			page 17


 664:.\Generated_Source\PSoC4/CyLib.c ****     *             amplitude didn't reach 60% after specified amount of time, the
 665:.\Generated_Source\PSoC4/CyLib.c ****     *             CYRET_TIMEOUT is returned.
 666:.\Generated_Source\PSoC4/CyLib.c ****     *
 667:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
 668:.\Generated_Source\PSoC4/CyLib.c ****     *   CYRET_SUCCESS - Completed successfully. The ECO is oscillating and amplitude
 669:.\Generated_Source\PSoC4/CyLib.c ****     *                   reached 60% and it does not mean 24 MHz crystal is within
 670:.\Generated_Source\PSoC4/CyLib.c ****     *                   50 ppm.
 671:.\Generated_Source\PSoC4/CyLib.c ****     *   CYRET_TIMEOUT - Timeout occurred.
 672:.\Generated_Source\PSoC4/CyLib.c ****     *
 673:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 674:.\Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkEcoStart(uint32 timeoutUs)
 675:.\Generated_Source\PSoC4/CyLib.c ****     {
 676:.\Generated_Source\PSoC4/CyLib.c ****         cystatus status = CYRET_SUCCESS;
 677:.\Generated_Source\PSoC4/CyLib.c **** 
 678:.\Generated_Source\PSoC4/CyLib.c ****         /* Enable the RF oscillator band gap */
 679:.\Generated_Source\PSoC4/CyLib.c ****         CY_SYS_XTAL_BLESS_RF_CONFIG_REG |= CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
 680:.\Generated_Source\PSoC4/CyLib.c **** 
 681:.\Generated_Source\PSoC4/CyLib.c ****         /* Update trimming register */
 682:.\Generated_Source\PSoC4/CyLib.c ****         CY_SYS_XTAL_BLERD_BB_XO_REG = CY_SYS_XTAL_BLERD_BB_XO_TRIM;
 683:.\Generated_Source\PSoC4/CyLib.c **** 
 684:.\Generated_Source\PSoC4/CyLib.c ****         /* Enable the Crystal */
 685:.\Generated_Source\PSoC4/CyLib.c ****         CY_SYS_XTAL_BLERD_DBUS_REG |= CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
 686:.\Generated_Source\PSoC4/CyLib.c **** 
 687:.\Generated_Source\PSoC4/CyLib.c ****         if(timeoutUs > 0u)
 688:.\Generated_Source\PSoC4/CyLib.c ****         {
 689:.\Generated_Source\PSoC4/CyLib.c ****             status = CYRET_TIMEOUT;
 690:.\Generated_Source\PSoC4/CyLib.c **** 
 691:.\Generated_Source\PSoC4/CyLib.c ****             for( ; timeoutUs > 0u; timeoutUs--)
 692:.\Generated_Source\PSoC4/CyLib.c ****             {
 693:.\Generated_Source\PSoC4/CyLib.c ****                 CyDelayUs(1u);
 694:.\Generated_Source\PSoC4/CyLib.c **** 
 695:.\Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkEcoReadStatus())
 696:.\Generated_Source\PSoC4/CyLib.c ****                 {
 697:.\Generated_Source\PSoC4/CyLib.c ****                     status = CYRET_SUCCESS;
 698:.\Generated_Source\PSoC4/CyLib.c ****                     break;
 699:.\Generated_Source\PSoC4/CyLib.c ****                 }
 700:.\Generated_Source\PSoC4/CyLib.c ****             }
 701:.\Generated_Source\PSoC4/CyLib.c **** 
 702:.\Generated_Source\PSoC4/CyLib.c ****         }
 703:.\Generated_Source\PSoC4/CyLib.c **** 
 704:.\Generated_Source\PSoC4/CyLib.c ****         return(status);
 705:.\Generated_Source\PSoC4/CyLib.c ****     }
 706:.\Generated_Source\PSoC4/CyLib.c **** 
 707:.\Generated_Source\PSoC4/CyLib.c **** 
 708:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 709:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStop
 710:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 711:.\Generated_Source\PSoC4/CyLib.c ****     *
 712:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
 713:.\Generated_Source\PSoC4/CyLib.c ****     *  Stops the megahertz crystal.
 714:.\Generated_Source\PSoC4/CyLib.c ****     *
 715:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 716:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 717:.\Generated_Source\PSoC4/CyLib.c ****     *
 718:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
 719:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 720:.\Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\ELECTR~1\AppData\Local\Temp\ccybjnra.s 			page 18


 721:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 722:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkEcoStop(void)
 723:.\Generated_Source\PSoC4/CyLib.c ****     {
 247              		.loc 1 723 0
 248              		.cfi_startproc
 724:.\Generated_Source\PSoC4/CyLib.c ****         /* Disable the RF oscillator band gap */
 725:.\Generated_Source\PSoC4/CyLib.c ****         CY_SYS_XTAL_BLESS_RF_CONFIG_REG &= (uint32) ~CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
 249              		.loc 1 725 0
 250 0000 054A     		ldr	r2, .L17
 251 0002 1368     		ldr	r3, [r2]
 252 0004 0121     		mov	r1, #1
 253 0006 8B43     		bic	r3, r1
 254 0008 1360     		str	r3, [r2]
 726:.\Generated_Source\PSoC4/CyLib.c **** 
 727:.\Generated_Source\PSoC4/CyLib.c ****         /* Disable the Crystal */
 728:.\Generated_Source\PSoC4/CyLib.c ****         CY_SYS_XTAL_BLERD_DBUS_REG &= (uint32) ~CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
 255              		.loc 1 728 0
 256 000a 044A     		ldr	r2, .L17+4
 257 000c 1168     		ldr	r1, [r2]
 258 000e 044B     		ldr	r3, .L17+8
 259 0010 0B40     		and	r3, r1
 260 0012 1360     		str	r3, [r2]
 729:.\Generated_Source\PSoC4/CyLib.c ****     }
 261              		.loc 1 729 0
 262              		@ sp needed
 263 0014 7047     		bx	lr
 264              	.L18:
 265 0016 C046     		.align	2
 266              	.L17:
 267 0018 60F02E40 		.word	1076818016
 268 001c 10002E40 		.word	1076756496
 269 0020 FF7FFFFF 		.word	-32769
 270              		.cfi_endproc
 271              	.LFE8:
 272              		.size	CySysClkEcoStop, .-CySysClkEcoStop
 273              		.section	.text.CySysClkEcoReadStatus,"ax",%progbits
 274              		.align	2
 275              		.global	CySysClkEcoReadStatus
 276              		.code	16
 277              		.thumb_func
 278              		.type	CySysClkEcoReadStatus, %function
 279              	CySysClkEcoReadStatus:
 280              	.LFB9:
 730:.\Generated_Source\PSoC4/CyLib.c **** 
 731:.\Generated_Source\PSoC4/CyLib.c **** 
 732:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 733:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoReadStatus
 734:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 735:.\Generated_Source\PSoC4/CyLib.c ****     *
 736:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
 737:.\Generated_Source\PSoC4/CyLib.c ****     *  Read status bit (50 ppm reached) for the megahertz crystal.
 738:.\Generated_Source\PSoC4/CyLib.c ****     *
 739:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 740:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 741:.\Generated_Source\PSoC4/CyLib.c ****     *
 742:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
 743:.\Generated_Source\PSoC4/CyLib.c ****     *  Non-zero indicates that XTAL output reached 50 ppm.
ARM GAS  C:\Users\ELECTR~1\AppData\Local\Temp\ccybjnra.s 			page 19


 744:.\Generated_Source\PSoC4/CyLib.c ****     *
 745:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 746:.\Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkEcoReadStatus(void)
 747:.\Generated_Source\PSoC4/CyLib.c ****     {
 281              		.loc 1 747 0
 282              		.cfi_startproc
 748:.\Generated_Source\PSoC4/CyLib.c ****         return (CY_SYS_XTAL_BLERD_FSM_REG & CY_SYS_XTAL_BLERD_FSM_XO_AMP_DETECT);
 283              		.loc 1 748 0
 284 0000 024B     		ldr	r3, .L20
 285 0002 1B68     		ldr	r3, [r3]
 286 0004 0120     		mov	r0, #1
 287 0006 1840     		and	r0, r3
 749:.\Generated_Source\PSoC4/CyLib.c ****     }
 288              		.loc 1 749 0
 289              		@ sp needed
 290 0008 7047     		bx	lr
 291              	.L21:
 292 000a C046     		.align	2
 293              	.L20:
 294 000c 0C002E40 		.word	1076756492
 295              		.cfi_endproc
 296              	.LFE9:
 297              		.size	CySysClkEcoReadStatus, .-CySysClkEcoReadStatus
 298              		.section	.text.CySysLvdDisable,"ax",%progbits
 299              		.align	2
 300              		.global	CySysLvdDisable
 301              		.code	16
 302              		.thumb_func
 303              		.type	CySysLvdDisable, %function
 304              	CySysLvdDisable:
 305              	.LFB12:
 750:.\Generated_Source\PSoC4/CyLib.c **** 
 751:.\Generated_Source\PSoC4/CyLib.c **** 
 752:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 753:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkWriteEcoDiv
 754:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 755:.\Generated_Source\PSoC4/CyLib.c ****     *
 756:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
 757:.\Generated_Source\PSoC4/CyLib.c ****     *  Selects value for the ECO divider.
 758:.\Generated_Source\PSoC4/CyLib.c ****     *
 759:.\Generated_Source\PSoC4/CyLib.c ****     *  The ECO must not be the HFCLK clock source when this function is called.
 760:.\Generated_Source\PSoC4/CyLib.c ****     *  The HFCLK source can be changed to the other clock source by call to the
 761:.\Generated_Source\PSoC4/CyLib.c ****     *  CySysClkWriteHfclkDirect() function. If the ECO sources the HFCLK this
 762:.\Generated_Source\PSoC4/CyLib.c ****     *  function will not have any effect if compiler in release mode, and halt the
 763:.\Generated_Source\PSoC4/CyLib.c ****     *  CPU when compiler in debug mode.
 764:.\Generated_Source\PSoC4/CyLib.c ****     *
 765:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 766:.\Generated_Source\PSoC4/CyLib.c ****     *  divider: Power of 2 divider selection.
 767:.\Generated_Source\PSoC4/CyLib.c ****     *
 768:.\Generated_Source\PSoC4/CyLib.c ****     *   Define                        Description
 769:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_CLK_ECO_DIV1             HFCLK = ECO / 1
 770:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_CLK_ECO_DIV2             HFCLK = ECO / 2
 771:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_CLK_ECO_DIV4             HFCLK = ECO / 4
 772:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_CLK_ECO_DIV8             HFCLK = ECO / 8
 773:.\Generated_Source\PSoC4/CyLib.c ****     *
 774:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
 775:.\Generated_Source\PSoC4/CyLib.c ****     *  None
ARM GAS  C:\Users\ELECTR~1\AppData\Local\Temp\ccybjnra.s 			page 20


 776:.\Generated_Source\PSoC4/CyLib.c ****     *
 777:.\Generated_Source\PSoC4/CyLib.c ****     * Side Effects:
 778:.\Generated_Source\PSoC4/CyLib.c ****     *  If the SYSCLK clock frequency increases during the device operation, call
 779:.\Generated_Source\PSoC4/CyLib.c ****     *  CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 780:.\Generated_Source\PSoC4/CyLib.c ****     *  of clock cycles the cache will wait before sampling data comes back from
 781:.\Generated_Source\PSoC4/CyLib.c ****     *  Flash. If the SYSCLK clock frequency decreases, you can call
 782:.\Generated_Source\PSoC4/CyLib.c ****     *  CySysFlashSetWaitCycles() to improve the CPU performance. See
 783:.\Generated_Source\PSoC4/CyLib.c ****     *  CySysFlashSetWaitCycles() description for more information.
 784:.\Generated_Source\PSoC4/CyLib.c ****     *
 785:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 786:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteEcoDiv(uint32 divider)
 787:.\Generated_Source\PSoC4/CyLib.c ****     {
 788:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 789:.\Generated_Source\PSoC4/CyLib.c **** 
 790:.\Generated_Source\PSoC4/CyLib.c ****         if (CY_SYS_CLK_HFCLK_ECO != (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK))
 791:.\Generated_Source\PSoC4/CyLib.c ****         {
 792:.\Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 793:.\Generated_Source\PSoC4/CyLib.c **** 
 794:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG =  (divider & CY_SYS_CLK_XTAL_CLK_DIV_MASK) |
 795:.\Generated_Source\PSoC4/CyLib.c ****                                                   (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint32) ~
 796:.\Generated_Source\PSoC4/CyLib.c **** 
 797:.\Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 798:.\Generated_Source\PSoC4/CyLib.c ****         }
 799:.\Generated_Source\PSoC4/CyLib.c ****         else
 800:.\Generated_Source\PSoC4/CyLib.c ****         {
 801:.\Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if ECO sources HFCLK */
 802:.\Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 803:.\Generated_Source\PSoC4/CyLib.c ****         }
 804:.\Generated_Source\PSoC4/CyLib.c ****     }
 805:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_PSOC4_4100BL || CY_PSOC4_4200BL) */
 806:.\Generated_Source\PSoC4/CyLib.c **** 
 807:.\Generated_Source\PSoC4/CyLib.c **** 
 808:.\Generated_Source\PSoC4/CyLib.c **** 
 809:.\Generated_Source\PSoC4/CyLib.c **** 
 810:.\Generated_Source\PSoC4/CyLib.c **** 
 811:.\Generated_Source\PSoC4/CyLib.c **** 
 812:.\Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
 813:.\Generated_Source\PSoC4/CyLib.c **** 
 814:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 815:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdEnable
 816:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 817:.\Generated_Source\PSoC4/CyLib.c ****     *
 818:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
 819:.\Generated_Source\PSoC4/CyLib.c ****     *  Enables the output of the low-voltage monitor when Vddd is at or below the
 820:.\Generated_Source\PSoC4/CyLib.c ****     *  trip point, configures the device to generate an interrupt, and sets the
 821:.\Generated_Source\PSoC4/CyLib.c ****     *  voltage trip level.
 822:.\Generated_Source\PSoC4/CyLib.c ****     *
 823:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 824:.\Generated_Source\PSoC4/CyLib.c ****     *  threshold: Threshold selection for Low Voltage Detect circuit.
 825:.\Generated_Source\PSoC4/CyLib.c ****     *  Threshold variation is +/- 2.5% from these typical voltage choices.
 826:.\Generated_Source\PSoC4/CyLib.c ****     *         Define                     Voltage threshold
 827:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_75_V       1.7500 V
 828:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_80_V       1.8000 V
 829:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_90_V       1.9000 V
 830:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_00_V       2.0000 V
 831:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_10_V       2.1000 V
 832:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_20_V       2.2000 V
ARM GAS  C:\Users\ELECTR~1\AppData\Local\Temp\ccybjnra.s 			page 21


 833:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_30_V       2.3000 V
 834:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_40_V       2.4000 V
 835:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_50_V       2.5000 V
 836:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_60_V       2.6000 V
 837:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_70_V       2.7000 V
 838:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_80_V       2.8000 V
 839:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_90_V       2.9000 V
 840:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_00_V       3.0000 V
 841:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_20_V       3.2000 V
 842:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_4_50_V       4.5000 V
 843:.\Generated_Source\PSoC4/CyLib.c ****     *
 844:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
 845:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 846:.\Generated_Source\PSoC4/CyLib.c ****     *
 847:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 848:.\Generated_Source\PSoC4/CyLib.c ****     void CySysLvdEnable(uint32 threshold)
 849:.\Generated_Source\PSoC4/CyLib.c ****     {
 850:.\Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
 851:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= (uint32) ~CY_LVD_PROPAGATE_INT_TO_CPU;
 852:.\Generated_Source\PSoC4/CyLib.c **** 
 853:.\Generated_Source\PSoC4/CyLib.c ****         /* Set specified threshold */
 854:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG = (CY_LVD_PWR_VMON_CONFIG_REG & ~CY_LVD_PWR_VMON_CONFIG_LVD_SEL_
 855:.\Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 856:.\Generated_Source\PSoC4/CyLib.c **** 
 857:.\Generated_Source\PSoC4/CyLib.c ****         /* Enable the LVD. This may cause a false LVD event. */
 858:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG |= CY_LVD_PWR_VMON_CONFIG_LVD_EN;
 859:.\Generated_Source\PSoC4/CyLib.c **** 
 860:.\Generated_Source\PSoC4/CyLib.c ****         /* Wait for the circuit to stabilize */
 861:.\Generated_Source\PSoC4/CyLib.c ****         CyDelayUs(CY_LVD_STABILIZE_TIMEOUT_US);
 862:.\Generated_Source\PSoC4/CyLib.c **** 
 863:.\Generated_Source\PSoC4/CyLib.c ****         /* Clear the false event */
 864:.\Generated_Source\PSoC4/CyLib.c ****         CySysLvdClearInterrupt();
 865:.\Generated_Source\PSoC4/CyLib.c **** 
 866:.\Generated_Source\PSoC4/CyLib.c ****         /* Unmask the interrupt */
 867:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   |= CY_LVD_PROPAGATE_INT_TO_CPU;
 868:.\Generated_Source\PSoC4/CyLib.c ****     }
 869:.\Generated_Source\PSoC4/CyLib.c **** 
 870:.\Generated_Source\PSoC4/CyLib.c **** 
 871:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 872:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdDisable
 873:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 874:.\Generated_Source\PSoC4/CyLib.c ****     *
 875:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
 876:.\Generated_Source\PSoC4/CyLib.c ****     *  Disables the low voltage detection. A low voltage interrupt is disabled.
 877:.\Generated_Source\PSoC4/CyLib.c ****     *
 878:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 879:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 880:.\Generated_Source\PSoC4/CyLib.c ****     *
 881:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
 882:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 883:.\Generated_Source\PSoC4/CyLib.c ****     *
 884:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 885:.\Generated_Source\PSoC4/CyLib.c ****     void CySysLvdDisable(void)
 886:.\Generated_Source\PSoC4/CyLib.c ****     {
 306              		.loc 1 886 0
 307              		.cfi_startproc
 887:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= ~CY_LVD_PROPAGATE_INT_TO_CPU;
ARM GAS  C:\Users\ELECTR~1\AppData\Local\Temp\ccybjnra.s 			page 22


 308              		.loc 1 887 0
 309 0000 054A     		ldr	r2, .L23
 310 0002 1368     		ldr	r3, [r2]
 311 0004 0221     		mov	r1, #2
 312 0006 8B43     		bic	r3, r1
 313 0008 1360     		str	r3, [r2]
 888:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG &= ~CY_LVD_PWR_VMON_CONFIG_LVD_EN;
 314              		.loc 1 888 0
 315 000a 044A     		ldr	r2, .L23+4
 316 000c 1368     		ldr	r3, [r2]
 317 000e 0139     		sub	r1, r1, #1
 318 0010 8B43     		bic	r3, r1
 319 0012 1360     		str	r3, [r2]
 889:.\Generated_Source\PSoC4/CyLib.c ****     }
 320              		.loc 1 889 0
 321              		@ sp needed
 322 0014 7047     		bx	lr
 323              	.L24:
 324 0016 C046     		.align	2
 325              	.L23:
 326 0018 08000B40 		.word	1074462728
 327 001c 18000B40 		.word	1074462744
 328              		.cfi_endproc
 329              	.LFE12:
 330              		.size	CySysLvdDisable, .-CySysLvdDisable
 331              		.section	.text.CySysLvdGetInterruptSource,"ax",%progbits
 332              		.align	2
 333              		.global	CySysLvdGetInterruptSource
 334              		.code	16
 335              		.thumb_func
 336              		.type	CySysLvdGetInterruptSource, %function
 337              	CySysLvdGetInterruptSource:
 338              	.LFB13:
 890:.\Generated_Source\PSoC4/CyLib.c **** 
 891:.\Generated_Source\PSoC4/CyLib.c **** 
 892:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 893:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdGetInterruptSource
 894:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 895:.\Generated_Source\PSoC4/CyLib.c ****     *
 896:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
 897:.\Generated_Source\PSoC4/CyLib.c ****     *  Gets the low voltage detection interrupt status (without clearing).
 898:.\Generated_Source\PSoC4/CyLib.c ****     *
 899:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 900:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 901:.\Generated_Source\PSoC4/CyLib.c ****     *
 902:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
 903:.\Generated_Source\PSoC4/CyLib.c ****     *  Interrupt request value:
 904:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_SYS_LVD_INT - Indicates an Low Voltage Detect interrupt
 905:.\Generated_Source\PSoC4/CyLib.c ****     *
 906:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 907:.\Generated_Source\PSoC4/CyLib.c ****     uint32 CySysLvdGetInterruptSource(void)
 908:.\Generated_Source\PSoC4/CyLib.c ****     {
 339              		.loc 1 908 0
 340              		.cfi_startproc
 909:.\Generated_Source\PSoC4/CyLib.c ****         return (CY_LVD_PWR_INTR_REG & CY_SYS_LVD_INT);
 341              		.loc 1 909 0
 342 0000 024B     		ldr	r3, .L26
ARM GAS  C:\Users\ELECTR~1\AppData\Local\Temp\ccybjnra.s 			page 23


 343 0002 1B68     		ldr	r3, [r3]
 344 0004 0220     		mov	r0, #2
 345 0006 1840     		and	r0, r3
 910:.\Generated_Source\PSoC4/CyLib.c ****     }
 346              		.loc 1 910 0
 347              		@ sp needed
 348 0008 7047     		bx	lr
 349              	.L27:
 350 000a C046     		.align	2
 351              	.L26:
 352 000c 04000B40 		.word	1074462724
 353              		.cfi_endproc
 354              	.LFE13:
 355              		.size	CySysLvdGetInterruptSource, .-CySysLvdGetInterruptSource
 356              		.section	.text.CySysLvdClearInterrupt,"ax",%progbits
 357              		.align	2
 358              		.global	CySysLvdClearInterrupt
 359              		.code	16
 360              		.thumb_func
 361              		.type	CySysLvdClearInterrupt, %function
 362              	CySysLvdClearInterrupt:
 363              	.LFB14:
 911:.\Generated_Source\PSoC4/CyLib.c **** 
 912:.\Generated_Source\PSoC4/CyLib.c **** 
 913:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 914:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdClearInterrupt
 915:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 916:.\Generated_Source\PSoC4/CyLib.c ****     *
 917:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
 918:.\Generated_Source\PSoC4/CyLib.c ****     *  Clears the low voltage detection interrupt status.
 919:.\Generated_Source\PSoC4/CyLib.c ****     *
 920:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 921:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 922:.\Generated_Source\PSoC4/CyLib.c ****     *
 923:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
 924:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 925:.\Generated_Source\PSoC4/CyLib.c ****     *
 926:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 927:.\Generated_Source\PSoC4/CyLib.c ****     void CySysLvdClearInterrupt(void)
 928:.\Generated_Source\PSoC4/CyLib.c ****     {
 364              		.loc 1 928 0
 365              		.cfi_startproc
 929:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_REG = CY_SYS_LVD_INT;
 366              		.loc 1 929 0
 367 0000 0222     		mov	r2, #2
 368 0002 014B     		ldr	r3, .L29
 369 0004 1A60     		str	r2, [r3]
 930:.\Generated_Source\PSoC4/CyLib.c ****     }
 370              		.loc 1 930 0
 371              		@ sp needed
 372 0006 7047     		bx	lr
 373              	.L30:
 374              		.align	2
 375              	.L29:
 376 0008 04000B40 		.word	1074462724
 377              		.cfi_endproc
 378              	.LFE14:
ARM GAS  C:\Users\ELECTR~1\AppData\Local\Temp\ccybjnra.s 			page 24


 379              		.size	CySysLvdClearInterrupt, .-CySysLvdClearInterrupt
 380              		.section	.text.CySysGetResetReason,"ax",%progbits
 381              		.align	2
 382              		.global	CySysGetResetReason
 383              		.code	16
 384              		.thumb_func
 385              		.type	CySysGetResetReason, %function
 386              	CySysGetResetReason:
 387              	.LFB15:
 931:.\Generated_Source\PSoC4/CyLib.c **** 
 932:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
 933:.\Generated_Source\PSoC4/CyLib.c **** 
 934:.\Generated_Source\PSoC4/CyLib.c **** 
 935:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 936:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysGetResetReason
 937:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
 938:.\Generated_Source\PSoC4/CyLib.c **** *
 939:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
 940:.\Generated_Source\PSoC4/CyLib.c **** *  Reports the cause for the latest reset(s) that occurred in the system. All
 941:.\Generated_Source\PSoC4/CyLib.c **** *  the bits in the RES_CAUSE register assert when the corresponding reset cause
 942:.\Generated_Source\PSoC4/CyLib.c **** *  occurs and must be cleared by the firmware. These bits are cleared by the
 943:.\Generated_Source\PSoC4/CyLib.c **** *  hardware only during XRES, POR, or a detected brown-out.
 944:.\Generated_Source\PSoC4/CyLib.c **** *
 945:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
 946:.\Generated_Source\PSoC4/CyLib.c **** *  reason: bits in the RES_CAUSE register to clear.
 947:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_WDT       - WDT caused a reset
 948:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_PROTFAULT - Occured protection violation that requires reset
 949:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_SW        - Cortex-M0 requested a system reset.
 950:.\Generated_Source\PSoC4/CyLib.c **** *
 951:.\Generated_Source\PSoC4/CyLib.c **** * Return:
 952:.\Generated_Source\PSoC4/CyLib.c **** *  Status. Same enumerated bit values as used for the reason parameter.
 953:.\Generated_Source\PSoC4/CyLib.c **** *
 954:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 955:.\Generated_Source\PSoC4/CyLib.c **** uint32 CySysGetResetReason(uint32 reason)
 956:.\Generated_Source\PSoC4/CyLib.c **** {
 388              		.loc 1 956 0
 389              		.cfi_startproc
 390              	.LVL13:
 391 0000 021C     		mov	r2, r0
 957:.\Generated_Source\PSoC4/CyLib.c ****     uint32 status;
 958:.\Generated_Source\PSoC4/CyLib.c **** 
 959:.\Generated_Source\PSoC4/CyLib.c ****     reason &= (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
 392              		.loc 1 959 0
 393 0002 1920     		mov	r0, #25
 394              	.LVL14:
 395 0004 0240     		and	r2, r0
 396              	.LVL15:
 960:.\Generated_Source\PSoC4/CyLib.c ****     status = CY_SYS_RES_CAUSE_REG &
 397              		.loc 1 960 0
 398 0006 0249     		ldr	r1, .L32
 399 0008 0B68     		ldr	r3, [r1]
 400 000a 1840     		and	r0, r3
 401              	.LVL16:
 961:.\Generated_Source\PSoC4/CyLib.c ****              (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
 962:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_RES_CAUSE_REG = reason;
 402              		.loc 1 962 0
 403 000c 0A60     		str	r2, [r1]
ARM GAS  C:\Users\ELECTR~1\AppData\Local\Temp\ccybjnra.s 			page 25


 963:.\Generated_Source\PSoC4/CyLib.c **** 
 964:.\Generated_Source\PSoC4/CyLib.c ****     return (status);
 965:.\Generated_Source\PSoC4/CyLib.c **** }
 404              		.loc 1 965 0
 405              		@ sp needed
 406 000e 7047     		bx	lr
 407              	.L33:
 408              		.align	2
 409              	.L32:
 410 0010 00030B40 		.word	1074463488
 411              		.cfi_endproc
 412              	.LFE15:
 413              		.size	CySysGetResetReason, .-CySysGetResetReason
 414              		.section	.text.CyDisableInts,"ax",%progbits
 415              		.align	2
 416              		.global	CyDisableInts
 417              		.code	16
 418              		.thumb_func
 419              		.type	CyDisableInts, %function
 420              	CyDisableInts:
 421              	.LFB16:
 966:.\Generated_Source\PSoC4/CyLib.c **** 
 967:.\Generated_Source\PSoC4/CyLib.c **** 
 968:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 969:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDisableInts
 970:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
 971:.\Generated_Source\PSoC4/CyLib.c **** *
 972:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
 973:.\Generated_Source\PSoC4/CyLib.c **** *  Disables all interrupts.
 974:.\Generated_Source\PSoC4/CyLib.c **** *
 975:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
 976:.\Generated_Source\PSoC4/CyLib.c **** *  None
 977:.\Generated_Source\PSoC4/CyLib.c **** *
 978:.\Generated_Source\PSoC4/CyLib.c **** * Return:
 979:.\Generated_Source\PSoC4/CyLib.c **** *  32 bit mask of previously enabled interrupts.
 980:.\Generated_Source\PSoC4/CyLib.c **** *
 981:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 982:.\Generated_Source\PSoC4/CyLib.c **** uint32 CyDisableInts(void)
 983:.\Generated_Source\PSoC4/CyLib.c **** {
 422              		.loc 1 983 0
 423              		.cfi_startproc
 984:.\Generated_Source\PSoC4/CyLib.c ****     uint32 intState;
 985:.\Generated_Source\PSoC4/CyLib.c **** 
 986:.\Generated_Source\PSoC4/CyLib.c ****     /* Get current interrupt state. */
 987:.\Generated_Source\PSoC4/CyLib.c ****     intState = CY_INT_CLEAR_REG;
 424              		.loc 1 987 0
 425 0000 024B     		ldr	r3, .L35
 426 0002 1868     		ldr	r0, [r3]
 427              	.LVL17:
 988:.\Generated_Source\PSoC4/CyLib.c **** 
 989:.\Generated_Source\PSoC4/CyLib.c ****     /* Disable all interrupts. */
 990:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = CY_INT_CLEAR_DISABLE_ALL;
 428              		.loc 1 990 0
 429 0004 0122     		mov	r2, #1
 430 0006 5242     		neg	r2, r2
 431 0008 1A60     		str	r2, [r3]
 991:.\Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\ELECTR~1\AppData\Local\Temp\ccybjnra.s 			page 26


 992:.\Generated_Source\PSoC4/CyLib.c ****     return (intState);
 993:.\Generated_Source\PSoC4/CyLib.c **** }
 432              		.loc 1 993 0
 433              		@ sp needed
 434 000a 7047     		bx	lr
 435              	.L36:
 436              		.align	2
 437              	.L35:
 438 000c 80E100E0 		.word	-536813184
 439              		.cfi_endproc
 440              	.LFE16:
 441              		.size	CyDisableInts, .-CyDisableInts
 442              		.section	.text.CyEnableInts,"ax",%progbits
 443              		.align	2
 444              		.global	CyEnableInts
 445              		.code	16
 446              		.thumb_func
 447              		.type	CyEnableInts, %function
 448              	CyEnableInts:
 449              	.LFB17:
 994:.\Generated_Source\PSoC4/CyLib.c **** 
 995:.\Generated_Source\PSoC4/CyLib.c **** 
 996:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 997:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyEnableInts
 998:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
 999:.\Generated_Source\PSoC4/CyLib.c **** *
1000:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1001:.\Generated_Source\PSoC4/CyLib.c **** *  Enables interrupts to a given state.
1002:.\Generated_Source\PSoC4/CyLib.c **** *
1003:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1004:.\Generated_Source\PSoC4/CyLib.c **** *   mask, 32 bit mask of interrupts to enable.
1005:.\Generated_Source\PSoC4/CyLib.c **** *
1006:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1007:.\Generated_Source\PSoC4/CyLib.c **** *  None
1008:.\Generated_Source\PSoC4/CyLib.c **** *
1009:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1010:.\Generated_Source\PSoC4/CyLib.c **** void CyEnableInts(uint32 mask)
1011:.\Generated_Source\PSoC4/CyLib.c **** {
 450              		.loc 1 1011 0
 451              		.cfi_startproc
 452              	.LVL18:
1012:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = mask;
 453              		.loc 1 1012 0
 454 0000 014B     		ldr	r3, .L38
 455 0002 1860     		str	r0, [r3]
1013:.\Generated_Source\PSoC4/CyLib.c **** }
 456              		.loc 1 1013 0
 457              		@ sp needed
 458 0004 7047     		bx	lr
 459              	.L39:
 460 0006 C046     		.align	2
 461              	.L38:
 462 0008 00E100E0 		.word	-536813312
 463              		.cfi_endproc
 464              	.LFE17:
 465              		.size	CyEnableInts, .-CyEnableInts
 466              		.section	.text.CyIntEnable,"ax",%progbits
ARM GAS  C:\Users\ELECTR~1\AppData\Local\Temp\ccybjnra.s 			page 27


 467              		.align	2
 468              		.global	CyIntEnable
 469              		.code	16
 470              		.thumb_func
 471              		.type	CyIntEnable, %function
 472              	CyIntEnable:
 473              	.LFB24:
1014:.\Generated_Source\PSoC4/CyLib.c **** 
1015:.\Generated_Source\PSoC4/CyLib.c **** 
1016:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1017:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetSysVector
1018:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1019:.\Generated_Source\PSoC4/CyLib.c **** *
1020:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1021:.\Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified system interrupt number. These
1022:.\Generated_Source\PSoC4/CyLib.c **** *  interrupts are for SysTick, PendSV and others.
1023:.\Generated_Source\PSoC4/CyLib.c **** *
1024:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1025:.\Generated_Source\PSoC4/CyLib.c **** *  number: System interrupt number:
1026:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
1027:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
1028:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
1029:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
1030:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
1031:.\Generated_Source\PSoC4/CyLib.c **** *
1032:.\Generated_Source\PSoC4/CyLib.c **** *  address: Pointer to an interrupt service routine.
1033:.\Generated_Source\PSoC4/CyLib.c **** *
1034:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1035:.\Generated_Source\PSoC4/CyLib.c **** *  The old ISR vector at this location.
1036:.\Generated_Source\PSoC4/CyLib.c **** *
1037:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1038:.\Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetSysVector(uint8 number, cyisraddress address)
1039:.\Generated_Source\PSoC4/CyLib.c **** {
1040:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
1041:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
1042:.\Generated_Source\PSoC4/CyLib.c **** 
1043:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
1044:.\Generated_Source\PSoC4/CyLib.c **** 
1045:.\Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
1046:.\Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[number];
1047:.\Generated_Source\PSoC4/CyLib.c **** 
1048:.\Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
1049:.\Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[number] = address;
1050:.\Generated_Source\PSoC4/CyLib.c **** 
1051:.\Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
1052:.\Generated_Source\PSoC4/CyLib.c **** }
1053:.\Generated_Source\PSoC4/CyLib.c **** 
1054:.\Generated_Source\PSoC4/CyLib.c **** 
1055:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1056:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetSysVector
1057:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1058:.\Generated_Source\PSoC4/CyLib.c **** *
1059:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1060:.\Generated_Source\PSoC4/CyLib.c **** *   Gets the interrupt vector of the specified system interrupt number. These
1061:.\Generated_Source\PSoC4/CyLib.c **** *   interrupts are for SysTick, PendSV and others.
1062:.\Generated_Source\PSoC4/CyLib.c **** *
1063:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
ARM GAS  C:\Users\ELECTR~1\AppData\Local\Temp\ccybjnra.s 			page 28


1064:.\Generated_Source\PSoC4/CyLib.c **** *  number: System interrupt number:
1065:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
1066:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
1067:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
1068:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
1069:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
1070:.\Generated_Source\PSoC4/CyLib.c **** *
1071:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1072:.\Generated_Source\PSoC4/CyLib.c **** *   Address of the ISR in the interrupt vector table.
1073:.\Generated_Source\PSoC4/CyLib.c **** *
1074:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1075:.\Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetSysVector(uint8 number)
1076:.\Generated_Source\PSoC4/CyLib.c **** {
1077:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
1078:.\Generated_Source\PSoC4/CyLib.c **** 
1079:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
1080:.\Generated_Source\PSoC4/CyLib.c **** 
1081:.\Generated_Source\PSoC4/CyLib.c ****     return(ramVectorTable[number]);
1082:.\Generated_Source\PSoC4/CyLib.c **** }
1083:.\Generated_Source\PSoC4/CyLib.c **** 
1084:.\Generated_Source\PSoC4/CyLib.c **** 
1085:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1086:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetVector
1087:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1088:.\Generated_Source\PSoC4/CyLib.c **** *
1089:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1090:.\Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified interrupt number.
1091:.\Generated_Source\PSoC4/CyLib.c **** *
1092:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1093:.\Generated_Source\PSoC4/CyLib.c **** *  number: Valid range [0-31].  Interrupt number
1094:.\Generated_Source\PSoC4/CyLib.c **** *  address: Pointer to an interrupt service routine
1095:.\Generated_Source\PSoC4/CyLib.c **** *
1096:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1097:.\Generated_Source\PSoC4/CyLib.c **** *   Previous interrupt vector value.
1098:.\Generated_Source\PSoC4/CyLib.c **** *
1099:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1100:.\Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetVector(uint8 number, cyisraddress address)
1101:.\Generated_Source\PSoC4/CyLib.c **** {
1102:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
1103:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
1104:.\Generated_Source\PSoC4/CyLib.c **** 
1105:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
1106:.\Generated_Source\PSoC4/CyLib.c **** 
1107:.\Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
1108:.\Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[CY_INT_IRQ_BASE + number];
1109:.\Generated_Source\PSoC4/CyLib.c **** 
1110:.\Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
1111:.\Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[CY_INT_IRQ_BASE + number] = address;
1112:.\Generated_Source\PSoC4/CyLib.c **** 
1113:.\Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
1114:.\Generated_Source\PSoC4/CyLib.c **** }
1115:.\Generated_Source\PSoC4/CyLib.c **** 
1116:.\Generated_Source\PSoC4/CyLib.c **** 
1117:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1118:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetVector
1119:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1120:.\Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\ELECTR~1\AppData\Local\Temp\ccybjnra.s 			page 29


1121:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1122:.\Generated_Source\PSoC4/CyLib.c **** *  Gets the interrupt vector of the specified interrupt number.
1123:.\Generated_Source\PSoC4/CyLib.c **** *
1124:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1125:.\Generated_Source\PSoC4/CyLib.c **** *  number: Valid range [0-31].  Interrupt number
1126:.\Generated_Source\PSoC4/CyLib.c **** *
1127:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1128:.\Generated_Source\PSoC4/CyLib.c **** *  Address of the ISR in the interrupt vector table.
1129:.\Generated_Source\PSoC4/CyLib.c **** *
1130:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1131:.\Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetVector(uint8 number)
1132:.\Generated_Source\PSoC4/CyLib.c **** {
1133:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
1134:.\Generated_Source\PSoC4/CyLib.c **** 
1135:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
1136:.\Generated_Source\PSoC4/CyLib.c **** 
1137:.\Generated_Source\PSoC4/CyLib.c ****     return (ramVectorTable[CY_INT_IRQ_BASE + number]);
1138:.\Generated_Source\PSoC4/CyLib.c **** }
1139:.\Generated_Source\PSoC4/CyLib.c **** 
1140:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1141:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPriority
1142:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1143:.\Generated_Source\PSoC4/CyLib.c **** *
1144:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1145:.\Generated_Source\PSoC4/CyLib.c **** *  Sets the priority of the interrupt.
1146:.\Generated_Source\PSoC4/CyLib.c **** *
1147:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1148:.\Generated_Source\PSoC4/CyLib.c **** *  priority: Priority of the interrupt. 0 - 3, 0 being the highest.
1149:.\Generated_Source\PSoC4/CyLib.c **** *  number: The number of the interrupt, 0 - 31.
1150:.\Generated_Source\PSoC4/CyLib.c **** *
1151:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1152:.\Generated_Source\PSoC4/CyLib.c **** *  None
1153:.\Generated_Source\PSoC4/CyLib.c **** *
1154:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1155:.\Generated_Source\PSoC4/CyLib.c **** void CyIntSetPriority(uint8 number, uint8 priority)
1156:.\Generated_Source\PSoC4/CyLib.c **** {
1157:.\Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
1158:.\Generated_Source\PSoC4/CyLib.c ****     uint32 shift;
1159:.\Generated_Source\PSoC4/CyLib.c ****     uint32 value;
1160:.\Generated_Source\PSoC4/CyLib.c **** 
1161:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(priority <= CY_MIN_PRIORITY);
1162:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
1163:.\Generated_Source\PSoC4/CyLib.c **** 
1164:.\Generated_Source\PSoC4/CyLib.c ****     shift = CY_INT_PRIORITY_SHIFT(number);
1165:.\Generated_Source\PSoC4/CyLib.c **** 
1166:.\Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
1167:.\Generated_Source\PSoC4/CyLib.c **** 
1168:.\Generated_Source\PSoC4/CyLib.c ****     value = CY_INT_PRIORITY_REG(number);
1169:.\Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
1170:.\Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
1171:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
1172:.\Generated_Source\PSoC4/CyLib.c **** 
1173:.\Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
1174:.\Generated_Source\PSoC4/CyLib.c **** }
1175:.\Generated_Source\PSoC4/CyLib.c **** 
1176:.\Generated_Source\PSoC4/CyLib.c **** 
1177:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
ARM GAS  C:\Users\ELECTR~1\AppData\Local\Temp\ccybjnra.s 			page 30


1178:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetPriority
1179:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1180:.\Generated_Source\PSoC4/CyLib.c **** *
1181:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1182:.\Generated_Source\PSoC4/CyLib.c **** *  Gets the priority of the interrupt.
1183:.\Generated_Source\PSoC4/CyLib.c **** *
1184:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1185:.\Generated_Source\PSoC4/CyLib.c **** *  number: The number of the interrupt, 0 - 31.
1186:.\Generated_Source\PSoC4/CyLib.c **** *
1187:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1188:.\Generated_Source\PSoC4/CyLib.c **** *  Priority of the interrupt. 0 - 3, 0 being the highest.
1189:.\Generated_Source\PSoC4/CyLib.c **** *
1190:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1191:.\Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetPriority(uint8 number)
1192:.\Generated_Source\PSoC4/CyLib.c **** {
1193:.\Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
1194:.\Generated_Source\PSoC4/CyLib.c **** 
1195:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
1196:.\Generated_Source\PSoC4/CyLib.c **** 
1197:.\Generated_Source\PSoC4/CyLib.c ****     priority = (uint8) (CY_INT_PRIORITY_REG(number) >> CY_INT_PRIORITY_SHIFT(number));
1198:.\Generated_Source\PSoC4/CyLib.c **** 
1199:.\Generated_Source\PSoC4/CyLib.c ****     return (priority & (uint8) CY_INT_PRIORITY_MASK);
1200:.\Generated_Source\PSoC4/CyLib.c **** }
1201:.\Generated_Source\PSoC4/CyLib.c **** 
1202:.\Generated_Source\PSoC4/CyLib.c **** 
1203:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1204:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntEnable
1205:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1206:.\Generated_Source\PSoC4/CyLib.c **** *
1207:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1208:.\Generated_Source\PSoC4/CyLib.c **** *  Enables the specified interrupt number.
1209:.\Generated_Source\PSoC4/CyLib.c **** *
1210:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1211:.\Generated_Source\PSoC4/CyLib.c **** *  number: Valid range [0-31].  Interrupt number
1212:.\Generated_Source\PSoC4/CyLib.c **** *
1213:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1214:.\Generated_Source\PSoC4/CyLib.c **** *  None
1215:.\Generated_Source\PSoC4/CyLib.c **** *
1216:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1217:.\Generated_Source\PSoC4/CyLib.c **** void CyIntEnable(uint8 number)
1218:.\Generated_Source\PSoC4/CyLib.c **** {
 474              		.loc 1 1218 0
 475              		.cfi_startproc
 476              	.LVL19:
1219:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 477              		.loc 1 1219 0
 478 0000 1F23     		mov	r3, #31
 479 0002 1840     		and	r0, r3
 480              	.LVL20:
 481 0004 1E3B     		sub	r3, r3, #30
 482 0006 8340     		lsl	r3, r3, r0
 483 0008 181C     		mov	r0, r3
 484 000a 014B     		ldr	r3, .L41
 485 000c 1860     		str	r0, [r3]
1220:.\Generated_Source\PSoC4/CyLib.c **** }
 486              		.loc 1 1220 0
 487              		@ sp needed
ARM GAS  C:\Users\ELECTR~1\AppData\Local\Temp\ccybjnra.s 			page 31


 488 000e 7047     		bx	lr
 489              	.L42:
 490              		.align	2
 491              	.L41:
 492 0010 00E100E0 		.word	-536813312
 493              		.cfi_endproc
 494              	.LFE24:
 495              		.size	CyIntEnable, .-CyIntEnable
 496              		.section	.text.CyIntGetState,"ax",%progbits
 497              		.align	2
 498              		.global	CyIntGetState
 499              		.code	16
 500              		.thumb_func
 501              		.type	CyIntGetState, %function
 502              	CyIntGetState:
 503              	.LFB25:
1221:.\Generated_Source\PSoC4/CyLib.c **** 
1222:.\Generated_Source\PSoC4/CyLib.c **** 
1223:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1224:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetState
1225:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1226:.\Generated_Source\PSoC4/CyLib.c **** *
1227:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1228:.\Generated_Source\PSoC4/CyLib.c **** *  Gets the enable state of the specified interrupt number.
1229:.\Generated_Source\PSoC4/CyLib.c **** *
1230:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1231:.\Generated_Source\PSoC4/CyLib.c **** *  number: Valid range [0-31].  Interrupt number.
1232:.\Generated_Source\PSoC4/CyLib.c **** *
1233:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1234:.\Generated_Source\PSoC4/CyLib.c **** *  Enable status: 1 if enabled, 0 if disabled
1235:.\Generated_Source\PSoC4/CyLib.c **** *
1236:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1237:.\Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetState(uint8 number)
1238:.\Generated_Source\PSoC4/CyLib.c **** {
 504              		.loc 1 1238 0
 505              		.cfi_startproc
 506              	.LVL21:
1239:.\Generated_Source\PSoC4/CyLib.c ****     /* Get state of interrupt. */
1240:.\Generated_Source\PSoC4/CyLib.c ****     return ((0u != (CY_INT_ENABLE_REG & ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number)))) ?
 507              		.loc 1 1240 0
 508 0000 044B     		ldr	r3, .L44
 509 0002 1B68     		ldr	r3, [r3]
 510 0004 1F22     		mov	r2, #31
 511 0006 1040     		and	r0, r2
 512              	.LVL22:
 513 0008 C340     		lsr	r3, r3, r0
 514 000a 181C     		mov	r0, r3
 515 000c 0123     		mov	r3, #1
 516 000e 1840     		and	r0, r3
1241:.\Generated_Source\PSoC4/CyLib.c **** }
 517              		.loc 1 1241 0
 518              		@ sp needed
 519 0010 7047     		bx	lr
 520              	.L45:
 521 0012 C046     		.align	2
 522              	.L44:
 523 0014 00E100E0 		.word	-536813312
ARM GAS  C:\Users\ELECTR~1\AppData\Local\Temp\ccybjnra.s 			page 32


 524              		.cfi_endproc
 525              	.LFE25:
 526              		.size	CyIntGetState, .-CyIntGetState
 527              		.section	.text.CyIntDisable,"ax",%progbits
 528              		.align	2
 529              		.global	CyIntDisable
 530              		.code	16
 531              		.thumb_func
 532              		.type	CyIntDisable, %function
 533              	CyIntDisable:
 534              	.LFB26:
1242:.\Generated_Source\PSoC4/CyLib.c **** 
1243:.\Generated_Source\PSoC4/CyLib.c **** 
1244:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1245:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntDisable
1246:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1247:.\Generated_Source\PSoC4/CyLib.c **** *
1248:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1249:.\Generated_Source\PSoC4/CyLib.c **** *   Disables the specified interrupt number.
1250:.\Generated_Source\PSoC4/CyLib.c **** *
1251:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1252:.\Generated_Source\PSoC4/CyLib.c **** *   number: Valid range [0-31].  Interrupt number.
1253:.\Generated_Source\PSoC4/CyLib.c **** *
1254:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1255:.\Generated_Source\PSoC4/CyLib.c **** *  None
1256:.\Generated_Source\PSoC4/CyLib.c **** *
1257:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1258:.\Generated_Source\PSoC4/CyLib.c **** void CyIntDisable(uint8 number)
1259:.\Generated_Source\PSoC4/CyLib.c **** {
 535              		.loc 1 1259 0
 536              		.cfi_startproc
 537              	.LVL23:
1260:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 538              		.loc 1 1260 0
 539 0000 1F23     		mov	r3, #31
 540 0002 1840     		and	r0, r3
 541              	.LVL24:
 542 0004 1E3B     		sub	r3, r3, #30
 543 0006 8340     		lsl	r3, r3, r0
 544 0008 181C     		mov	r0, r3
 545 000a 014B     		ldr	r3, .L47
 546 000c 1860     		str	r0, [r3]
1261:.\Generated_Source\PSoC4/CyLib.c **** }
 547              		.loc 1 1261 0
 548              		@ sp needed
 549 000e 7047     		bx	lr
 550              	.L48:
 551              		.align	2
 552              	.L47:
 553 0010 80E100E0 		.word	-536813184
 554              		.cfi_endproc
 555              	.LFE26:
 556              		.size	CyIntDisable, .-CyIntDisable
 557              		.section	.text.CyIntSetPending,"ax",%progbits
 558              		.align	2
 559              		.global	CyIntSetPending
 560              		.code	16
ARM GAS  C:\Users\ELECTR~1\AppData\Local\Temp\ccybjnra.s 			page 33


 561              		.thumb_func
 562              		.type	CyIntSetPending, %function
 563              	CyIntSetPending:
 564              	.LFB27:
1262:.\Generated_Source\PSoC4/CyLib.c **** 
1263:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1264:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPending
1265:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1266:.\Generated_Source\PSoC4/CyLib.c **** *
1267:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1268:.\Generated_Source\PSoC4/CyLib.c **** *  Forces the specified interrupt number to be pending.
1269:.\Generated_Source\PSoC4/CyLib.c **** *
1270:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1271:.\Generated_Source\PSoC4/CyLib.c **** *  number: Valid range [0-31].  Interrupt number.
1272:.\Generated_Source\PSoC4/CyLib.c **** *
1273:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1274:.\Generated_Source\PSoC4/CyLib.c **** *  None
1275:.\Generated_Source\PSoC4/CyLib.c **** *
1276:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1277:.\Generated_Source\PSoC4/CyLib.c **** void CyIntSetPending(uint8 number)
1278:.\Generated_Source\PSoC4/CyLib.c **** {
 565              		.loc 1 1278 0
 566              		.cfi_startproc
 567              	.LVL25:
1279:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_SET_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 568              		.loc 1 1279 0
 569 0000 1F23     		mov	r3, #31
 570 0002 1840     		and	r0, r3
 571              	.LVL26:
 572 0004 1E3B     		sub	r3, r3, #30
 573 0006 8340     		lsl	r3, r3, r0
 574 0008 181C     		mov	r0, r3
 575 000a 014B     		ldr	r3, .L50
 576 000c 1860     		str	r0, [r3]
1280:.\Generated_Source\PSoC4/CyLib.c **** }
 577              		.loc 1 1280 0
 578              		@ sp needed
 579 000e 7047     		bx	lr
 580              	.L51:
 581              		.align	2
 582              	.L50:
 583 0010 00E200E0 		.word	-536813056
 584              		.cfi_endproc
 585              	.LFE27:
 586              		.size	CyIntSetPending, .-CyIntSetPending
 587              		.section	.text.CyIntClearPending,"ax",%progbits
 588              		.align	2
 589              		.global	CyIntClearPending
 590              		.code	16
 591              		.thumb_func
 592              		.type	CyIntClearPending, %function
 593              	CyIntClearPending:
 594              	.LFB28:
1281:.\Generated_Source\PSoC4/CyLib.c **** 
1282:.\Generated_Source\PSoC4/CyLib.c **** 
1283:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1284:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntClearPending
ARM GAS  C:\Users\ELECTR~1\AppData\Local\Temp\ccybjnra.s 			page 34


1285:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1286:.\Generated_Source\PSoC4/CyLib.c **** *
1287:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1288:.\Generated_Source\PSoC4/CyLib.c **** *  Clears any pending interrupt for the specified interrupt number.
1289:.\Generated_Source\PSoC4/CyLib.c **** *
1290:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1291:.\Generated_Source\PSoC4/CyLib.c **** *  number: Valid range [0-31].  Interrupt number.
1292:.\Generated_Source\PSoC4/CyLib.c **** *
1293:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1294:.\Generated_Source\PSoC4/CyLib.c **** *  None
1295:.\Generated_Source\PSoC4/CyLib.c **** *
1296:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1297:.\Generated_Source\PSoC4/CyLib.c **** void CyIntClearPending(uint8 number)
1298:.\Generated_Source\PSoC4/CyLib.c **** {
 595              		.loc 1 1298 0
 596              		.cfi_startproc
 597              	.LVL27:
1299:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLR_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 598              		.loc 1 1299 0
 599 0000 1F23     		mov	r3, #31
 600 0002 1840     		and	r0, r3
 601              	.LVL28:
 602 0004 1E3B     		sub	r3, r3, #30
 603 0006 8340     		lsl	r3, r3, r0
 604 0008 181C     		mov	r0, r3
 605 000a 014B     		ldr	r3, .L53
 606 000c 1860     		str	r0, [r3]
1300:.\Generated_Source\PSoC4/CyLib.c **** }
 607              		.loc 1 1300 0
 608              		@ sp needed
 609 000e 7047     		bx	lr
 610              	.L54:
 611              		.align	2
 612              	.L53:
 613 0010 80E200E0 		.word	-536812928
 614              		.cfi_endproc
 615              	.LFE28:
 616              		.size	CyIntClearPending, .-CyIntClearPending
 617              		.section	.text.CyHalt,"ax",%progbits
 618              		.align	2
 619              		.global	CyHalt
 620              		.code	16
 621              		.thumb_func
 622              		.type	CyHalt, %function
 623              	CyHalt:
 624              	.LFB29:
1301:.\Generated_Source\PSoC4/CyLib.c **** 
1302:.\Generated_Source\PSoC4/CyLib.c **** 
1303:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1304:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyHalt
1305:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1306:.\Generated_Source\PSoC4/CyLib.c **** *
1307:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1308:.\Generated_Source\PSoC4/CyLib.c **** *  Halts the CPU.
1309:.\Generated_Source\PSoC4/CyLib.c **** *
1310:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1311:.\Generated_Source\PSoC4/CyLib.c **** *  reason: Value to be used during debugging.
ARM GAS  C:\Users\ELECTR~1\AppData\Local\Temp\ccybjnra.s 			page 35


1312:.\Generated_Source\PSoC4/CyLib.c **** *
1313:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1314:.\Generated_Source\PSoC4/CyLib.c **** *  None
1315:.\Generated_Source\PSoC4/CyLib.c **** *
1316:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1317:.\Generated_Source\PSoC4/CyLib.c **** void CyHalt(uint8 reason)
1318:.\Generated_Source\PSoC4/CyLib.c **** {
 625              		.loc 1 1318 0
 626              		.cfi_startproc
 627              	.LVL29:
1319:.\Generated_Source\PSoC4/CyLib.c ****     if(0u != reason)
1320:.\Generated_Source\PSoC4/CyLib.c ****     {
1321:.\Generated_Source\PSoC4/CyLib.c ****         /* To remove unreferenced local variable warning */
1322:.\Generated_Source\PSoC4/CyLib.c ****     }
1323:.\Generated_Source\PSoC4/CyLib.c **** 
1324:.\Generated_Source\PSoC4/CyLib.c ****     #if defined (__ARMCC_VERSION)
1325:.\Generated_Source\PSoC4/CyLib.c ****         __breakpoint(0x0);
1326:.\Generated_Source\PSoC4/CyLib.c ****     #elif defined(__GNUC__) || defined (__ICCARM__)
1327:.\Generated_Source\PSoC4/CyLib.c ****         __asm("    bkpt    1");
 628              		.loc 1 1327 0
 629              	@ 1327 ".\Generated_Source\PSoC4\CyLib.c" 1
 630 0000 01BE     		    bkpt    1
 631              	@ 0 "" 2
1328:.\Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
1329:.\Generated_Source\PSoC4/CyLib.c ****         CYDEV_HALT_CPU;
1330:.\Generated_Source\PSoC4/CyLib.c ****     #endif  /* (__ARMCC_VERSION) */
1331:.\Generated_Source\PSoC4/CyLib.c **** }
 632              		.loc 1 1331 0
 633              		.code	16
 634              		@ sp needed
 635 0002 7047     		bx	lr
 636              		.cfi_endproc
 637              	.LFE29:
 638              		.size	CyHalt, .-CyHalt
 639              		.section	.text.CySysClkWriteEcoDiv,"ax",%progbits
 640              		.align	2
 641              		.global	CySysClkWriteEcoDiv
 642              		.code	16
 643              		.thumb_func
 644              		.type	CySysClkWriteEcoDiv, %function
 645              	CySysClkWriteEcoDiv:
 646              	.LFB10:
 787:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 647              		.loc 1 787 0
 648              		.cfi_startproc
 649              	.LVL30:
 650 0000 10B5     		push	{r4, lr}
 651              		.cfi_def_cfa_offset 8
 652              		.cfi_offset 4, -8
 653              		.cfi_offset 14, -4
 654 0002 041C     		mov	r4, r0
 790:.\Generated_Source\PSoC4/CyLib.c ****         {
 655              		.loc 1 790 0
 656 0004 0A4B     		ldr	r3, .L59
 657 0006 1B68     		ldr	r3, [r3]
 658 0008 0722     		mov	r2, #7
 659 000a 1340     		and	r3, r2
ARM GAS  C:\Users\ELECTR~1\AppData\Local\Temp\ccybjnra.s 			page 36


 660 000c 022B     		cmp	r3, #2
 661 000e 0BD0     		beq	.L57
 792:.\Generated_Source\PSoC4/CyLib.c **** 
 662              		.loc 1 792 0
 663 0010 FFF7FEFF 		bl	CyEnterCriticalSection
 664              	.LVL31:
 794:.\Generated_Source\PSoC4/CyLib.c ****                                                   (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint32) ~
 665              		.loc 1 794 0
 666 0014 0321     		mov	r1, #3
 667 0016 0C40     		and	r4, r1
 668              	.LVL32:
 795:.\Generated_Source\PSoC4/CyLib.c **** 
 669              		.loc 1 795 0
 670 0018 064A     		ldr	r2, .L59+4
 671 001a 1368     		ldr	r3, [r2]
 672 001c 8B43     		bic	r3, r1
 794:.\Generated_Source\PSoC4/CyLib.c ****                                                   (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint32) ~
 673              		.loc 1 794 0
 674 001e 2343     		orr	r3, r4
 675 0020 1360     		str	r3, [r2]
 797:.\Generated_Source\PSoC4/CyLib.c ****         }
 676              		.loc 1 797 0
 677 0022 FFF7FEFF 		bl	CyExitCriticalSection
 678              	.LVL33:
 679 0026 02E0     		b	.L56
 680              	.LVL34:
 681              	.L57:
 802:.\Generated_Source\PSoC4/CyLib.c ****         }
 682              		.loc 1 802 0 discriminator 1
 683 0028 0020     		mov	r0, #0
 684              	.LVL35:
 685 002a FFF7FEFF 		bl	CyHalt
 686              	.LVL36:
 687              	.L56:
 804:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_PSOC4_4100BL || CY_PSOC4_4200BL) */
 688              		.loc 1 804 0
 689              		@ sp needed
 690 002e 10BD     		pop	{r4, pc}
 691              	.L60:
 692              		.align	2
 693              	.L59:
 694 0030 00010B40 		.word	1074462976
 695 0034 64F02E40 		.word	1076818020
 696              		.cfi_endproc
 697              	.LFE10:
 698              		.size	CySysClkWriteEcoDiv, .-CySysClkWriteEcoDiv
 699              		.section	.text.CyIntSetSysVector,"ax",%progbits
 700              		.align	2
 701              		.global	CyIntSetSysVector
 702              		.code	16
 703              		.thumb_func
 704              		.type	CyIntSetSysVector, %function
 705              	CyIntSetSysVector:
 706              	.LFB18:
1039:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
 707              		.loc 1 1039 0
 708              		.cfi_startproc
ARM GAS  C:\Users\ELECTR~1\AppData\Local\Temp\ccybjnra.s 			page 37


 709              	.LVL37:
 710 0000 38B5     		push	{r3, r4, r5, lr}
 711              		.cfi_def_cfa_offset 16
 712              		.cfi_offset 3, -16
 713              		.cfi_offset 4, -12
 714              		.cfi_offset 5, -8
 715              		.cfi_offset 14, -4
 716 0002 041C     		mov	r4, r0
 717 0004 0D1C     		mov	r5, r1
 718              	.LVL38:
1043:.\Generated_Source\PSoC4/CyLib.c **** 
 719              		.loc 1 1043 0
 720 0006 0F28     		cmp	r0, #15
 721 0008 02D9     		bls	.L62
1043:.\Generated_Source\PSoC4/CyLib.c **** 
 722              		.loc 1 1043 0 is_stmt 0 discriminator 1
 723 000a 0020     		mov	r0, #0
 724              	.LVL39:
 725 000c FFF7FEFF 		bl	CyHalt
 726              	.LVL40:
 727              	.L62:
1046:.\Generated_Source\PSoC4/CyLib.c **** 
 728              		.loc 1 1046 0 is_stmt 1
 729 0010 A400     		lsl	r4, r4, #2
 730 0012 8023     		mov	r3, #128
 731 0014 9B05     		lsl	r3, r3, #22
 732 0016 9C46     		mov	ip, r3
 733 0018 6444     		add	r4, r4, ip
 734 001a 2068     		ldr	r0, [r4]
 735              	.LVL41:
1049:.\Generated_Source\PSoC4/CyLib.c **** 
 736              		.loc 1 1049 0
 737 001c 2560     		str	r5, [r4]
1052:.\Generated_Source\PSoC4/CyLib.c **** 
 738              		.loc 1 1052 0
 739              		@ sp needed
 740              	.LVL42:
 741 001e 38BD     		pop	{r3, r4, r5, pc}
 742              		.cfi_endproc
 743              	.LFE18:
 744              		.size	CyIntSetSysVector, .-CyIntSetSysVector
 745              		.section	.text.CyIntGetSysVector,"ax",%progbits
 746              		.align	2
 747              		.global	CyIntGetSysVector
 748              		.code	16
 749              		.thumb_func
 750              		.type	CyIntGetSysVector, %function
 751              	CyIntGetSysVector:
 752              	.LFB19:
1076:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 753              		.loc 1 1076 0
 754              		.cfi_startproc
 755              	.LVL43:
 756 0000 10B5     		push	{r4, lr}
 757              		.cfi_def_cfa_offset 8
 758              		.cfi_offset 4, -8
 759              		.cfi_offset 14, -4
ARM GAS  C:\Users\ELECTR~1\AppData\Local\Temp\ccybjnra.s 			page 38


 760 0002 041E     		sub	r4, r0, #0
 761              	.LVL44:
1079:.\Generated_Source\PSoC4/CyLib.c **** 
 762              		.loc 1 1079 0
 763 0004 0F2C     		cmp	r4, #15
 764 0006 02D9     		bls	.L64
1079:.\Generated_Source\PSoC4/CyLib.c **** 
 765              		.loc 1 1079 0 is_stmt 0 discriminator 1
 766 0008 0020     		mov	r0, #0
 767              	.LVL45:
 768 000a FFF7FEFF 		bl	CyHalt
 769              	.LVL46:
 770              	.L64:
1081:.\Generated_Source\PSoC4/CyLib.c **** }
 771              		.loc 1 1081 0 is_stmt 1
 772 000e A400     		lsl	r4, r4, #2
 773 0010 8023     		mov	r3, #128
 774 0012 9B05     		lsl	r3, r3, #22
 775 0014 9C46     		mov	ip, r3
 776 0016 6444     		add	r4, r4, ip
 777 0018 2068     		ldr	r0, [r4]
1082:.\Generated_Source\PSoC4/CyLib.c **** 
 778              		.loc 1 1082 0
 779              		@ sp needed
 780 001a 10BD     		pop	{r4, pc}
 781              		.cfi_endproc
 782              	.LFE19:
 783              		.size	CyIntGetSysVector, .-CyIntGetSysVector
 784              		.section	.text.CyIntSetVector,"ax",%progbits
 785              		.align	2
 786              		.global	CyIntSetVector
 787              		.code	16
 788              		.thumb_func
 789              		.type	CyIntSetVector, %function
 790              	CyIntSetVector:
 791              	.LFB20:
1101:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
 792              		.loc 1 1101 0
 793              		.cfi_startproc
 794              	.LVL47:
 795 0000 38B5     		push	{r3, r4, r5, lr}
 796              		.cfi_def_cfa_offset 16
 797              		.cfi_offset 3, -16
 798              		.cfi_offset 4, -12
 799              		.cfi_offset 5, -8
 800              		.cfi_offset 14, -4
 801 0002 041C     		mov	r4, r0
 802 0004 0D1C     		mov	r5, r1
 803              	.LVL48:
1105:.\Generated_Source\PSoC4/CyLib.c **** 
 804              		.loc 1 1105 0
 805 0006 1F28     		cmp	r0, #31
 806 0008 02D9     		bls	.L66
1105:.\Generated_Source\PSoC4/CyLib.c **** 
 807              		.loc 1 1105 0 is_stmt 0 discriminator 1
 808 000a 0020     		mov	r0, #0
 809              	.LVL49:
ARM GAS  C:\Users\ELECTR~1\AppData\Local\Temp\ccybjnra.s 			page 39


 810 000c FFF7FEFF 		bl	CyHalt
 811              	.LVL50:
 812              	.L66:
1108:.\Generated_Source\PSoC4/CyLib.c **** 
 813              		.loc 1 1108 0 is_stmt 1
 814 0010 A400     		lsl	r4, r4, #2
 815 0012 034B     		ldr	r3, .L67
 816 0014 9C46     		mov	ip, r3
 817 0016 6444     		add	r4, r4, ip
 818 0018 2068     		ldr	r0, [r4]
 819              	.LVL51:
1111:.\Generated_Source\PSoC4/CyLib.c **** 
 820              		.loc 1 1111 0
 821 001a 2560     		str	r5, [r4]
1114:.\Generated_Source\PSoC4/CyLib.c **** 
 822              		.loc 1 1114 0
 823              		@ sp needed
 824              	.LVL52:
 825 001c 38BD     		pop	{r3, r4, r5, pc}
 826              	.L68:
 827 001e C046     		.align	2
 828              	.L67:
 829 0020 40000020 		.word	536870976
 830              		.cfi_endproc
 831              	.LFE20:
 832              		.size	CyIntSetVector, .-CyIntSetVector
 833              		.section	.text.CyIntGetVector,"ax",%progbits
 834              		.align	2
 835              		.global	CyIntGetVector
 836              		.code	16
 837              		.thumb_func
 838              		.type	CyIntGetVector, %function
 839              	CyIntGetVector:
 840              	.LFB21:
1132:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 841              		.loc 1 1132 0
 842              		.cfi_startproc
 843              	.LVL53:
 844 0000 10B5     		push	{r4, lr}
 845              		.cfi_def_cfa_offset 8
 846              		.cfi_offset 4, -8
 847              		.cfi_offset 14, -4
 848 0002 041E     		sub	r4, r0, #0
 849              	.LVL54:
1135:.\Generated_Source\PSoC4/CyLib.c **** 
 850              		.loc 1 1135 0
 851 0004 1F2C     		cmp	r4, #31
 852 0006 02D9     		bls	.L70
1135:.\Generated_Source\PSoC4/CyLib.c **** 
 853              		.loc 1 1135 0 is_stmt 0 discriminator 1
 854 0008 0020     		mov	r0, #0
 855              	.LVL55:
 856 000a FFF7FEFF 		bl	CyHalt
 857              	.LVL56:
 858              	.L70:
1137:.\Generated_Source\PSoC4/CyLib.c **** }
 859              		.loc 1 1137 0 is_stmt 1
ARM GAS  C:\Users\ELECTR~1\AppData\Local\Temp\ccybjnra.s 			page 40


 860 000e A400     		lsl	r4, r4, #2
 861 0010 024B     		ldr	r3, .L71
 862 0012 9C46     		mov	ip, r3
 863 0014 6444     		add	r4, r4, ip
 864 0016 2068     		ldr	r0, [r4]
1138:.\Generated_Source\PSoC4/CyLib.c **** 
 865              		.loc 1 1138 0
 866              		@ sp needed
 867 0018 10BD     		pop	{r4, pc}
 868              	.L72:
 869 001a C046     		.align	2
 870              	.L71:
 871 001c 40000020 		.word	536870976
 872              		.cfi_endproc
 873              	.LFE21:
 874              		.size	CyIntGetVector, .-CyIntGetVector
 875              		.section	.text.CyIntSetPriority,"ax",%progbits
 876              		.align	2
 877              		.global	CyIntSetPriority
 878              		.code	16
 879              		.thumb_func
 880              		.type	CyIntSetPriority, %function
 881              	CyIntSetPriority:
 882              	.LFB22:
1156:.\Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
 883              		.loc 1 1156 0
 884              		.cfi_startproc
 885              	.LVL57:
 886 0000 70B5     		push	{r4, r5, r6, lr}
 887              		.cfi_def_cfa_offset 16
 888              		.cfi_offset 4, -16
 889              		.cfi_offset 5, -12
 890              		.cfi_offset 6, -8
 891              		.cfi_offset 14, -4
 892 0002 041C     		mov	r4, r0
 893 0004 0E1E     		sub	r6, r1, #0
1161:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 894              		.loc 1 1161 0
 895 0006 032E     		cmp	r6, #3
 896 0008 02D9     		bls	.L74
1161:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 897              		.loc 1 1161 0 is_stmt 0 discriminator 1
 898 000a 0020     		mov	r0, #0
 899              	.LVL58:
 900 000c FFF7FEFF 		bl	CyHalt
 901              	.LVL59:
 902              	.L74:
1162:.\Generated_Source\PSoC4/CyLib.c **** 
 903              		.loc 1 1162 0 is_stmt 1
 904 0010 1F2C     		cmp	r4, #31
 905 0012 02D9     		bls	.L75
1162:.\Generated_Source\PSoC4/CyLib.c **** 
 906              		.loc 1 1162 0 is_stmt 0 discriminator 1
 907 0014 0020     		mov	r0, #0
 908 0016 FFF7FEFF 		bl	CyHalt
 909              	.LVL60:
 910              	.L75:
ARM GAS  C:\Users\ELECTR~1\AppData\Local\Temp\ccybjnra.s 			page 41


1164:.\Generated_Source\PSoC4/CyLib.c **** 
 911              		.loc 1 1164 0 is_stmt 1
 912 001a 0325     		mov	r5, #3
 913 001c 2540     		and	r5, r4
 914 001e ED00     		lsl	r5, r5, #3
 915 0020 0635     		add	r5, r5, #6
 916              	.LVL61:
1166:.\Generated_Source\PSoC4/CyLib.c **** 
 917              		.loc 1 1166 0
 918 0022 FFF7FEFF 		bl	CyEnterCriticalSection
 919              	.LVL62:
1168:.\Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
 920              		.loc 1 1168 0
 921 0026 A408     		lsr	r4, r4, #2
 922 0028 A400     		lsl	r4, r4, #2
 923 002a 074B     		ldr	r3, .L76
 924 002c 9C46     		mov	ip, r3
 925 002e 6444     		add	r4, r4, ip
 926 0030 2368     		ldr	r3, [r4]
 927              	.LVL63:
1169:.\Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
 928              		.loc 1 1169 0
 929 0032 0322     		mov	r2, #3
 930 0034 AA40     		lsl	r2, r2, r5
 931 0036 9343     		bic	r3, r2
 932              	.LVL64:
1170:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
 933              		.loc 1 1170 0
 934 0038 AE40     		lsl	r6, r6, r5
 935 003a 351C     		mov	r5, r6
 936              	.LVL65:
 937 003c 1D43     		orr	r5, r3
 938              	.LVL66:
1171:.\Generated_Source\PSoC4/CyLib.c **** 
 939              		.loc 1 1171 0
 940 003e 2560     		str	r5, [r4]
1173:.\Generated_Source\PSoC4/CyLib.c **** }
 941              		.loc 1 1173 0
 942 0040 FFF7FEFF 		bl	CyExitCriticalSection
 943              	.LVL67:
1174:.\Generated_Source\PSoC4/CyLib.c **** 
 944              		.loc 1 1174 0
 945              		@ sp needed
 946              	.LVL68:
 947 0044 70BD     		pop	{r4, r5, r6, pc}
 948              	.L77:
 949 0046 C046     		.align	2
 950              	.L76:
 951 0048 00E400E0 		.word	-536812544
 952              		.cfi_endproc
 953              	.LFE22:
 954              		.size	CyIntSetPriority, .-CyIntSetPriority
 955              		.section	.text.CyIntGetPriority,"ax",%progbits
 956              		.align	2
 957              		.global	CyIntGetPriority
 958              		.code	16
 959              		.thumb_func
ARM GAS  C:\Users\ELECTR~1\AppData\Local\Temp\ccybjnra.s 			page 42


 960              		.type	CyIntGetPriority, %function
 961              	CyIntGetPriority:
 962              	.LFB23:
1192:.\Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
 963              		.loc 1 1192 0
 964              		.cfi_startproc
 965              	.LVL69:
 966 0000 10B5     		push	{r4, lr}
 967              		.cfi_def_cfa_offset 8
 968              		.cfi_offset 4, -8
 969              		.cfi_offset 14, -4
 970 0002 041E     		sub	r4, r0, #0
1195:.\Generated_Source\PSoC4/CyLib.c **** 
 971              		.loc 1 1195 0
 972 0004 1F2C     		cmp	r4, #31
 973 0006 02D9     		bls	.L79
1195:.\Generated_Source\PSoC4/CyLib.c **** 
 974              		.loc 1 1195 0 is_stmt 0 discriminator 1
 975 0008 0020     		mov	r0, #0
 976              	.LVL70:
 977 000a FFF7FEFF 		bl	CyHalt
 978              	.LVL71:
 979              	.L79:
1197:.\Generated_Source\PSoC4/CyLib.c **** 
 980              		.loc 1 1197 0 is_stmt 1
 981 000e A308     		lsr	r3, r4, #2
 982 0010 9B00     		lsl	r3, r3, #2
 983 0012 054A     		ldr	r2, .L80
 984 0014 9446     		mov	ip, r2
 985 0016 6344     		add	r3, r3, ip
 986 0018 1868     		ldr	r0, [r3]
 987 001a 0323     		mov	r3, #3
 988 001c 1C40     		and	r4, r3
 989 001e E400     		lsl	r4, r4, #3
 990 0020 0634     		add	r4, r4, #6
 991 0022 E040     		lsr	r0, r0, r4
 992              	.LVL72:
1199:.\Generated_Source\PSoC4/CyLib.c **** }
 993              		.loc 1 1199 0
 994 0024 1840     		and	r0, r3
 995              	.LVL73:
1200:.\Generated_Source\PSoC4/CyLib.c **** 
 996              		.loc 1 1200 0
 997              		@ sp needed
 998 0026 10BD     		pop	{r4, pc}
 999              	.L81:
 1000              		.align	2
 1001              	.L80:
 1002 0028 00E400E0 		.word	-536812544
 1003              		.cfi_endproc
 1004              	.LFE23:
 1005              		.size	CyIntGetPriority, .-CyIntGetPriority
 1006              		.section	.text.CySoftwareReset,"ax",%progbits
 1007              		.align	2
 1008              		.global	CySoftwareReset
 1009              		.code	16
 1010              		.thumb_func
ARM GAS  C:\Users\ELECTR~1\AppData\Local\Temp\ccybjnra.s 			page 43


 1011              		.type	CySoftwareReset, %function
 1012              	CySoftwareReset:
 1013              	.LFB30:
1332:.\Generated_Source\PSoC4/CyLib.c **** 
1333:.\Generated_Source\PSoC4/CyLib.c **** 
1334:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1335:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySoftwareReset
1336:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1337:.\Generated_Source\PSoC4/CyLib.c **** *
1338:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1339:.\Generated_Source\PSoC4/CyLib.c **** *  Forces a software reset of the device.
1340:.\Generated_Source\PSoC4/CyLib.c **** *
1341:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1342:.\Generated_Source\PSoC4/CyLib.c **** *  None
1343:.\Generated_Source\PSoC4/CyLib.c **** *
1344:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1345:.\Generated_Source\PSoC4/CyLib.c **** *  None
1346:.\Generated_Source\PSoC4/CyLib.c **** *
1347:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1348:.\Generated_Source\PSoC4/CyLib.c **** void CySoftwareReset(void)
1349:.\Generated_Source\PSoC4/CyLib.c **** {
 1014              		.loc 1 1349 0
 1015              		.cfi_startproc
1350:.\Generated_Source\PSoC4/CyLib.c ****     /***************************************************************************
1351:.\Generated_Source\PSoC4/CyLib.c ****     * Setting the system reset request bit. The vector key value must be written
1352:.\Generated_Source\PSoC4/CyLib.c ****     * to the register, otherwise the register write is unpredictable.
1353:.\Generated_Source\PSoC4/CyLib.c ****     ***************************************************************************/
1354:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CM0_AIRCR_REG = (CY_SYS_CM0_AIRCR_REG & (uint32)(~CY_SYS_CM0_AIRCR_VECTKEY_MASK)) |
 1016              		.loc 1 1354 0
 1017 0000 034A     		ldr	r2, .L83
 1018 0002 1368     		ldr	r3, [r2]
 1019 0004 1B04     		lsl	r3, r3, #16
 1020 0006 1B0C     		lsr	r3, r3, #16
1355:.\Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_CM0_AIRCR_VECTKEY | CY_SYS_CM0_AIRCR_SYSRESETREQ;
 1021              		.loc 1 1355 0
 1022 0008 0249     		ldr	r1, .L83+4
 1023 000a 0B43     		orr	r3, r1
1354:.\Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_CM0_AIRCR_VECTKEY | CY_SYS_CM0_AIRCR_SYSRESETREQ;
 1024              		.loc 1 1354 0
 1025 000c 1360     		str	r3, [r2]
1356:.\Generated_Source\PSoC4/CyLib.c **** }
 1026              		.loc 1 1356 0
 1027              		@ sp needed
 1028 000e 7047     		bx	lr
 1029              	.L84:
 1030              		.align	2
 1031              	.L83:
 1032 0010 0CED00E0 		.word	-536810228
 1033 0014 0400FA05 		.word	100270084
 1034              		.cfi_endproc
 1035              	.LFE30:
 1036              		.size	CySoftwareReset, .-CySoftwareReset
 1037              		.section	.text.CyDelay,"ax",%progbits
 1038              		.align	2
 1039              		.global	CyDelay
 1040              		.code	16
 1041              		.thumb_func
ARM GAS  C:\Users\ELECTR~1\AppData\Local\Temp\ccybjnra.s 			page 44


 1042              		.type	CyDelay, %function
 1043              	CyDelay:
 1044              	.LFB31:
1357:.\Generated_Source\PSoC4/CyLib.c **** 
1358:.\Generated_Source\PSoC4/CyLib.c **** 
1359:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1360:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelay
1361:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1362:.\Generated_Source\PSoC4/CyLib.c **** *
1363:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1364:.\Generated_Source\PSoC4/CyLib.c **** *  Blocks for milliseconds.
1365:.\Generated_Source\PSoC4/CyLib.c **** *
1366:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1367:.\Generated_Source\PSoC4/CyLib.c **** *  milliseconds: number of milliseconds to delay.
1368:.\Generated_Source\PSoC4/CyLib.c **** *
1369:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1370:.\Generated_Source\PSoC4/CyLib.c **** *  None
1371:.\Generated_Source\PSoC4/CyLib.c **** *
1372:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1373:.\Generated_Source\PSoC4/CyLib.c **** void CyDelay(uint32 milliseconds)
1374:.\Generated_Source\PSoC4/CyLib.c **** {
 1045              		.loc 1 1374 0
 1046              		.cfi_startproc
 1047              	.LVL74:
 1048 0000 10B5     		push	{r4, lr}
 1049              		.cfi_def_cfa_offset 8
 1050              		.cfi_offset 4, -8
 1051              		.cfi_offset 14, -4
 1052 0002 041C     		mov	r4, r0
1375:.\Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 1053              		.loc 1 1375 0
 1054 0004 06E0     		b	.L86
 1055              	.LVL75:
 1056              	.L87:
1376:.\Generated_Source\PSoC4/CyLib.c ****     {
1377:.\Generated_Source\PSoC4/CyLib.c ****         /* This loop prevents overflow.
1378:.\Generated_Source\PSoC4/CyLib.c ****          * At 100MHz, milliseconds * cydelayFreqKhz overflows at about 42 seconds
1379:.\Generated_Source\PSoC4/CyLib.c ****          */
1380:.\Generated_Source\PSoC4/CyLib.c ****         CyDelayCycles(cydelay32kMs);
 1057              		.loc 1 1380 0
 1058 0006 084B     		ldr	r3, .L88
 1059 0008 1868     		ldr	r0, [r3]
 1060 000a FFF7FEFF 		bl	CyDelayCycles
 1061              	.LVL76:
1381:.\Generated_Source\PSoC4/CyLib.c ****         milliseconds -= CY_DELAY_MS_OVERFLOW;
 1062              		.loc 1 1381 0
 1063 000e 074B     		ldr	r3, .L88+4
 1064 0010 9C46     		mov	ip, r3
 1065 0012 6444     		add	r4, r4, ip
 1066              	.LVL77:
 1067              	.L86:
1375:.\Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 1068              		.loc 1 1375 0
 1069 0014 8023     		mov	r3, #128
 1070 0016 1B02     		lsl	r3, r3, #8
 1071 0018 9C42     		cmp	r4, r3
 1072 001a F4D8     		bhi	.L87
ARM GAS  C:\Users\ELECTR~1\AppData\Local\Temp\ccybjnra.s 			page 45


1382:.\Generated_Source\PSoC4/CyLib.c ****     }
1383:.\Generated_Source\PSoC4/CyLib.c **** 
1384:.\Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles(milliseconds * cydelayFreqKhz);
 1073              		.loc 1 1384 0
 1074 001c 024B     		ldr	r3, .L88
 1075 001e 5868     		ldr	r0, [r3, #4]
 1076 0020 6043     		mul	r0, r4
 1077 0022 FFF7FEFF 		bl	CyDelayCycles
 1078              	.LVL78:
1385:.\Generated_Source\PSoC4/CyLib.c **** }
 1079              		.loc 1 1385 0
 1080              		@ sp needed
 1081              	.LVL79:
 1082 0026 10BD     		pop	{r4, pc}
 1083              	.L89:
 1084              		.align	2
 1085              	.L88:
 1086 0028 00000000 		.word	.LANCHOR1
 1087 002c 0080FFFF 		.word	-32768
 1088              		.cfi_endproc
 1089              	.LFE31:
 1090              		.size	CyDelay, .-CyDelay
 1091              		.section	.text.CyDelayUs,"ax",%progbits
 1092              		.align	2
 1093              		.global	CyDelayUs
 1094              		.code	16
 1095              		.thumb_func
 1096              		.type	CyDelayUs, %function
 1097              	CyDelayUs:
 1098              	.LFB32:
1386:.\Generated_Source\PSoC4/CyLib.c **** 
1387:.\Generated_Source\PSoC4/CyLib.c **** 
1388:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1389:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayUs
1390:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1391:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1392:.\Generated_Source\PSoC4/CyLib.c **** *  Blocks for microseconds.
1393:.\Generated_Source\PSoC4/CyLib.c **** *
1394:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1395:.\Generated_Source\PSoC4/CyLib.c **** *  microseconds: number of microseconds to delay.
1396:.\Generated_Source\PSoC4/CyLib.c **** *
1397:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1398:.\Generated_Source\PSoC4/CyLib.c **** *  None
1399:.\Generated_Source\PSoC4/CyLib.c **** *
1400:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1401:.\Generated_Source\PSoC4/CyLib.c **** void CyDelayUs(uint16 microseconds)
1402:.\Generated_Source\PSoC4/CyLib.c **** {
 1099              		.loc 1 1402 0
 1100              		.cfi_startproc
 1101              	.LVL80:
 1102 0000 08B5     		push	{r3, lr}
 1103              		.cfi_def_cfa_offset 8
 1104              		.cfi_offset 3, -8
 1105              		.cfi_offset 14, -4
1403:.\Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles((uint32)microseconds * cydelayFreqMhz);
 1106              		.loc 1 1403 0
 1107 0002 034B     		ldr	r3, .L91
ARM GAS  C:\Users\ELECTR~1\AppData\Local\Temp\ccybjnra.s 			page 46


 1108 0004 1B7A     		ldrb	r3, [r3, #8]
 1109 0006 5843     		mul	r0, r3
 1110              	.LVL81:
 1111 0008 FFF7FEFF 		bl	CyDelayCycles
 1112              	.LVL82:
1404:.\Generated_Source\PSoC4/CyLib.c **** }
 1113              		.loc 1 1404 0
 1114              		@ sp needed
 1115 000c 08BD     		pop	{r3, pc}
 1116              	.L92:
 1117 000e C046     		.align	2
 1118              	.L91:
 1119 0010 00000000 		.word	.LANCHOR1
 1120              		.cfi_endproc
 1121              	.LFE32:
 1122              		.size	CyDelayUs, .-CyDelayUs
 1123              		.section	.text.CySysClkEcoStart,"ax",%progbits
 1124              		.align	2
 1125              		.global	CySysClkEcoStart
 1126              		.code	16
 1127              		.thumb_func
 1128              		.type	CySysClkEcoStart, %function
 1129              	CySysClkEcoStart:
 1130              	.LFB7:
 675:.\Generated_Source\PSoC4/CyLib.c ****         cystatus status = CYRET_SUCCESS;
 1131              		.loc 1 675 0
 1132              		.cfi_startproc
 1133              	.LVL83:
 1134 0000 10B5     		push	{r4, lr}
 1135              		.cfi_def_cfa_offset 8
 1136              		.cfi_offset 4, -8
 1137              		.cfi_offset 14, -4
 1138 0002 041C     		mov	r4, r0
 1139              	.LVL84:
 679:.\Generated_Source\PSoC4/CyLib.c **** 
 1140              		.loc 1 679 0
 1141 0004 0F4A     		ldr	r2, .L98
 1142 0006 1168     		ldr	r1, [r2]
 1143 0008 0123     		mov	r3, #1
 1144 000a 0B43     		orr	r3, r1
 1145 000c 1360     		str	r3, [r2]
 682:.\Generated_Source\PSoC4/CyLib.c **** 
 1146              		.loc 1 682 0
 1147 000e 0E4A     		ldr	r2, .L98+4
 1148 0010 0E4B     		ldr	r3, .L98+8
 1149 0012 1A60     		str	r2, [r3]
 685:.\Generated_Source\PSoC4/CyLib.c **** 
 1150              		.loc 1 685 0
 1151 0014 0E4A     		ldr	r2, .L98+12
 1152 0016 1368     		ldr	r3, [r2]
 1153 0018 8021     		mov	r1, #128
 1154 001a 0902     		lsl	r1, r1, #8
 1155 001c 0B43     		orr	r3, r1
 1156 001e 1360     		str	r3, [r2]
 687:.\Generated_Source\PSoC4/CyLib.c ****         {
 1157              		.loc 1 687 0
 1158 0020 0028     		cmp	r0, #0
ARM GAS  C:\Users\ELECTR~1\AppData\Local\Temp\ccybjnra.s 			page 47


 1159 0022 09D1     		bne	.L94
 676:.\Generated_Source\PSoC4/CyLib.c **** 
 1160              		.loc 1 676 0
 1161 0024 0020     		mov	r0, #0
 1162              	.LVL85:
 1163 0026 0CE0     		b	.L95
 1164              	.L96:
 693:.\Generated_Source\PSoC4/CyLib.c **** 
 1165              		.loc 1 693 0
 1166 0028 0120     		mov	r0, #1
 1167 002a FFF7FEFF 		bl	CyDelayUs
 1168              	.LVL86:
 695:.\Generated_Source\PSoC4/CyLib.c ****                 {
 1169              		.loc 1 695 0
 1170 002e FFF7FEFF 		bl	CySysClkEcoReadStatus
 1171              	.LVL87:
 1172 0032 0028     		cmp	r0, #0
 1173 0034 04D1     		bne	.L97
 691:.\Generated_Source\PSoC4/CyLib.c ****             {
 1174              		.loc 1 691 0
 1175 0036 013C     		sub	r4, r4, #1
 1176              	.LVL88:
 1177              	.L94:
 691:.\Generated_Source\PSoC4/CyLib.c ****             {
 1178              		.loc 1 691 0 is_stmt 0 discriminator 1
 1179 0038 002C     		cmp	r4, #0
 1180 003a F5D1     		bne	.L96
 689:.\Generated_Source\PSoC4/CyLib.c **** 
 1181              		.loc 1 689 0 is_stmt 1
 1182 003c 1020     		mov	r0, #16
 1183 003e 00E0     		b	.L95
 1184              	.L97:
 697:.\Generated_Source\PSoC4/CyLib.c ****                     break;
 1185              		.loc 1 697 0
 1186 0040 0020     		mov	r0, #0
 1187              	.L95:
 1188              	.LVL89:
 705:.\Generated_Source\PSoC4/CyLib.c **** 
 1189              		.loc 1 705 0
 1190              		@ sp needed
 1191              	.LVL90:
 1192 0042 10BD     		pop	{r4, pc}
 1193              	.L99:
 1194              		.align	2
 1195              	.L98:
 1196 0044 60F02E40 		.word	1076818016
 1197 0048 02200000 		.word	8194
 1198 004c 78002E40 		.word	1076756600
 1199 0050 10002E40 		.word	1076756496
 1200              		.cfi_endproc
 1201              	.LFE7:
 1202              		.size	CySysClkEcoStart, .-CySysClkEcoStart
 1203              		.section	.text.CySysLvdEnable,"ax",%progbits
 1204              		.align	2
 1205              		.global	CySysLvdEnable
 1206              		.code	16
 1207              		.thumb_func
ARM GAS  C:\Users\ELECTR~1\AppData\Local\Temp\ccybjnra.s 			page 48


 1208              		.type	CySysLvdEnable, %function
 1209              	CySysLvdEnable:
 1210              	.LFB11:
 849:.\Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
 1211              		.loc 1 849 0
 1212              		.cfi_startproc
 1213              	.LVL91:
 1214 0000 38B5     		push	{r3, r4, r5, lr}
 1215              		.cfi_def_cfa_offset 16
 1216              		.cfi_offset 3, -16
 1217              		.cfi_offset 4, -12
 1218              		.cfi_offset 5, -8
 1219              		.cfi_offset 14, -4
 1220 0002 031C     		mov	r3, r0
 851:.\Generated_Source\PSoC4/CyLib.c **** 
 1221              		.loc 1 851 0
 1222 0004 0D4C     		ldr	r4, .L101
 1223 0006 2268     		ldr	r2, [r4]
 1224 0008 0225     		mov	r5, #2
 1225 000a AA43     		bic	r2, r5
 1226 000c 2260     		str	r2, [r4]
 854:.\Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 1227              		.loc 1 854 0
 1228 000e 0C4A     		ldr	r2, .L101+4
 1229 0010 1168     		ldr	r1, [r2]
 1230 0012 1E20     		mov	r0, #30
 1231              	.LVL92:
 1232 0014 8143     		bic	r1, r0
 855:.\Generated_Source\PSoC4/CyLib.c **** 
 1233              		.loc 1 855 0
 1234 0016 5B00     		lsl	r3, r3, #1
 1235              	.LVL93:
 1236 0018 1840     		and	r0, r3
 854:.\Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 1237              		.loc 1 854 0
 1238 001a 0843     		orr	r0, r1
 1239 001c 1060     		str	r0, [r2]
 858:.\Generated_Source\PSoC4/CyLib.c **** 
 1240              		.loc 1 858 0
 1241 001e 1168     		ldr	r1, [r2]
 1242 0020 0123     		mov	r3, #1
 1243 0022 0B43     		orr	r3, r1
 1244 0024 1360     		str	r3, [r2]
 861:.\Generated_Source\PSoC4/CyLib.c **** 
 1245              		.loc 1 861 0
 1246 0026 FA20     		mov	r0, #250
 1247 0028 8000     		lsl	r0, r0, #2
 1248 002a FFF7FEFF 		bl	CyDelayUs
 1249              	.LVL94:
 864:.\Generated_Source\PSoC4/CyLib.c **** 
 1250              		.loc 1 864 0
 1251 002e FFF7FEFF 		bl	CySysLvdClearInterrupt
 1252              	.LVL95:
 867:.\Generated_Source\PSoC4/CyLib.c ****     }
 1253              		.loc 1 867 0
 1254 0032 2368     		ldr	r3, [r4]
 1255 0034 1D43     		orr	r5, r3
ARM GAS  C:\Users\ELECTR~1\AppData\Local\Temp\ccybjnra.s 			page 49


 1256 0036 2560     		str	r5, [r4]
 868:.\Generated_Source\PSoC4/CyLib.c **** 
 1257              		.loc 1 868 0
 1258              		@ sp needed
 1259 0038 38BD     		pop	{r3, r4, r5, pc}
 1260              	.L102:
 1261 003a C046     		.align	2
 1262              	.L101:
 1263 003c 08000B40 		.word	1074462728
 1264 0040 18000B40 		.word	1074462744
 1265              		.cfi_endproc
 1266              	.LFE11:
 1267              		.size	CySysLvdEnable, .-CySysLvdEnable
 1268              		.global	__aeabi_uidiv
 1269              		.section	.text.CyDelayFreq,"ax",%progbits
 1270              		.align	2
 1271              		.global	CyDelayFreq
 1272              		.code	16
 1273              		.thumb_func
 1274              		.type	CyDelayFreq, %function
 1275              	CyDelayFreq:
 1276              	.LFB33:
1405:.\Generated_Source\PSoC4/CyLib.c **** 
1406:.\Generated_Source\PSoC4/CyLib.c **** 
1407:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1408:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayFreq
1409:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1410:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1411:.\Generated_Source\PSoC4/CyLib.c **** *  Sets clock frequency for CyDelay.
1412:.\Generated_Source\PSoC4/CyLib.c **** *
1413:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1414:.\Generated_Source\PSoC4/CyLib.c **** *  freq: Frequency of bus clock in Hertz.
1415:.\Generated_Source\PSoC4/CyLib.c **** *
1416:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1417:.\Generated_Source\PSoC4/CyLib.c **** *  None
1418:.\Generated_Source\PSoC4/CyLib.c **** *
1419:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1420:.\Generated_Source\PSoC4/CyLib.c **** void CyDelayFreq(uint32 freq)
1421:.\Generated_Source\PSoC4/CyLib.c **** {
 1277              		.loc 1 1421 0
 1278              		.cfi_startproc
 1279              	.LVL96:
 1280 0000 38B5     		push	{r3, r4, r5, lr}
 1281              		.cfi_def_cfa_offset 16
 1282              		.cfi_offset 3, -16
 1283              		.cfi_offset 4, -12
 1284              		.cfi_offset 5, -8
 1285              		.cfi_offset 14, -4
1422:.\Generated_Source\PSoC4/CyLib.c ****     if (freq != 0u)
 1286              		.loc 1 1422 0
 1287 0002 0028     		cmp	r0, #0
 1288 0004 02D0     		beq	.L104
1423:.\Generated_Source\PSoC4/CyLib.c ****     {
1424:.\Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = freq;
 1289              		.loc 1 1424 0
 1290 0006 0C4B     		ldr	r3, .L106
 1291 0008 D860     		str	r0, [r3, #12]
ARM GAS  C:\Users\ELECTR~1\AppData\Local\Temp\ccybjnra.s 			page 50


 1292 000a 02E0     		b	.L105
 1293              	.L104:
1425:.\Generated_Source\PSoC4/CyLib.c ****     }
1426:.\Generated_Source\PSoC4/CyLib.c ****     else
1427:.\Generated_Source\PSoC4/CyLib.c ****     {
1428:.\Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = CYDEV_BCLK__SYSCLK__HZ;
 1294              		.loc 1 1428 0
 1295 000c 0B4A     		ldr	r2, .L106+4
 1296 000e 0A4B     		ldr	r3, .L106
 1297 0010 DA60     		str	r2, [r3, #12]
 1298              	.L105:
1429:.\Generated_Source\PSoC4/CyLib.c ****     }
1430:.\Generated_Source\PSoC4/CyLib.c **** 
1431:.\Generated_Source\PSoC4/CyLib.c ****     cydelayFreqMhz = (uint8)((cydelayFreqHz + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY_1M_THRESHOL
 1299              		.loc 1 1431 0
 1300 0012 094C     		ldr	r4, .L106
 1301 0014 E568     		ldr	r5, [r4, #12]
 1302 0016 0A4B     		ldr	r3, .L106+8
 1303 0018 E818     		add	r0, r5, r3
 1304              	.LVL97:
 1305 001a 0A49     		ldr	r1, .L106+12
 1306 001c FFF7FEFF 		bl	__aeabi_uidiv
 1307              	.LVL98:
 1308 0020 2072     		strb	r0, [r4, #8]
1432:.\Generated_Source\PSoC4/CyLib.c ****     cydelayFreqKhz = (cydelayFreqHz + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRESHOLD;
 1309              		.loc 1 1432 0
 1310 0022 094B     		ldr	r3, .L106+16
 1311 0024 E818     		add	r0, r5, r3
 1312 0026 FA21     		mov	r1, #250
 1313 0028 8900     		lsl	r1, r1, #2
 1314 002a FFF7FEFF 		bl	__aeabi_uidiv
 1315              	.LVL99:
 1316 002e 6060     		str	r0, [r4, #4]
1433:.\Generated_Source\PSoC4/CyLib.c ****     cydelay32kMs   = CY_DELAY_MS_OVERFLOW * cydelayFreqKhz;
 1317              		.loc 1 1433 0
 1318 0030 C003     		lsl	r0, r0, #15
 1319 0032 2060     		str	r0, [r4]
1434:.\Generated_Source\PSoC4/CyLib.c **** }
 1320              		.loc 1 1434 0
 1321              		@ sp needed
 1322 0034 38BD     		pop	{r3, r4, r5, pc}
 1323              	.L107:
 1324 0036 C046     		.align	2
 1325              	.L106:
 1326 0038 00000000 		.word	.LANCHOR1
 1327 003c 006CDC02 		.word	48000000
 1328 0040 3F420F00 		.word	999999
 1329 0044 40420F00 		.word	1000000
 1330 0048 E7030000 		.word	999
 1331              		.cfi_endproc
 1332              	.LFE33:
 1333              		.size	CyDelayFreq, .-CyDelayFreq
 1334              		.section	.text.CySysTickStop,"ax",%progbits
 1335              		.align	2
 1336              		.global	CySysTickStop
 1337              		.code	16
 1338              		.thumb_func
ARM GAS  C:\Users\ELECTR~1\AppData\Local\Temp\ccybjnra.s 			page 51


 1339              		.type	CySysTickStop, %function
 1340              	CySysTickStop:
 1341              	.LFB37:
1435:.\Generated_Source\PSoC4/CyLib.c **** 
1436:.\Generated_Source\PSoC4/CyLib.c **** 
1437:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1438:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTick_Start
1439:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1440:.\Generated_Source\PSoC4/CyLib.c **** *
1441:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1442:.\Generated_Source\PSoC4/CyLib.c **** *  Starts the system timer (SysTick): configures SysTick to generate interrupt
1443:.\Generated_Source\PSoC4/CyLib.c **** *  every 1 ms and enables the interrupt.
1444:.\Generated_Source\PSoC4/CyLib.c **** *
1445:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1446:.\Generated_Source\PSoC4/CyLib.c **** *  None
1447:.\Generated_Source\PSoC4/CyLib.c **** *
1448:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1449:.\Generated_Source\PSoC4/CyLib.c **** *  None
1450:.\Generated_Source\PSoC4/CyLib.c **** *
1451:.\Generated_Source\PSoC4/CyLib.c **** * Side Effects:
1452:.\Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
1453:.\Generated_Source\PSoC4/CyLib.c **** *
1454:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1455:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickStart(void)
1456:.\Generated_Source\PSoC4/CyLib.c **** {
1457:.\Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
1458:.\Generated_Source\PSoC4/CyLib.c ****     {
1459:.\Generated_Source\PSoC4/CyLib.c ****         CySysTickInit();
1460:.\Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
1461:.\Generated_Source\PSoC4/CyLib.c ****     }
1462:.\Generated_Source\PSoC4/CyLib.c **** 
1463:.\Generated_Source\PSoC4/CyLib.c ****     CySysTickEnable();
1464:.\Generated_Source\PSoC4/CyLib.c **** }
1465:.\Generated_Source\PSoC4/CyLib.c **** 
1466:.\Generated_Source\PSoC4/CyLib.c **** 
1467:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1468:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickInit
1469:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1470:.\Generated_Source\PSoC4/CyLib.c **** *
1471:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1472:.\Generated_Source\PSoC4/CyLib.c **** *  Sets CySysTickServiceCallbacks() as an ISR for the SysTick exception.
1473:.\Generated_Source\PSoC4/CyLib.c **** *  The clock source for the SysTick counter is set to the System Clock.
1474:.\Generated_Source\PSoC4/CyLib.c **** *  The SysTick reload value is configured for the timer to generate interrupt
1475:.\Generated_Source\PSoC4/CyLib.c **** *  every 1 ms. The System clock value is on the global variables cydelayFreqHz.
1476:.\Generated_Source\PSoC4/CyLib.c **** *  User is responsible for calling CyDelayFreq() function.
1477:.\Generated_Source\PSoC4/CyLib.c **** *  Initializes CySysTickCallbacks array.
1478:.\Generated_Source\PSoC4/CyLib.c **** *
1479:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1480:.\Generated_Source\PSoC4/CyLib.c **** *  None
1481:.\Generated_Source\PSoC4/CyLib.c **** *
1482:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1483:.\Generated_Source\PSoC4/CyLib.c **** *  None
1484:.\Generated_Source\PSoC4/CyLib.c **** *
1485:.\Generated_Source\PSoC4/CyLib.c **** * Side Effects:
1486:.\Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
1487:.\Generated_Source\PSoC4/CyLib.c **** *
1488:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
ARM GAS  C:\Users\ELECTR~1\AppData\Local\Temp\ccybjnra.s 			page 52


1489:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickInit(void)
1490:.\Generated_Source\PSoC4/CyLib.c **** {
1491:.\Generated_Source\PSoC4/CyLib.c ****     uint32 i;
1492:.\Generated_Source\PSoC4/CyLib.c **** 
1493:.\Generated_Source\PSoC4/CyLib.c ****     for (i = 0u; i<CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
1494:.\Generated_Source\PSoC4/CyLib.c ****     {
1495:.\Generated_Source\PSoC4/CyLib.c ****         CySysTickCallbacks[i] = (void *) 0;
1496:.\Generated_Source\PSoC4/CyLib.c ****     }
1497:.\Generated_Source\PSoC4/CyLib.c **** 
1498:.\Generated_Source\PSoC4/CyLib.c ****     (void) CyIntSetSysVector(CY_INT_SYSTICK_IRQN, &CySysTickServiceCallbacks);
1499:.\Generated_Source\PSoC4/CyLib.c **** 
1500:.\Generated_Source\PSoC4/CyLib.c ****     #if(!CY_PSOC3 && !CY_PSOC4_4000 && !CY_PSOC4_4100 && !CY_PSOC4_4200)
1501:.\Generated_Source\PSoC4/CyLib.c ****         CySysTickSetClockSource(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK);
1502:.\Generated_Source\PSoC4/CyLib.c ****     #endif /* (!CY_PSOC3 && !CY_PSOC4_4000 && !CY_PSOC4_4100 && !CY_PSOC4_4200) */
1503:.\Generated_Source\PSoC4/CyLib.c **** 
1504:.\Generated_Source\PSoC4/CyLib.c ****     CySysTickSetReload(cydelayFreqHz/1000u);
1505:.\Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
1506:.\Generated_Source\PSoC4/CyLib.c ****     CyIntEnable(CY_INT_SYSTICK_IRQN);
1507:.\Generated_Source\PSoC4/CyLib.c **** }
1508:.\Generated_Source\PSoC4/CyLib.c **** 
1509:.\Generated_Source\PSoC4/CyLib.c **** 
1510:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1511:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnable
1512:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1513:.\Generated_Source\PSoC4/CyLib.c **** *
1514:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1515:.\Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick timer and its interrupt.
1516:.\Generated_Source\PSoC4/CyLib.c **** *
1517:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1518:.\Generated_Source\PSoC4/CyLib.c **** *  None
1519:.\Generated_Source\PSoC4/CyLib.c **** *
1520:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1521:.\Generated_Source\PSoC4/CyLib.c **** *  None
1522:.\Generated_Source\PSoC4/CyLib.c **** *
1523:.\Generated_Source\PSoC4/CyLib.c **** * Side Effects:
1524:.\Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
1525:.\Generated_Source\PSoC4/CyLib.c **** *
1526:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1527:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickEnable(void)
1528:.\Generated_Source\PSoC4/CyLib.c **** {
1529:.\Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
1530:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
1531:.\Generated_Source\PSoC4/CyLib.c **** }
1532:.\Generated_Source\PSoC4/CyLib.c **** 
1533:.\Generated_Source\PSoC4/CyLib.c **** 
1534:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1535:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickStop
1536:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1537:.\Generated_Source\PSoC4/CyLib.c **** *
1538:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1539:.\Generated_Source\PSoC4/CyLib.c **** *  Stops the system timer (SysTick).
1540:.\Generated_Source\PSoC4/CyLib.c **** *
1541:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1542:.\Generated_Source\PSoC4/CyLib.c **** *  None
1543:.\Generated_Source\PSoC4/CyLib.c **** *
1544:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1545:.\Generated_Source\PSoC4/CyLib.c **** *  None
ARM GAS  C:\Users\ELECTR~1\AppData\Local\Temp\ccybjnra.s 			page 53


1546:.\Generated_Source\PSoC4/CyLib.c **** *
1547:.\Generated_Source\PSoC4/CyLib.c **** * Side Effects:
1548:.\Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
1549:.\Generated_Source\PSoC4/CyLib.c **** *
1550:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1551:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickStop(void)
1552:.\Generated_Source\PSoC4/CyLib.c **** {
 1342              		.loc 1 1552 0
 1343              		.cfi_startproc
1553:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE));
 1344              		.loc 1 1553 0
 1345 0000 024A     		ldr	r2, .L109
 1346 0002 1368     		ldr	r3, [r2]
 1347 0004 0121     		mov	r1, #1
 1348 0006 8B43     		bic	r3, r1
 1349 0008 1360     		str	r3, [r2]
1554:.\Generated_Source\PSoC4/CyLib.c **** }
 1350              		.loc 1 1554 0
 1351              		@ sp needed
 1352 000a 7047     		bx	lr
 1353              	.L110:
 1354              		.align	2
 1355              	.L109:
 1356 000c 10E000E0 		.word	-536813552
 1357              		.cfi_endproc
 1358              	.LFE37:
 1359              		.size	CySysTickStop, .-CySysTickStop
 1360              		.section	.text.CySysTickEnableInterrupt,"ax",%progbits
 1361              		.align	2
 1362              		.global	CySysTickEnableInterrupt
 1363              		.code	16
 1364              		.thumb_func
 1365              		.type	CySysTickEnableInterrupt, %function
 1366              	CySysTickEnableInterrupt:
 1367              	.LFB38:
1555:.\Generated_Source\PSoC4/CyLib.c **** 
1556:.\Generated_Source\PSoC4/CyLib.c **** 
1557:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1558:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnableInterrupt
1559:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1560:.\Generated_Source\PSoC4/CyLib.c **** *
1561:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1562:.\Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick interrupt.
1563:.\Generated_Source\PSoC4/CyLib.c **** *
1564:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1565:.\Generated_Source\PSoC4/CyLib.c **** *  None
1566:.\Generated_Source\PSoC4/CyLib.c **** *
1567:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1568:.\Generated_Source\PSoC4/CyLib.c **** *  None
1569:.\Generated_Source\PSoC4/CyLib.c **** *
1570:.\Generated_Source\PSoC4/CyLib.c **** * Side Effects:
1571:.\Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
1572:.\Generated_Source\PSoC4/CyLib.c **** *
1573:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1574:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickEnableInterrupt(void)
1575:.\Generated_Source\PSoC4/CyLib.c **** {
 1368              		.loc 1 1575 0
ARM GAS  C:\Users\ELECTR~1\AppData\Local\Temp\ccybjnra.s 			page 54


 1369              		.cfi_startproc
1576:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE_INT;
 1370              		.loc 1 1576 0
 1371 0000 024A     		ldr	r2, .L112
 1372 0002 1168     		ldr	r1, [r2]
 1373 0004 0223     		mov	r3, #2
 1374 0006 0B43     		orr	r3, r1
 1375 0008 1360     		str	r3, [r2]
1577:.\Generated_Source\PSoC4/CyLib.c **** }
 1376              		.loc 1 1577 0
 1377              		@ sp needed
 1378 000a 7047     		bx	lr
 1379              	.L113:
 1380              		.align	2
 1381              	.L112:
 1382 000c 10E000E0 		.word	-536813552
 1383              		.cfi_endproc
 1384              	.LFE38:
 1385              		.size	CySysTickEnableInterrupt, .-CySysTickEnableInterrupt
 1386              		.section	.text.CySysTickEnable,"ax",%progbits
 1387              		.align	2
 1388              		.global	CySysTickEnable
 1389              		.code	16
 1390              		.thumb_func
 1391              		.type	CySysTickEnable, %function
 1392              	CySysTickEnable:
 1393              	.LFB36:
1528:.\Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
 1394              		.loc 1 1528 0
 1395              		.cfi_startproc
 1396 0000 08B5     		push	{r3, lr}
 1397              		.cfi_def_cfa_offset 8
 1398              		.cfi_offset 3, -8
 1399              		.cfi_offset 14, -4
1529:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
 1400              		.loc 1 1529 0
 1401 0002 FFF7FEFF 		bl	CySysTickEnableInterrupt
 1402              	.LVL100:
1530:.\Generated_Source\PSoC4/CyLib.c **** }
 1403              		.loc 1 1530 0
 1404 0006 034A     		ldr	r2, .L115
 1405 0008 1168     		ldr	r1, [r2]
 1406 000a 0123     		mov	r3, #1
 1407 000c 0B43     		orr	r3, r1
 1408 000e 1360     		str	r3, [r2]
1531:.\Generated_Source\PSoC4/CyLib.c **** 
 1409              		.loc 1 1531 0
 1410              		@ sp needed
 1411 0010 08BD     		pop	{r3, pc}
 1412              	.L116:
 1413 0012 C046     		.align	2
 1414              	.L115:
 1415 0014 10E000E0 		.word	-536813552
 1416              		.cfi_endproc
 1417              	.LFE36:
 1418              		.size	CySysTickEnable, .-CySysTickEnable
 1419              		.section	.text.CySysTickDisableInterrupt,"ax",%progbits
ARM GAS  C:\Users\ELECTR~1\AppData\Local\Temp\ccybjnra.s 			page 55


 1420              		.align	2
 1421              		.global	CySysTickDisableInterrupt
 1422              		.code	16
 1423              		.thumb_func
 1424              		.type	CySysTickDisableInterrupt, %function
 1425              	CySysTickDisableInterrupt:
 1426              	.LFB39:
1578:.\Generated_Source\PSoC4/CyLib.c **** 
1579:.\Generated_Source\PSoC4/CyLib.c **** 
1580:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1581:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickDisableInterrupt
1582:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1583:.\Generated_Source\PSoC4/CyLib.c **** *
1584:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1585:.\Generated_Source\PSoC4/CyLib.c **** *  Disables the SysTick interrupt.
1586:.\Generated_Source\PSoC4/CyLib.c **** *
1587:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1588:.\Generated_Source\PSoC4/CyLib.c **** *  None
1589:.\Generated_Source\PSoC4/CyLib.c **** *
1590:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1591:.\Generated_Source\PSoC4/CyLib.c **** *  None
1592:.\Generated_Source\PSoC4/CyLib.c **** *
1593:.\Generated_Source\PSoC4/CyLib.c **** * Side Effects:
1594:.\Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
1595:.\Generated_Source\PSoC4/CyLib.c **** *
1596:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1597:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickDisableInterrupt(void)
1598:.\Generated_Source\PSoC4/CyLib.c **** {
 1427              		.loc 1 1598 0
 1428              		.cfi_startproc
1599:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE_INT));
 1429              		.loc 1 1599 0
 1430 0000 024A     		ldr	r2, .L118
 1431 0002 1368     		ldr	r3, [r2]
 1432 0004 0221     		mov	r1, #2
 1433 0006 8B43     		bic	r3, r1
 1434 0008 1360     		str	r3, [r2]
1600:.\Generated_Source\PSoC4/CyLib.c **** }
 1435              		.loc 1 1600 0
 1436              		@ sp needed
 1437 000a 7047     		bx	lr
 1438              	.L119:
 1439              		.align	2
 1440              	.L118:
 1441 000c 10E000E0 		.word	-536813552
 1442              		.cfi_endproc
 1443              	.LFE39:
 1444              		.size	CySysTickDisableInterrupt, .-CySysTickDisableInterrupt
 1445              		.section	.text.CySysTickSetReload,"ax",%progbits
 1446              		.align	2
 1447              		.global	CySysTickSetReload
 1448              		.code	16
 1449              		.thumb_func
 1450              		.type	CySysTickSetReload, %function
 1451              	CySysTickSetReload:
 1452              	.LFB40:
1601:.\Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\ELECTR~1\AppData\Local\Temp\ccybjnra.s 			page 56


1602:.\Generated_Source\PSoC4/CyLib.c **** 
1603:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1604:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetReload
1605:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1606:.\Generated_Source\PSoC4/CyLib.c **** *
1607:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1608:.\Generated_Source\PSoC4/CyLib.c **** *  Sets value the counter is set to on startup and after it reaches zero. This
1609:.\Generated_Source\PSoC4/CyLib.c **** *  function do not change or reset current sysTick counter value, so it should
1610:.\Generated_Source\PSoC4/CyLib.c **** *  be cleared using CySysTickClear() API.
1611:.\Generated_Source\PSoC4/CyLib.c **** *
1612:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1613:.\Generated_Source\PSoC4/CyLib.c **** *  value: Valid range [0x0-0x00FFFFFF]. Counter reset value
1614:.\Generated_Source\PSoC4/CyLib.c **** *
1615:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1616:.\Generated_Source\PSoC4/CyLib.c **** *  None
1617:.\Generated_Source\PSoC4/CyLib.c **** *
1618:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1619:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickSetReload(uint32 value)
1620:.\Generated_Source\PSoC4/CyLib.c **** {
 1453              		.loc 1 1620 0
 1454              		.cfi_startproc
 1455              	.LVL101:
1621:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_RVR_REG = (value & CY_SYS_SYST_RVR_CNT_MASK);
 1456              		.loc 1 1621 0
 1457 0000 0002     		lsl	r0, r0, #8
 1458              	.LVL102:
 1459 0002 000A     		lsr	r0, r0, #8
 1460 0004 014B     		ldr	r3, .L121
 1461 0006 1860     		str	r0, [r3]
1622:.\Generated_Source\PSoC4/CyLib.c **** }
 1462              		.loc 1 1622 0
 1463              		@ sp needed
 1464 0008 7047     		bx	lr
 1465              	.L122:
 1466 000a C046     		.align	2
 1467              	.L121:
 1468 000c 14E000E0 		.word	-536813548
 1469              		.cfi_endproc
 1470              	.LFE40:
 1471              		.size	CySysTickSetReload, .-CySysTickSetReload
 1472              		.section	.text.CySysTickGetReload,"ax",%progbits
 1473              		.align	2
 1474              		.global	CySysTickGetReload
 1475              		.code	16
 1476              		.thumb_func
 1477              		.type	CySysTickGetReload, %function
 1478              	CySysTickGetReload:
 1479              	.LFB41:
1623:.\Generated_Source\PSoC4/CyLib.c **** 
1624:.\Generated_Source\PSoC4/CyLib.c **** 
1625:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1626:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetReload
1627:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1628:.\Generated_Source\PSoC4/CyLib.c **** *
1629:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1630:.\Generated_Source\PSoC4/CyLib.c **** *  Sets value the counter is set to on startup and after it reaches zero.
1631:.\Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\ELECTR~1\AppData\Local\Temp\ccybjnra.s 			page 57


1632:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1633:.\Generated_Source\PSoC4/CyLib.c **** *  None
1634:.\Generated_Source\PSoC4/CyLib.c **** *
1635:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1636:.\Generated_Source\PSoC4/CyLib.c **** *  Counter reset value.
1637:.\Generated_Source\PSoC4/CyLib.c **** *
1638:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1639:.\Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetReload(void)
1640:.\Generated_Source\PSoC4/CyLib.c **** {
 1480              		.loc 1 1640 0
 1481              		.cfi_startproc
1641:.\Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_RVR_REG & CY_SYS_SYST_RVR_CNT_MASK);
 1482              		.loc 1 1641 0
 1483 0000 024B     		ldr	r3, .L124
 1484 0002 1868     		ldr	r0, [r3]
 1485 0004 0002     		lsl	r0, r0, #8
 1486 0006 000A     		lsr	r0, r0, #8
1642:.\Generated_Source\PSoC4/CyLib.c **** }
 1487              		.loc 1 1642 0
 1488              		@ sp needed
 1489 0008 7047     		bx	lr
 1490              	.L125:
 1491 000a C046     		.align	2
 1492              	.L124:
 1493 000c 14E000E0 		.word	-536813548
 1494              		.cfi_endproc
 1495              	.LFE41:
 1496              		.size	CySysTickGetReload, .-CySysTickGetReload
 1497              		.section	.text.CySysTickGetValue,"ax",%progbits
 1498              		.align	2
 1499              		.global	CySysTickGetValue
 1500              		.code	16
 1501              		.thumb_func
 1502              		.type	CySysTickGetValue, %function
 1503              	CySysTickGetValue:
 1504              	.LFB42:
1643:.\Generated_Source\PSoC4/CyLib.c **** 
1644:.\Generated_Source\PSoC4/CyLib.c **** 
1645:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1646:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetValue
1647:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1648:.\Generated_Source\PSoC4/CyLib.c **** *
1649:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1650:.\Generated_Source\PSoC4/CyLib.c **** *  Gets current SysTick counter value.
1651:.\Generated_Source\PSoC4/CyLib.c **** *
1652:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1653:.\Generated_Source\PSoC4/CyLib.c **** *  None
1654:.\Generated_Source\PSoC4/CyLib.c **** *
1655:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1656:.\Generated_Source\PSoC4/CyLib.c **** *  Current SysTick counter value
1657:.\Generated_Source\PSoC4/CyLib.c **** *
1658:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1659:.\Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetValue(void)
1660:.\Generated_Source\PSoC4/CyLib.c **** {
 1505              		.loc 1 1660 0
 1506              		.cfi_startproc
1661:.\Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_CVR_REG & CY_SYS_SYST_CVR_CNT_MASK);
ARM GAS  C:\Users\ELECTR~1\AppData\Local\Temp\ccybjnra.s 			page 58


 1507              		.loc 1 1661 0
 1508 0000 024B     		ldr	r3, .L127
 1509 0002 1868     		ldr	r0, [r3]
 1510 0004 0002     		lsl	r0, r0, #8
 1511 0006 000A     		lsr	r0, r0, #8
1662:.\Generated_Source\PSoC4/CyLib.c **** }
 1512              		.loc 1 1662 0
 1513              		@ sp needed
 1514 0008 7047     		bx	lr
 1515              	.L128:
 1516 000a C046     		.align	2
 1517              	.L127:
 1518 000c 18E000E0 		.word	-536813544
 1519              		.cfi_endproc
 1520              	.LFE42:
 1521              		.size	CySysTickGetValue, .-CySysTickGetValue
 1522              		.section	.text.CySysTickSetClockSource,"ax",%progbits
 1523              		.align	2
 1524              		.global	CySysTickSetClockSource
 1525              		.code	16
 1526              		.thumb_func
 1527              		.type	CySysTickSetClockSource, %function
 1528              	CySysTickSetClockSource:
 1529              	.LFB43:
1663:.\Generated_Source\PSoC4/CyLib.c **** 
1664:.\Generated_Source\PSoC4/CyLib.c **** 
1665:.\Generated_Source\PSoC4/CyLib.c **** #if(!CY_PSOC3 && !CY_PSOC4_4000 && !CY_PSOC4_4100 && !CY_PSOC4_4200)
1666:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1667:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickSetClockSource
1668:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1669:.\Generated_Source\PSoC4/CyLib.c ****     *
1670:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
1671:.\Generated_Source\PSoC4/CyLib.c ****     *  Sets the clock source for the SysTick counter.
1672:.\Generated_Source\PSoC4/CyLib.c ****     *
1673:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
1674:.\Generated_Source\PSoC4/CyLib.c ****     *  clockSource: Clock source for SysTick counter
1675:.\Generated_Source\PSoC4/CyLib.c ****     *         Define                     Clock Source
1676:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by CPU clock.
1677:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
1678:.\Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
1679:.\Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
1680:.\Generated_Source\PSoC4/CyLib.c ****     *
1681:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
1682:.\Generated_Source\PSoC4/CyLib.c ****     *  None
1683:.\Generated_Source\PSoC4/CyLib.c ****     *
1684:.\Generated_Source\PSoC4/CyLib.c ****     * Side Effects:
1685:.\Generated_Source\PSoC4/CyLib.c ****     *  Clears SysTick count flag if it was set. If clock source is not ready this
1686:.\Generated_Source\PSoC4/CyLib.c ****     *  function call will have no effect. After changing clock source to the low
1687:.\Generated_Source\PSoC4/CyLib.c ****     *  frequency clock the counter and reload register values will remain unchanged
1688:.\Generated_Source\PSoC4/CyLib.c ****     *  so time to the interrupt will be significantly bigger and vice versa.
1689:.\Generated_Source\PSoC4/CyLib.c ****     *
1690:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1691:.\Generated_Source\PSoC4/CyLib.c ****     void CySysTickSetClockSource(uint32 clockSource)
1692:.\Generated_Source\PSoC4/CyLib.c ****     {
 1530              		.loc 1 1692 0
 1531              		.cfi_startproc
 1532              	.LVL103:
ARM GAS  C:\Users\ELECTR~1\AppData\Local\Temp\ccybjnra.s 			page 59


1693:.\Generated_Source\PSoC4/CyLib.c ****         if (clockSource == CY_SYS_SYST_CSR_CLK_SRC_SYSCLK)
 1533              		.loc 1 1693 0
 1534 0000 0128     		cmp	r0, #1
 1535 0002 05D1     		bne	.L130
1694:.\Generated_Source\PSoC4/CyLib.c ****         {
1695:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG |= (uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SYST_CSR_CLK_S
 1536              		.loc 1 1695 0
 1537 0004 054A     		ldr	r2, .L132
 1538 0006 1168     		ldr	r1, [r2]
 1539 0008 0423     		mov	r3, #4
 1540 000a 0B43     		orr	r3, r1
 1541 000c 1360     		str	r3, [r2]
 1542 000e 04E0     		b	.L129
 1543              	.L130:
1696:.\Generated_Source\PSoC4/CyLib.c ****         }
1697:.\Generated_Source\PSoC4/CyLib.c ****         else
1698:.\Generated_Source\PSoC4/CyLib.c ****         {
1699:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG &= ((uint32) ~((uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SY
 1544              		.loc 1 1699 0
 1545 0010 024A     		ldr	r2, .L132
 1546 0012 1368     		ldr	r3, [r2]
 1547 0014 0421     		mov	r1, #4
 1548 0016 8B43     		bic	r3, r1
 1549 0018 1360     		str	r3, [r2]
 1550              	.L129:
1700:.\Generated_Source\PSoC4/CyLib.c ****         }
1701:.\Generated_Source\PSoC4/CyLib.c ****     }
 1551              		.loc 1 1701 0
 1552              		@ sp needed
 1553 001a 7047     		bx	lr
 1554              	.L133:
 1555              		.align	2
 1556              	.L132:
 1557 001c 10E000E0 		.word	-536813552
 1558              		.cfi_endproc
 1559              	.LFE43:
 1560              		.size	CySysTickSetClockSource, .-CySysTickSetClockSource
 1561              		.section	.text.CySysTickGetCountFlag,"ax",%progbits
 1562              		.align	2
 1563              		.global	CySysTickGetCountFlag
 1564              		.code	16
 1565              		.thumb_func
 1566              		.type	CySysTickGetCountFlag, %function
 1567              	CySysTickGetCountFlag:
 1568              	.LFB44:
1702:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (!CY_PSOC3 && !CY_PSOC4_4000 && !CY_PSOC4_4100 && !CY_PSOC4_4200) */
1703:.\Generated_Source\PSoC4/CyLib.c **** 
1704:.\Generated_Source\PSoC4/CyLib.c **** 
1705:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1706:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCountFlag
1707:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1708:.\Generated_Source\PSoC4/CyLib.c **** *
1709:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1710:.\Generated_Source\PSoC4/CyLib.c **** *  The count flag is set once SysTick counter reaches zero.
1711:.\Generated_Source\PSoC4/CyLib.c **** *   The flag cleared on read.
1712:.\Generated_Source\PSoC4/CyLib.c **** *
1713:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
ARM GAS  C:\Users\ELECTR~1\AppData\Local\Temp\ccybjnra.s 			page 60


1714:.\Generated_Source\PSoC4/CyLib.c **** *  None
1715:.\Generated_Source\PSoC4/CyLib.c **** *
1716:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1717:.\Generated_Source\PSoC4/CyLib.c ****     *  Returns non-zero value if flag is set, otherwise zero is returned.
1718:.\Generated_Source\PSoC4/CyLib.c **** *
1719:.\Generated_Source\PSoC4/CyLib.c **** *
1720:.\Generated_Source\PSoC4/CyLib.c **** * Side Effects:
1721:.\Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
1722:.\Generated_Source\PSoC4/CyLib.c **** *
1723:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1724:.\Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetCountFlag(void)
1725:.\Generated_Source\PSoC4/CyLib.c **** {
 1569              		.loc 1 1725 0
 1570              		.cfi_startproc
1726:.\Generated_Source\PSoC4/CyLib.c ****     return ((CY_SYS_SYST_CSR_REG>>CY_SYS_SYST_CSR_COUNTFLAG_SHIFT) & 0x01u);
 1571              		.loc 1 1726 0
 1572 0000 024B     		ldr	r3, .L135
 1573 0002 1868     		ldr	r0, [r3]
 1574 0004 C003     		lsl	r0, r0, #15
 1575 0006 C00F     		lsr	r0, r0, #31
1727:.\Generated_Source\PSoC4/CyLib.c **** }
 1576              		.loc 1 1727 0
 1577              		@ sp needed
 1578 0008 7047     		bx	lr
 1579              	.L136:
 1580 000a C046     		.align	2
 1581              	.L135:
 1582 000c 10E000E0 		.word	-536813552
 1583              		.cfi_endproc
 1584              	.LFE44:
 1585              		.size	CySysTickGetCountFlag, .-CySysTickGetCountFlag
 1586              		.section	.text.CySysTickServiceCallbacks,"ax",%progbits
 1587              		.align	2
 1588              		.code	16
 1589              		.thumb_func
 1590              		.type	CySysTickServiceCallbacks, %function
 1591              	CySysTickServiceCallbacks:
 1592              	.LFB48:
1728:.\Generated_Source\PSoC4/CyLib.c **** 
1729:.\Generated_Source\PSoC4/CyLib.c **** 
1730:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1731:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickClear
1732:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1733:.\Generated_Source\PSoC4/CyLib.c **** *
1734:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1735:.\Generated_Source\PSoC4/CyLib.c **** *  Clears the SysTick counter for well-defined startup.
1736:.\Generated_Source\PSoC4/CyLib.c **** *
1737:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1738:.\Generated_Source\PSoC4/CyLib.c **** *  None
1739:.\Generated_Source\PSoC4/CyLib.c **** *
1740:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1741:.\Generated_Source\PSoC4/CyLib.c **** *  None
1742:.\Generated_Source\PSoC4/CyLib.c **** *
1743:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1744:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickClear(void)
1745:.\Generated_Source\PSoC4/CyLib.c **** {
1746:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
ARM GAS  C:\Users\ELECTR~1\AppData\Local\Temp\ccybjnra.s 			page 61


1747:.\Generated_Source\PSoC4/CyLib.c **** }
1748:.\Generated_Source\PSoC4/CyLib.c **** 
1749:.\Generated_Source\PSoC4/CyLib.c **** 
1750:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1751:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetCallback
1752:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1753:.\Generated_Source\PSoC4/CyLib.c **** *
1754:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1755:.\Generated_Source\PSoC4/CyLib.c **** *  This function allows up to five user-defined interrupt service routine
1756:.\Generated_Source\PSoC4/CyLib.c **** *  functions to be associated with the SysTick interrupt. These are specified
1757:.\Generated_Source\PSoC4/CyLib.c **** *  through the use of pointers to the function.
1758:.\Generated_Source\PSoC4/CyLib.c **** *
1759:.\Generated_Source\PSoC4/CyLib.c **** *  To set a custom callback function without the overhead of the system provided
1760:.\Generated_Source\PSoC4/CyLib.c **** *  one, use CyIntSetSysVector(CY_INT_SYSTICK_IRQN, cyisraddress <address>),
1761:.\Generated_Source\PSoC4/CyLib.c **** *  where <address> is address of the custom defined interrupt service routine.
1762:.\Generated_Source\PSoC4/CyLib.c **** *  Note: a custom callback function overrides the system defined callback
1763:.\Generated_Source\PSoC4/CyLib.c **** *  functions.
1764:.\Generated_Source\PSoC4/CyLib.c **** *
1765:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1766:.\Generated_Source\PSoC4/CyLib.c **** *  number: The number of the callback function addresses to be set. The valid
1767:.\Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
1768:.\Generated_Source\PSoC4/CyLib.c **** *
1769:.\Generated_Source\PSoC4/CyLib.c **** *  void(*CallbackFunction(void): A pointer to the function that will be
1770:.\Generated_Source\PSoC4/CyLib.c **** *                                associated with the SysTick ISR for the
1771:.\Generated_Source\PSoC4/CyLib.c **** *                                specified number.
1772:.\Generated_Source\PSoC4/CyLib.c **** *
1773:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1774:.\Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the previous callback function.
1775:.\Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not set.
1776:.\Generated_Source\PSoC4/CyLib.c **** *
1777:.\Generated_Source\PSoC4/CyLib.c **** * Side Effects:
1778:.\Generated_Source\PSoC4/CyLib.c **** *  The registered callback functions will be executed in the interrupt.
1779:.\Generated_Source\PSoC4/CyLib.c **** *
1780:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1781:.\Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickSetCallback(uint32 number, cySysTickCallback function)
1782:.\Generated_Source\PSoC4/CyLib.c **** {
1783:.\Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
1784:.\Generated_Source\PSoC4/CyLib.c **** 
1785:.\Generated_Source\PSoC4/CyLib.c ****     retVal = CySysTickCallbacks[number];
1786:.\Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
1787:.\Generated_Source\PSoC4/CyLib.c ****     return (retVal);
1788:.\Generated_Source\PSoC4/CyLib.c **** }
1789:.\Generated_Source\PSoC4/CyLib.c **** 
1790:.\Generated_Source\PSoC4/CyLib.c **** 
1791:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1792:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCallback
1793:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1794:.\Generated_Source\PSoC4/CyLib.c **** *
1795:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1796:.\Generated_Source\PSoC4/CyLib.c **** *  The function get the specified callback pointer.
1797:.\Generated_Source\PSoC4/CyLib.c **** *
1798:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1799:.\Generated_Source\PSoC4/CyLib.c **** *  number: The number of callback function address to get. The valid
1800:.\Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
1801:.\Generated_Source\PSoC4/CyLib.c **** *
1802:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1803:.\Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the specified callback function.
ARM GAS  C:\Users\ELECTR~1\AppData\Local\Temp\ccybjnra.s 			page 62


1804:.\Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not initialized.
1805:.\Generated_Source\PSoC4/CyLib.c **** *
1806:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1807:.\Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickGetCallback(uint32 number)
1808:.\Generated_Source\PSoC4/CyLib.c **** {
1809:.\Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
1810:.\Generated_Source\PSoC4/CyLib.c **** }
1811:.\Generated_Source\PSoC4/CyLib.c **** 
1812:.\Generated_Source\PSoC4/CyLib.c **** 
1813:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1814:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickServiceCallbacks
1815:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1816:.\Generated_Source\PSoC4/CyLib.c **** *
1817:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1818:.\Generated_Source\PSoC4/CyLib.c **** *  System Tick timer interrupt routine
1819:.\Generated_Source\PSoC4/CyLib.c **** *
1820:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1821:.\Generated_Source\PSoC4/CyLib.c **** *  None
1822:.\Generated_Source\PSoC4/CyLib.c **** *
1823:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1824:.\Generated_Source\PSoC4/CyLib.c **** *  None
1825:.\Generated_Source\PSoC4/CyLib.c **** *
1826:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1827:.\Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void)
1828:.\Generated_Source\PSoC4/CyLib.c **** {
 1593              		.loc 1 1828 0
 1594              		.cfi_startproc
 1595 0000 10B5     		push	{r4, lr}
 1596              		.cfi_def_cfa_offset 8
 1597              		.cfi_offset 4, -8
 1598              		.cfi_offset 14, -4
1829:.\Generated_Source\PSoC4/CyLib.c ****     uint32 i;
1830:.\Generated_Source\PSoC4/CyLib.c **** 
1831:.\Generated_Source\PSoC4/CyLib.c ****     /* Verify that tick timer flag was set */
1832:.\Generated_Source\PSoC4/CyLib.c ****     if (1u == CySysTickGetCountFlag())
 1599              		.loc 1 1832 0
 1600 0002 FFF7FEFF 		bl	CySysTickGetCountFlag
 1601              	.LVL104:
 1602 0006 0128     		cmp	r0, #1
 1603 0008 0BD1     		bne	.L137
 1604 000a 07E0     		b	.L142
 1605              	.LVL105:
 1606              	.L141:
1833:.\Generated_Source\PSoC4/CyLib.c ****     {
1834:.\Generated_Source\PSoC4/CyLib.c ****         for (i=0u; i < CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
1835:.\Generated_Source\PSoC4/CyLib.c ****         {
1836:.\Generated_Source\PSoC4/CyLib.c ****             if (CySysTickCallbacks[i] != (void *) 0)
 1607              		.loc 1 1836 0
 1608 000c A300     		lsl	r3, r4, #2
 1609 000e 054A     		ldr	r2, .L143
 1610 0010 9B58     		ldr	r3, [r3, r2]
 1611 0012 002B     		cmp	r3, #0
 1612 0014 00D0     		beq	.L140
1837:.\Generated_Source\PSoC4/CyLib.c ****             {
1838:.\Generated_Source\PSoC4/CyLib.c ****                 (void)(CySysTickCallbacks[i])();
 1613              		.loc 1 1838 0
 1614 0016 9847     		blx	r3
ARM GAS  C:\Users\ELECTR~1\AppData\Local\Temp\ccybjnra.s 			page 63


 1615              	.LVL106:
 1616              	.L140:
1834:.\Generated_Source\PSoC4/CyLib.c ****         {
 1617              		.loc 1 1834 0 discriminator 2
 1618 0018 0134     		add	r4, r4, #1
 1619              	.LVL107:
 1620 001a 00E0     		b	.L138
 1621              	.LVL108:
 1622              	.L142:
 1623 001c 0024     		mov	r4, #0
 1624              	.L138:
 1625              	.LVL109:
1834:.\Generated_Source\PSoC4/CyLib.c ****         {
 1626              		.loc 1 1834 0 is_stmt 0 discriminator 1
 1627 001e 042C     		cmp	r4, #4
 1628 0020 F4D9     		bls	.L141
 1629              	.LVL110:
 1630              	.L137:
1839:.\Generated_Source\PSoC4/CyLib.c ****             }
1840:.\Generated_Source\PSoC4/CyLib.c ****         }
1841:.\Generated_Source\PSoC4/CyLib.c ****     }
1842:.\Generated_Source\PSoC4/CyLib.c **** }
 1631              		.loc 1 1842 0 is_stmt 1
 1632              		@ sp needed
 1633 0022 10BD     		pop	{r4, pc}
 1634              	.L144:
 1635              		.align	2
 1636              	.L143:
 1637 0024 00000000 		.word	.LANCHOR2
 1638              		.cfi_endproc
 1639              	.LFE48:
 1640              		.size	CySysTickServiceCallbacks, .-CySysTickServiceCallbacks
 1641              		.section	.text.CySysTickClear,"ax",%progbits
 1642              		.align	2
 1643              		.global	CySysTickClear
 1644              		.code	16
 1645              		.thumb_func
 1646              		.type	CySysTickClear, %function
 1647              	CySysTickClear:
 1648              	.LFB45:
1745:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
 1649              		.loc 1 1745 0
 1650              		.cfi_startproc
1746:.\Generated_Source\PSoC4/CyLib.c **** }
 1651              		.loc 1 1746 0
 1652 0000 0022     		mov	r2, #0
 1653 0002 014B     		ldr	r3, .L146
 1654 0004 1A60     		str	r2, [r3]
1747:.\Generated_Source\PSoC4/CyLib.c **** 
 1655              		.loc 1 1747 0
 1656              		@ sp needed
 1657 0006 7047     		bx	lr
 1658              	.L147:
 1659              		.align	2
 1660              	.L146:
 1661 0008 18E000E0 		.word	-536813544
 1662              		.cfi_endproc
ARM GAS  C:\Users\ELECTR~1\AppData\Local\Temp\ccybjnra.s 			page 64


 1663              	.LFE45:
 1664              		.size	CySysTickClear, .-CySysTickClear
 1665              		.section	.text.CySysTickInit,"ax",%progbits
 1666              		.align	2
 1667              		.global	CySysTickInit
 1668              		.code	16
 1669              		.thumb_func
 1670              		.type	CySysTickInit, %function
 1671              	CySysTickInit:
 1672              	.LFB35:
1490:.\Generated_Source\PSoC4/CyLib.c ****     uint32 i;
 1673              		.loc 1 1490 0
 1674              		.cfi_startproc
 1675 0000 08B5     		push	{r3, lr}
 1676              		.cfi_def_cfa_offset 8
 1677              		.cfi_offset 3, -8
 1678              		.cfi_offset 14, -4
 1679              	.LVL111:
1493:.\Generated_Source\PSoC4/CyLib.c ****     {
 1680              		.loc 1 1493 0
 1681 0002 0023     		mov	r3, #0
 1682 0004 04E0     		b	.L149
 1683              	.LVL112:
 1684              	.L150:
1495:.\Generated_Source\PSoC4/CyLib.c ****     }
 1685              		.loc 1 1495 0 discriminator 3
 1686 0006 9900     		lsl	r1, r3, #2
 1687 0008 0020     		mov	r0, #0
 1688 000a 0D4A     		ldr	r2, .L151
 1689 000c 8850     		str	r0, [r1, r2]
1493:.\Generated_Source\PSoC4/CyLib.c ****     {
 1690              		.loc 1 1493 0 discriminator 3
 1691 000e 0133     		add	r3, r3, #1
 1692              	.LVL113:
 1693              	.L149:
1493:.\Generated_Source\PSoC4/CyLib.c ****     {
 1694              		.loc 1 1493 0 is_stmt 0 discriminator 1
 1695 0010 042B     		cmp	r3, #4
 1696 0012 F8D9     		bls	.L150
1498:.\Generated_Source\PSoC4/CyLib.c **** 
 1697              		.loc 1 1498 0 is_stmt 1
 1698 0014 0F20     		mov	r0, #15
 1699 0016 0B49     		ldr	r1, .L151+4
 1700 0018 FFF7FEFF 		bl	CyIntSetSysVector
 1701              	.LVL114:
1501:.\Generated_Source\PSoC4/CyLib.c ****     #endif /* (!CY_PSOC3 && !CY_PSOC4_4000 && !CY_PSOC4_4100 && !CY_PSOC4_4200) */
 1702              		.loc 1 1501 0
 1703 001c 0120     		mov	r0, #1
 1704 001e FFF7FEFF 		bl	CySysTickSetClockSource
 1705              	.LVL115:
1504:.\Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
 1706              		.loc 1 1504 0
 1707 0022 094B     		ldr	r3, .L151+8
 1708 0024 D868     		ldr	r0, [r3, #12]
 1709 0026 FA21     		mov	r1, #250
 1710 0028 8900     		lsl	r1, r1, #2
 1711 002a FFF7FEFF 		bl	__aeabi_uidiv
ARM GAS  C:\Users\ELECTR~1\AppData\Local\Temp\ccybjnra.s 			page 65


 1712              	.LVL116:
 1713 002e FFF7FEFF 		bl	CySysTickSetReload
 1714              	.LVL117:
1505:.\Generated_Source\PSoC4/CyLib.c ****     CyIntEnable(CY_INT_SYSTICK_IRQN);
 1715              		.loc 1 1505 0
 1716 0032 FFF7FEFF 		bl	CySysTickClear
 1717              	.LVL118:
1506:.\Generated_Source\PSoC4/CyLib.c **** }
 1718              		.loc 1 1506 0
 1719 0036 0F20     		mov	r0, #15
 1720 0038 FFF7FEFF 		bl	CyIntEnable
 1721              	.LVL119:
1507:.\Generated_Source\PSoC4/CyLib.c **** 
 1722              		.loc 1 1507 0
 1723              		@ sp needed
 1724 003c 08BD     		pop	{r3, pc}
 1725              	.L152:
 1726 003e C046     		.align	2
 1727              	.L151:
 1728 0040 00000000 		.word	.LANCHOR2
 1729 0044 00000000 		.word	CySysTickServiceCallbacks
 1730 0048 00000000 		.word	.LANCHOR1
 1731              		.cfi_endproc
 1732              	.LFE35:
 1733              		.size	CySysTickInit, .-CySysTickInit
 1734              		.section	.text.CySysTickStart,"ax",%progbits
 1735              		.align	2
 1736              		.global	CySysTickStart
 1737              		.code	16
 1738              		.thumb_func
 1739              		.type	CySysTickStart, %function
 1740              	CySysTickStart:
 1741              	.LFB34:
1456:.\Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
 1742              		.loc 1 1456 0
 1743              		.cfi_startproc
 1744 0000 08B5     		push	{r3, lr}
 1745              		.cfi_def_cfa_offset 8
 1746              		.cfi_offset 3, -8
 1747              		.cfi_offset 14, -4
1457:.\Generated_Source\PSoC4/CyLib.c ****     {
 1748              		.loc 1 1457 0
 1749 0002 064B     		ldr	r3, .L155
 1750 0004 5B69     		ldr	r3, [r3, #20]
 1751 0006 002B     		cmp	r3, #0
 1752 0008 04D1     		bne	.L154
1459:.\Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
 1753              		.loc 1 1459 0
 1754 000a FFF7FEFF 		bl	CySysTickInit
 1755              	.LVL120:
1460:.\Generated_Source\PSoC4/CyLib.c ****     }
 1756              		.loc 1 1460 0
 1757 000e 0122     		mov	r2, #1
 1758 0010 024B     		ldr	r3, .L155
 1759 0012 5A61     		str	r2, [r3, #20]
 1760              	.L154:
1463:.\Generated_Source\PSoC4/CyLib.c **** }
ARM GAS  C:\Users\ELECTR~1\AppData\Local\Temp\ccybjnra.s 			page 66


 1761              		.loc 1 1463 0
 1762 0014 FFF7FEFF 		bl	CySysTickEnable
 1763              	.LVL121:
1464:.\Generated_Source\PSoC4/CyLib.c **** 
 1764              		.loc 1 1464 0
 1765              		@ sp needed
 1766 0018 08BD     		pop	{r3, pc}
 1767              	.L156:
 1768 001a C046     		.align	2
 1769              	.L155:
 1770 001c 00000000 		.word	.LANCHOR2
 1771              		.cfi_endproc
 1772              	.LFE34:
 1773              		.size	CySysTickStart, .-CySysTickStart
 1774              		.section	.text.CySysTickSetCallback,"ax",%progbits
 1775              		.align	2
 1776              		.global	CySysTickSetCallback
 1777              		.code	16
 1778              		.thumb_func
 1779              		.type	CySysTickSetCallback, %function
 1780              	CySysTickSetCallback:
 1781              	.LFB46:
1782:.\Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
 1782              		.loc 1 1782 0
 1783              		.cfi_startproc
 1784              	.LVL122:
1785:.\Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
 1785              		.loc 1 1785 0
 1786 0000 024A     		ldr	r2, .L158
 1787 0002 8300     		lsl	r3, r0, #2
 1788 0004 9858     		ldr	r0, [r3, r2]
 1789              	.LVL123:
1786:.\Generated_Source\PSoC4/CyLib.c ****     return (retVal);
 1790              		.loc 1 1786 0
 1791 0006 9950     		str	r1, [r3, r2]
1788:.\Generated_Source\PSoC4/CyLib.c **** 
 1792              		.loc 1 1788 0
 1793              		@ sp needed
 1794 0008 7047     		bx	lr
 1795              	.L159:
 1796 000a C046     		.align	2
 1797              	.L158:
 1798 000c 00000000 		.word	.LANCHOR2
 1799              		.cfi_endproc
 1800              	.LFE46:
 1801              		.size	CySysTickSetCallback, .-CySysTickSetCallback
 1802              		.section	.text.CySysTickGetCallback,"ax",%progbits
 1803              		.align	2
 1804              		.global	CySysTickGetCallback
 1805              		.code	16
 1806              		.thumb_func
 1807              		.type	CySysTickGetCallback, %function
 1808              	CySysTickGetCallback:
 1809              	.LFB47:
1808:.\Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
 1810              		.loc 1 1808 0
 1811              		.cfi_startproc
ARM GAS  C:\Users\ELECTR~1\AppData\Local\Temp\ccybjnra.s 			page 67


 1812              	.LVL124:
1809:.\Generated_Source\PSoC4/CyLib.c **** }
 1813              		.loc 1 1809 0
 1814 0000 8000     		lsl	r0, r0, #2
 1815              	.LVL125:
 1816 0002 014B     		ldr	r3, .L161
 1817 0004 C058     		ldr	r0, [r0, r3]
1810:.\Generated_Source\PSoC4/CyLib.c **** 
 1818              		.loc 1 1810 0
 1819              		@ sp needed
 1820 0006 7047     		bx	lr
 1821              	.L162:
 1822              		.align	2
 1823              	.L161:
 1824 0008 00000000 		.word	.LANCHOR2
 1825              		.cfi_endproc
 1826              	.LFE47:
 1827              		.size	CySysTickGetCallback, .-CySysTickGetCallback
 1828              		.section	.text.CyGetUniqueId,"ax",%progbits
 1829              		.align	2
 1830              		.global	CyGetUniqueId
 1831              		.code	16
 1832              		.thumb_func
 1833              		.type	CyGetUniqueId, %function
 1834              	CyGetUniqueId:
 1835              	.LFB49:
1843:.\Generated_Source\PSoC4/CyLib.c **** 
1844:.\Generated_Source\PSoC4/CyLib.c **** 
1845:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1846:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyGetUniqueId
1847:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1848:.\Generated_Source\PSoC4/CyLib.c **** *
1849:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1850:.\Generated_Source\PSoC4/CyLib.c **** *  Returns the 64-bit unique ID of the device. The uniqueness of the number is
1851:.\Generated_Source\PSoC4/CyLib.c **** *  guaranteed for 10 years due to the die lot number having a cycle life of 10
1852:.\Generated_Source\PSoC4/CyLib.c **** *  years and even after 10 years, the probability of getting two identical
1853:.\Generated_Source\PSoC4/CyLib.c **** *  numbers is very small.
1854:.\Generated_Source\PSoC4/CyLib.c **** *
1855:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1856:.\Generated_Source\PSoC4/CyLib.c **** *  uniqueId: The pointer to a two element 32-bit unsigned integer array. Returns
1857:.\Generated_Source\PSoC4/CyLib.c **** *  the 64-bit unique ID of the device by loading them into the integer array
1858:.\Generated_Source\PSoC4/CyLib.c **** *  pointed to by uniqueId.
1859:.\Generated_Source\PSoC4/CyLib.c **** *
1860:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1861:.\Generated_Source\PSoC4/CyLib.c **** *  None
1862:.\Generated_Source\PSoC4/CyLib.c **** *
1863:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1864:.\Generated_Source\PSoC4/CyLib.c **** void CyGetUniqueId(uint32* uniqueId)
1865:.\Generated_Source\PSoC4/CyLib.c **** {
 1836              		.loc 1 1865 0
 1837              		.cfi_startproc
 1838              	.LVL126:
1866:.\Generated_Source\PSoC4/CyLib.c **** #if(CY_PSOC4)
1867:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT0  );
 1839              		.loc 1 1867 0
 1840 0000 134B     		ldr	r3, .L164
 1841 0002 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\ELECTR~1\AppData\Local\Temp\ccybjnra.s 			page 68


 1842 0004 DAB2     		uxtb	r2, r3
 1843 0006 0260     		str	r2, [r0]
1868:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 1844              		.loc 1 1868 0
 1845 0008 124B     		ldr	r3, .L164+4
 1846 000a 1B78     		ldrb	r3, [r3]
 1847 000c 1B02     		lsl	r3, r3, #8
 1848 000e 1343     		orr	r3, r2
 1849 0010 0360     		str	r3, [r0]
1869:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT2  ) << 16u);
 1850              		.loc 1 1869 0
 1851 0012 114A     		ldr	r2, .L164+8
 1852 0014 1278     		ldrb	r2, [r2]
 1853 0016 1204     		lsl	r2, r2, #16
 1854 0018 1343     		orr	r3, r2
 1855 001a 0360     		str	r3, [r0]
1870:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
 1856              		.loc 1 1870 0
 1857 001c 0F4A     		ldr	r2, .L164+12
 1858 001e 1278     		ldrb	r2, [r2]
 1859 0020 1206     		lsl	r2, r2, #24
 1860 0022 1343     		orr	r3, r2
 1861 0024 0360     		str	r3, [r0]
1871:.\Generated_Source\PSoC4/CyLib.c **** 
1872:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_X     );
 1862              		.loc 1 1872 0
 1863 0026 0E4B     		ldr	r3, .L164+16
 1864 0028 1B78     		ldrb	r3, [r3]
 1865 002a DAB2     		uxtb	r2, r3
 1866 002c 4260     		str	r2, [r0, #4]
1873:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
 1867              		.loc 1 1873 0
 1868 002e 0D4B     		ldr	r3, .L164+20
 1869 0030 1B78     		ldrb	r3, [r3]
 1870 0032 1B02     		lsl	r3, r3, #8
 1871 0034 1343     		orr	r3, r2
 1872 0036 4360     		str	r3, [r0, #4]
1874:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
 1873              		.loc 1 1874 0
 1874 0038 0B4A     		ldr	r2, .L164+24
 1875 003a 1278     		ldrb	r2, [r2]
 1876 003c 1204     		lsl	r2, r2, #16
 1877 003e 1343     		orr	r3, r2
 1878 0040 4360     		str	r3, [r0, #4]
1875:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
 1879              		.loc 1 1875 0
 1880 0042 0A4A     		ldr	r2, .L164+28
 1881 0044 1278     		ldrb	r2, [r2]
 1882 0046 1206     		lsl	r2, r2, #24
 1883 0048 1343     		orr	r3, r2
 1884 004a 4360     		str	r3, [r0, #4]
1876:.\Generated_Source\PSoC4/CyLib.c **** #else
1877:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_LSB   )
1878:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_MSB   )
1879:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_MLOGIC_REV_ID                )
1880:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WAFER_NUM )
1881:.\Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\ELECTR~1\AppData\Local\Temp\ccybjnra.s 			page 69


1882:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_X_LOC     )
1883:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_Y_LOC     )
1884:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WRK_WK    )
1885:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_FAB_YR    )
1886:.\Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_PSOC4) */
1887:.\Generated_Source\PSoC4/CyLib.c **** }
 1885              		.loc 1 1887 0
 1886              		@ sp needed
 1887 004c 7047     		bx	lr
 1888              	.L165:
 1889 004e C046     		.align	2
 1890              	.L164:
 1891 0050 78F1FF0F 		.word	268431736
 1892 0054 79F1FF0F 		.word	268431737
 1893 0058 7AF1FF0F 		.word	268431738
 1894 005c 7BF1FF0F 		.word	268431739
 1895 0060 7CF1FF0F 		.word	268431740
 1896 0064 7DF1FF0F 		.word	268431741
 1897 0068 7EF1FF0F 		.word	268431742
 1898 006c 7FF1FF0F 		.word	268431743
 1899              		.cfi_endproc
 1900              	.LFE49:
 1901              		.size	CyGetUniqueId, .-CyGetUniqueId
 1902              		.global	cyImoFreqMhz2Reg
 1903              		.global	CySysTickInitVar
 1904              		.global	cydelay32kMs
 1905              		.global	cydelayFreqMhz
 1906              		.global	cydelayFreqKhz
 1907              		.global	cydelayFreqHz
 1908              		.section	.rodata
 1909              		.align	2
 1910              		.set	.LANCHOR0,. + 0
 1911              		.type	cyImoFreqMhz2Reg, %object
 1912              		.size	cyImoFreqMhz2Reg, 46
 1913              	cyImoFreqMhz2Reg:
 1914 0000 03       		.byte	3
 1915 0001 04       		.byte	4
 1916 0002 05       		.byte	5
 1917 0003 06       		.byte	6
 1918 0004 07       		.byte	7
 1919 0005 08       		.byte	8
 1920 0006 09       		.byte	9
 1921 0007 0A       		.byte	10
 1922 0008 0B       		.byte	11
 1923 0009 0C       		.byte	12
 1924 000a 0E       		.byte	14
 1925 000b 0F       		.byte	15
 1926 000c 10       		.byte	16
 1927 000d 11       		.byte	17
 1928 000e 12       		.byte	18
 1929 000f 13       		.byte	19
 1930 0010 14       		.byte	20
 1931 0011 15       		.byte	21
 1932 0012 16       		.byte	22
 1933 0013 17       		.byte	23
 1934 0014 18       		.byte	24
 1935 0015 19       		.byte	25
ARM GAS  C:\Users\ELECTR~1\AppData\Local\Temp\ccybjnra.s 			page 70


 1936 0016 1B       		.byte	27
 1937 0017 1C       		.byte	28
 1938 0018 1D       		.byte	29
 1939 0019 1E       		.byte	30
 1940 001a 1F       		.byte	31
 1941 001b 20       		.byte	32
 1942 001c 21       		.byte	33
 1943 001d 22       		.byte	34
 1944 001e 23       		.byte	35
 1945 001f 25       		.byte	37
 1946 0020 26       		.byte	38
 1947 0021 27       		.byte	39
 1948 0022 28       		.byte	40
 1949 0023 29       		.byte	41
 1950 0024 2A       		.byte	42
 1951 0025 2B       		.byte	43
 1952 0026 2E       		.byte	46
 1953 0027 2F       		.byte	47
 1954 0028 30       		.byte	48
 1955 0029 31       		.byte	49
 1956 002a 32       		.byte	50
 1957 002b 33       		.byte	51
 1958 002c 34       		.byte	52
 1959 002d 35       		.byte	53
 1960 002e 0000     		.data
 1961              		.align	2
 1962              		.set	.LANCHOR1,. + 0
 1963              		.type	cydelay32kMs, %object
 1964              		.size	cydelay32kMs, 4
 1965              	cydelay32kMs:
 1966 0000 0000C05D 		.word	1572864000
 1967              		.type	cydelayFreqKhz, %object
 1968              		.size	cydelayFreqKhz, 4
 1969              	cydelayFreqKhz:
 1970 0004 80BB0000 		.word	48000
 1971              		.type	cydelayFreqMhz, %object
 1972              		.size	cydelayFreqMhz, 1
 1973              	cydelayFreqMhz:
 1974 0008 30       		.byte	48
 1975 0009 000000   		.space	3
 1976              		.type	cydelayFreqHz, %object
 1977              		.size	cydelayFreqHz, 4
 1978              	cydelayFreqHz:
 1979 000c 006CDC02 		.word	48000000
 1980              		.bss
 1981              		.align	2
 1982              		.set	.LANCHOR2,. + 0
 1983              		.type	CySysTickCallbacks, %object
 1984              		.size	CySysTickCallbacks, 20
 1985              	CySysTickCallbacks:
 1986 0000 00000000 		.space	20
 1986      00000000 
 1986      00000000 
 1986      00000000 
 1986      00000000 
 1987              		.type	CySysTickInitVar, %object
 1988              		.size	CySysTickInitVar, 4
ARM GAS  C:\Users\ELECTR~1\AppData\Local\Temp\ccybjnra.s 			page 71


 1989              	CySysTickInitVar:
 1990 0014 00000000 		.space	4
 1991              		.text
 1992              	.Letext0:
 1993              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 1994              		.file 3 ".\\Generated_Source\\PSoC4\\CyLib.h"
 1995              		.section	.debug_info,"",%progbits
 1996              	.Ldebug_info0:
 1997 0000 180B0000 		.4byte	0xb18
 1998 0004 0400     		.2byte	0x4
 1999 0006 00000000 		.4byte	.Ldebug_abbrev0
 2000 000a 04       		.byte	0x4
 2001 000b 01       		.uleb128 0x1
 2002 000c B4030000 		.4byte	.LASF100
 2003 0010 01       		.byte	0x1
 2004 0011 E7020000 		.4byte	.LASF101
 2005 0015 D2050000 		.4byte	.LASF102
 2006 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2007 001d 00000000 		.4byte	0
 2008 0021 00000000 		.4byte	.Ldebug_line0
 2009 0025 02       		.uleb128 0x2
 2010 0026 01       		.byte	0x1
 2011 0027 06       		.byte	0x6
 2012 0028 C1000000 		.4byte	.LASF0
 2013 002c 02       		.uleb128 0x2
 2014 002d 01       		.byte	0x1
 2015 002e 08       		.byte	0x8
 2016 002f CF040000 		.4byte	.LASF1
 2017 0033 02       		.uleb128 0x2
 2018 0034 02       		.byte	0x2
 2019 0035 05       		.byte	0x5
 2020 0036 DD040000 		.4byte	.LASF2
 2021 003a 02       		.uleb128 0x2
 2022 003b 02       		.byte	0x2
 2023 003c 07       		.byte	0x7
 2024 003d A6020000 		.4byte	.LASF3
 2025 0041 02       		.uleb128 0x2
 2026 0042 04       		.byte	0x4
 2027 0043 05       		.byte	0x5
 2028 0044 00010000 		.4byte	.LASF4
 2029 0048 02       		.uleb128 0x2
 2030 0049 04       		.byte	0x4
 2031 004a 07       		.byte	0x7
 2032 004b 19020000 		.4byte	.LASF5
 2033 004f 02       		.uleb128 0x2
 2034 0050 08       		.byte	0x8
 2035 0051 05       		.byte	0x5
 2036 0052 B3000000 		.4byte	.LASF6
 2037 0056 02       		.uleb128 0x2
 2038 0057 08       		.byte	0x8
 2039 0058 07       		.byte	0x7
 2040 0059 4D000000 		.4byte	.LASF7
 2041 005d 03       		.uleb128 0x3
 2042 005e 04       		.byte	0x4
 2043 005f 05       		.byte	0x5
 2044 0060 696E7400 		.ascii	"int\000"
 2045 0064 02       		.uleb128 0x2
ARM GAS  C:\Users\ELECTR~1\AppData\Local\Temp\ccybjnra.s 			page 72


 2046 0065 04       		.byte	0x4
 2047 0066 07       		.byte	0x7
 2048 0067 FD010000 		.4byte	.LASF8
 2049 006b 04       		.uleb128 0x4
 2050 006c 20010000 		.4byte	.LASF9
 2051 0070 02       		.byte	0x2
 2052 0071 C1       		.byte	0xc1
 2053 0072 2C000000 		.4byte	0x2c
 2054 0076 04       		.uleb128 0x4
 2055 0077 0F000000 		.4byte	.LASF10
 2056 007b 02       		.byte	0x2
 2057 007c C2       		.byte	0xc2
 2058 007d 3A000000 		.4byte	0x3a
 2059 0081 04       		.uleb128 0x4
 2060 0082 63010000 		.4byte	.LASF11
 2061 0086 02       		.byte	0x2
 2062 0087 C3       		.byte	0xc3
 2063 0088 48000000 		.4byte	0x48
 2064 008c 02       		.uleb128 0x2
 2065 008d 04       		.byte	0x4
 2066 008e 04       		.byte	0x4
 2067 008f 61040000 		.4byte	.LASF12
 2068 0093 02       		.uleb128 0x2
 2069 0094 08       		.byte	0x8
 2070 0095 04       		.byte	0x4
 2071 0096 3F010000 		.4byte	.LASF13
 2072 009a 02       		.uleb128 0x2
 2073 009b 01       		.byte	0x1
 2074 009c 08       		.byte	0x8
 2075 009d 36050000 		.4byte	.LASF14
 2076 00a1 05       		.uleb128 0x5
 2077 00a2 A1060000 		.4byte	.LASF15
 2078 00a6 02       		.byte	0x2
 2079 00a7 6301     		.2byte	0x163
 2080 00a9 48000000 		.4byte	0x48
 2081 00ad 05       		.uleb128 0x5
 2082 00ae B9040000 		.4byte	.LASF16
 2083 00b2 02       		.byte	0x2
 2084 00b3 6B01     		.2byte	0x16b
 2085 00b5 B9000000 		.4byte	0xb9
 2086 00b9 06       		.uleb128 0x6
 2087 00ba 6B000000 		.4byte	0x6b
 2088 00be 05       		.uleb128 0x5
 2089 00bf 38030000 		.4byte	.LASF17
 2090 00c3 02       		.byte	0x2
 2091 00c4 6D01     		.2byte	0x16d
 2092 00c6 CA000000 		.4byte	0xca
 2093 00ca 06       		.uleb128 0x6
 2094 00cb 81000000 		.4byte	0x81
 2095 00cf 05       		.uleb128 0x5
 2096 00d0 3B050000 		.4byte	.LASF18
 2097 00d4 02       		.byte	0x2
 2098 00d5 7D01     		.2byte	0x17d
 2099 00d7 DB000000 		.4byte	0xdb
 2100 00db 07       		.uleb128 0x7
 2101 00dc 04       		.byte	0x4
 2102 00dd E1000000 		.4byte	0xe1
ARM GAS  C:\Users\ELECTR~1\AppData\Local\Temp\ccybjnra.s 			page 73


 2103 00e1 08       		.uleb128 0x8
 2104 00e2 02       		.uleb128 0x2
 2105 00e3 04       		.byte	0x4
 2106 00e4 07       		.byte	0x7
 2107 00e5 4D030000 		.4byte	.LASF19
 2108 00e9 04       		.uleb128 0x4
 2109 00ea 7D040000 		.4byte	.LASF20
 2110 00ee 03       		.byte	0x3
 2111 00ef 67       		.byte	0x67
 2112 00f0 DB000000 		.4byte	0xdb
 2113 00f4 09       		.uleb128 0x9
 2114 00f5 81000000 		.4byte	0x81
 2115 00f9 04010000 		.4byte	0x104
 2116 00fd 0A       		.uleb128 0xa
 2117 00fe E2000000 		.4byte	0xe2
 2118 0102 03       		.byte	0x3
 2119 0103 00       		.byte	0
 2120 0104 0B       		.uleb128 0xb
 2121 0105 AA060000 		.4byte	.LASF21
 2122 0109 01       		.byte	0x1
 2123 010a 5A       		.byte	0x5a
 2124 010b 00000000 		.4byte	.LFB2
 2125 010f 14000000 		.4byte	.LFE2-.LFB2
 2126 0113 01       		.uleb128 0x1
 2127 0114 9C       		.byte	0x9c
 2128 0115 0B       		.uleb128 0xb
 2129 0116 46020000 		.4byte	.LASF22
 2130 011a 01       		.byte	0x1
 2131 011b 78       		.byte	0x78
 2132 011c 00000000 		.4byte	.LFB3
 2133 0120 10000000 		.4byte	.LFE3-.LFB3
 2134 0124 01       		.uleb128 0x1
 2135 0125 9C       		.byte	0x9c
 2136 0126 0C       		.uleb128 0xc
 2137 0127 1F000000 		.4byte	.LASF23
 2138 012b 01       		.byte	0x1
 2139 012c 1901     		.2byte	0x119
 2140 012e 00000000 		.4byte	.LFB4
 2141 0132 24000000 		.4byte	.LFE4-.LFB4
 2142 0136 01       		.uleb128 0x1
 2143 0137 9C       		.byte	0x9c
 2144 0138 6F010000 		.4byte	0x16f
 2145 013c 0D       		.uleb128 0xd
 2146 013d 05050000 		.4byte	.LASF25
 2147 0141 01       		.byte	0x1
 2148 0142 1901     		.2byte	0x119
 2149 0144 81000000 		.4byte	0x81
 2150 0148 00000000 		.4byte	.LLST0
 2151 014c 0E       		.uleb128 0xe
 2152 014d DE000000 		.4byte	.LASF27
 2153 0151 01       		.byte	0x1
 2154 0152 1B01     		.2byte	0x11b
 2155 0154 6B000000 		.4byte	0x6b
 2156 0158 2C000000 		.4byte	.LLST1
 2157 015c 0F       		.uleb128 0xf
 2158 015d 08000000 		.4byte	.LVL1
 2159 0161 F20A0000 		.4byte	0xaf2
ARM GAS  C:\Users\ELECTR~1\AppData\Local\Temp\ccybjnra.s 			page 74


 2160 0165 0F       		.uleb128 0xf
 2161 0166 1C000000 		.4byte	.LVL3
 2162 016a FD0A0000 		.4byte	0xafd
 2163 016e 00       		.byte	0
 2164 016f 0C       		.uleb128 0xc
 2165 0170 58050000 		.4byte	.LASF24
 2166 0174 01       		.byte	0x1
 2167 0175 4A01     		.2byte	0x14a
 2168 0177 00000000 		.4byte	.LFB5
 2169 017b 28000000 		.4byte	.LFE5-.LFB5
 2170 017f 01       		.uleb128 0x1
 2171 0180 9C       		.byte	0x9c
 2172 0181 B8010000 		.4byte	0x1b8
 2173 0185 0D       		.uleb128 0xd
 2174 0186 85060000 		.4byte	.LASF26
 2175 018a 01       		.byte	0x1
 2176 018b 4A01     		.2byte	0x14a
 2177 018d 81000000 		.4byte	0x81
 2178 0191 3F000000 		.4byte	.LLST2
 2179 0195 0E       		.uleb128 0xe
 2180 0196 DE000000 		.4byte	.LASF27
 2181 019a 01       		.byte	0x1
 2182 019b 4C01     		.2byte	0x14c
 2183 019d 6B000000 		.4byte	0x6b
 2184 01a1 6B000000 		.4byte	.LLST3
 2185 01a5 0F       		.uleb128 0xf
 2186 01a6 08000000 		.4byte	.LVL5
 2187 01aa F20A0000 		.4byte	0xaf2
 2188 01ae 0F       		.uleb128 0xf
 2189 01af 1E000000 		.4byte	.LVL7
 2190 01b3 FD0A0000 		.4byte	0xafd
 2191 01b7 00       		.byte	0
 2192 01b8 0C       		.uleb128 0xc
 2193 01b9 11030000 		.4byte	.LASF28
 2194 01bd 01       		.byte	0x1
 2195 01be 8601     		.2byte	0x186
 2196 01c0 00000000 		.4byte	.LFB6
 2197 01c4 64000000 		.4byte	.LFE6-.LFB6
 2198 01c8 01       		.uleb128 0x1
 2199 01c9 9C       		.byte	0x9c
 2200 01ca 1F020000 		.4byte	0x21f
 2201 01ce 0D       		.uleb128 0xd
 2202 01cf CD000000 		.4byte	.LASF29
 2203 01d3 01       		.byte	0x1
 2204 01d4 8601     		.2byte	0x186
 2205 01d6 81000000 		.4byte	0x81
 2206 01da 7E000000 		.4byte	.LLST4
 2207 01de 10       		.uleb128 0x10
 2208 01df 64000000 		.4byte	.LASF30
 2209 01e3 01       		.byte	0x1
 2210 01e4 8901     		.2byte	0x189
 2211 01e6 2F020000 		.4byte	0x22f
 2212 01ea 02       		.uleb128 0x2
 2213 01eb 91       		.byte	0x91
 2214 01ec 70       		.sleb128 -16
 2215 01ed 10       		.uleb128 0x10
 2216 01ee 16010000 		.4byte	.LASF31
ARM GAS  C:\Users\ELECTR~1\AppData\Local\Temp\ccybjnra.s 			page 75


 2217 01f2 01       		.byte	0x1
 2218 01f3 8A01     		.2byte	0x18a
 2219 01f5 34020000 		.4byte	0x234
 2220 01f9 02       		.uleb128 0x2
 2221 01fa 91       		.byte	0x91
 2222 01fb 60       		.sleb128 -32
 2223 01fc 0E       		.uleb128 0xe
 2224 01fd DE000000 		.4byte	.LASF27
 2225 0201 01       		.byte	0x1
 2226 0202 9601     		.2byte	0x196
 2227 0204 6B000000 		.4byte	0x6b
 2228 0208 B7000000 		.4byte	.LLST5
 2229 020c 0F       		.uleb128 0xf
 2230 020d 0A000000 		.4byte	.LVL9
 2231 0211 F20A0000 		.4byte	0xaf2
 2232 0215 0F       		.uleb128 0xf
 2233 0216 3E000000 		.4byte	.LVL11
 2234 021a FD0A0000 		.4byte	0xafd
 2235 021e 00       		.byte	0
 2236 021f 09       		.uleb128 0x9
 2237 0220 81000000 		.4byte	0x81
 2238 0224 2F020000 		.4byte	0x22f
 2239 0228 0A       		.uleb128 0xa
 2240 0229 E2000000 		.4byte	0xe2
 2241 022d 01       		.byte	0x1
 2242 022e 00       		.byte	0
 2243 022f 06       		.uleb128 0x6
 2244 0230 1F020000 		.4byte	0x21f
 2245 0234 06       		.uleb128 0x6
 2246 0235 F4000000 		.4byte	0xf4
 2247 0239 11       		.uleb128 0x11
 2248 023a 5D060000 		.4byte	.LASF32
 2249 023e 01       		.byte	0x1
 2250 023f D202     		.2byte	0x2d2
 2251 0241 00000000 		.4byte	.LFB8
 2252 0245 24000000 		.4byte	.LFE8-.LFB8
 2253 0249 01       		.uleb128 0x1
 2254 024a 9C       		.byte	0x9c
 2255 024b 12       		.uleb128 0x12
 2256 024c 6A010000 		.4byte	.LASF34
 2257 0250 01       		.byte	0x1
 2258 0251 EA02     		.2byte	0x2ea
 2259 0253 81000000 		.4byte	0x81
 2260 0257 00000000 		.4byte	.LFB9
 2261 025b 10000000 		.4byte	.LFE9-.LFB9
 2262 025f 01       		.uleb128 0x1
 2263 0260 9C       		.byte	0x9c
 2264 0261 11       		.uleb128 0x11
 2265 0262 C2050000 		.4byte	.LASF33
 2266 0266 01       		.byte	0x1
 2267 0267 7503     		.2byte	0x375
 2268 0269 00000000 		.4byte	.LFB12
 2269 026d 20000000 		.4byte	.LFE12-.LFB12
 2270 0271 01       		.uleb128 0x1
 2271 0272 9C       		.byte	0x9c
 2272 0273 12       		.uleb128 0x12
 2273 0274 2B020000 		.4byte	.LASF35
ARM GAS  C:\Users\ELECTR~1\AppData\Local\Temp\ccybjnra.s 			page 76


 2274 0278 01       		.byte	0x1
 2275 0279 8B03     		.2byte	0x38b
 2276 027b 81000000 		.4byte	0x81
 2277 027f 00000000 		.4byte	.LFB13
 2278 0283 10000000 		.4byte	.LFE13-.LFB13
 2279 0287 01       		.uleb128 0x1
 2280 0288 9C       		.byte	0x9c
 2281 0289 11       		.uleb128 0x11
 2282 028a 4C010000 		.4byte	.LASF36
 2283 028e 01       		.byte	0x1
 2284 028f 9F03     		.2byte	0x39f
 2285 0291 00000000 		.4byte	.LFB14
 2286 0295 0C000000 		.4byte	.LFE14-.LFB14
 2287 0299 01       		.uleb128 0x1
 2288 029a 9C       		.byte	0x9c
 2289 029b 13       		.uleb128 0x13
 2290 029c 92020000 		.4byte	.LASF39
 2291 02a0 01       		.byte	0x1
 2292 02a1 BB03     		.2byte	0x3bb
 2293 02a3 81000000 		.4byte	0x81
 2294 02a7 00000000 		.4byte	.LFB15
 2295 02ab 14000000 		.4byte	.LFE15-.LFB15
 2296 02af 01       		.uleb128 0x1
 2297 02b0 9C       		.byte	0x9c
 2298 02b1 D4020000 		.4byte	0x2d4
 2299 02b5 0D       		.uleb128 0xd
 2300 02b6 20050000 		.4byte	.LASF37
 2301 02ba 01       		.byte	0x1
 2302 02bb BB03     		.2byte	0x3bb
 2303 02bd 81000000 		.4byte	0x81
 2304 02c1 CA000000 		.4byte	.LLST6
 2305 02c5 10       		.uleb128 0x10
 2306 02c6 E0020000 		.4byte	.LASF38
 2307 02ca 01       		.byte	0x1
 2308 02cb BD03     		.2byte	0x3bd
 2309 02cd 81000000 		.4byte	0x81
 2310 02d1 01       		.uleb128 0x1
 2311 02d2 50       		.byte	0x50
 2312 02d3 00       		.byte	0
 2313 02d4 13       		.uleb128 0x13
 2314 02d5 3F000000 		.4byte	.LASF40
 2315 02d9 01       		.byte	0x1
 2316 02da D603     		.2byte	0x3d6
 2317 02dc 81000000 		.4byte	0x81
 2318 02e0 00000000 		.4byte	.LFB16
 2319 02e4 10000000 		.4byte	.LFE16-.LFB16
 2320 02e8 01       		.uleb128 0x1
 2321 02e9 9C       		.byte	0x9c
 2322 02ea FD020000 		.4byte	0x2fd
 2323 02ee 10       		.uleb128 0x10
 2324 02ef 16000000 		.4byte	.LASF41
 2325 02f3 01       		.byte	0x1
 2326 02f4 D803     		.2byte	0x3d8
 2327 02f6 81000000 		.4byte	0x81
 2328 02fa 01       		.uleb128 0x1
 2329 02fb 50       		.byte	0x50
 2330 02fc 00       		.byte	0
ARM GAS  C:\Users\ELECTR~1\AppData\Local\Temp\ccybjnra.s 			page 77


 2331 02fd 0C       		.uleb128 0xc
 2332 02fe 6F000000 		.4byte	.LASF42
 2333 0302 01       		.byte	0x1
 2334 0303 F203     		.2byte	0x3f2
 2335 0305 00000000 		.4byte	.LFB17
 2336 0309 0C000000 		.4byte	.LFE17-.LFB17
 2337 030d 01       		.uleb128 0x1
 2338 030e 9C       		.byte	0x9c
 2339 030f 22030000 		.4byte	0x322
 2340 0313 14       		.uleb128 0x14
 2341 0314 87010000 		.4byte	.LASF43
 2342 0318 01       		.byte	0x1
 2343 0319 F203     		.2byte	0x3f2
 2344 031b 81000000 		.4byte	0x81
 2345 031f 01       		.uleb128 0x1
 2346 0320 50       		.byte	0x50
 2347 0321 00       		.byte	0
 2348 0322 0C       		.uleb128 0xc
 2349 0323 E7040000 		.4byte	.LASF44
 2350 0327 01       		.byte	0x1
 2351 0328 C104     		.2byte	0x4c1
 2352 032a 00000000 		.4byte	.LFB24
 2353 032e 14000000 		.4byte	.LFE24-.LFB24
 2354 0332 01       		.uleb128 0x1
 2355 0333 9C       		.byte	0x9c
 2356 0334 49030000 		.4byte	0x349
 2357 0338 0D       		.uleb128 0xd
 2358 0339 80010000 		.4byte	.LASF45
 2359 033d 01       		.byte	0x1
 2360 033e C104     		.2byte	0x4c1
 2361 0340 6B000000 		.4byte	0x6b
 2362 0344 E8000000 		.4byte	.LLST7
 2363 0348 00       		.byte	0
 2364 0349 13       		.uleb128 0x13
 2365 034a A5000000 		.4byte	.LASF46
 2366 034e 01       		.byte	0x1
 2367 034f D504     		.2byte	0x4d5
 2368 0351 6B000000 		.4byte	0x6b
 2369 0355 00000000 		.4byte	.LFB25
 2370 0359 18000000 		.4byte	.LFE25-.LFB25
 2371 035d 01       		.uleb128 0x1
 2372 035e 9C       		.byte	0x9c
 2373 035f 74030000 		.4byte	0x374
 2374 0363 0D       		.uleb128 0xd
 2375 0364 80010000 		.4byte	.LASF45
 2376 0368 01       		.byte	0x1
 2377 0369 D504     		.2byte	0x4d5
 2378 036b 6B000000 		.4byte	0x6b
 2379 036f 09010000 		.4byte	.LLST8
 2380 0373 00       		.byte	0
 2381 0374 0C       		.uleb128 0xc
 2382 0375 09010000 		.4byte	.LASF47
 2383 0379 01       		.byte	0x1
 2384 037a EA04     		.2byte	0x4ea
 2385 037c 00000000 		.4byte	.LFB26
 2386 0380 14000000 		.4byte	.LFE26-.LFB26
 2387 0384 01       		.uleb128 0x1
ARM GAS  C:\Users\ELECTR~1\AppData\Local\Temp\ccybjnra.s 			page 78


 2388 0385 9C       		.byte	0x9c
 2389 0386 9B030000 		.4byte	0x39b
 2390 038a 0D       		.uleb128 0xd
 2391 038b 80010000 		.4byte	.LASF45
 2392 038f 01       		.byte	0x1
 2393 0390 EA04     		.2byte	0x4ea
 2394 0392 6B000000 		.4byte	0x6b
 2395 0396 2A010000 		.4byte	.LLST9
 2396 039a 00       		.byte	0
 2397 039b 0C       		.uleb128 0xc
 2398 039c 6D020000 		.4byte	.LASF48
 2399 03a0 01       		.byte	0x1
 2400 03a1 FD04     		.2byte	0x4fd
 2401 03a3 00000000 		.4byte	.LFB27
 2402 03a7 14000000 		.4byte	.LFE27-.LFB27
 2403 03ab 01       		.uleb128 0x1
 2404 03ac 9C       		.byte	0x9c
 2405 03ad C2030000 		.4byte	0x3c2
 2406 03b1 0D       		.uleb128 0xd
 2407 03b2 80010000 		.4byte	.LASF45
 2408 03b6 01       		.byte	0x1
 2409 03b7 FD04     		.2byte	0x4fd
 2410 03b9 6B000000 		.4byte	0x6b
 2411 03bd 4B010000 		.4byte	.LLST10
 2412 03c1 00       		.byte	0
 2413 03c2 0C       		.uleb128 0xc
 2414 03c3 67030000 		.4byte	.LASF49
 2415 03c7 01       		.byte	0x1
 2416 03c8 1105     		.2byte	0x511
 2417 03ca 00000000 		.4byte	.LFB28
 2418 03ce 14000000 		.4byte	.LFE28-.LFB28
 2419 03d2 01       		.uleb128 0x1
 2420 03d3 9C       		.byte	0x9c
 2421 03d4 E9030000 		.4byte	0x3e9
 2422 03d8 0D       		.uleb128 0xd
 2423 03d9 80010000 		.4byte	.LASF45
 2424 03dd 01       		.byte	0x1
 2425 03de 1105     		.2byte	0x511
 2426 03e0 6B000000 		.4byte	0x6b
 2427 03e4 6C010000 		.4byte	.LLST11
 2428 03e8 00       		.byte	0
 2429 03e9 0C       		.uleb128 0xc
 2430 03ea C8040000 		.4byte	.LASF50
 2431 03ee 01       		.byte	0x1
 2432 03ef 2505     		.2byte	0x525
 2433 03f1 00000000 		.4byte	.LFB29
 2434 03f5 04000000 		.4byte	.LFE29-.LFB29
 2435 03f9 01       		.uleb128 0x1
 2436 03fa 9C       		.byte	0x9c
 2437 03fb 0E040000 		.4byte	0x40e
 2438 03ff 14       		.uleb128 0x14
 2439 0400 20050000 		.4byte	.LASF37
 2440 0404 01       		.byte	0x1
 2441 0405 2505     		.2byte	0x525
 2442 0407 6B000000 		.4byte	0x6b
 2443 040b 01       		.uleb128 0x1
 2444 040c 50       		.byte	0x50
ARM GAS  C:\Users\ELECTR~1\AppData\Local\Temp\ccybjnra.s 			page 79


 2445 040d 00       		.byte	0
 2446 040e 0C       		.uleb128 0xc
 2447 040f 8D060000 		.4byte	.LASF51
 2448 0413 01       		.byte	0x1
 2449 0414 1203     		.2byte	0x312
 2450 0416 00000000 		.4byte	.LFB10
 2451 041a 38000000 		.4byte	.LFE10-.LFB10
 2452 041e 01       		.uleb128 0x1
 2453 041f 9C       		.byte	0x9c
 2454 0420 66040000 		.4byte	0x466
 2455 0424 0D       		.uleb128 0xd
 2456 0425 85060000 		.4byte	.LASF26
 2457 0429 01       		.byte	0x1
 2458 042a 1203     		.2byte	0x312
 2459 042c 81000000 		.4byte	0x81
 2460 0430 8D010000 		.4byte	.LLST12
 2461 0434 0E       		.uleb128 0xe
 2462 0435 DE000000 		.4byte	.LASF27
 2463 0439 01       		.byte	0x1
 2464 043a 1403     		.2byte	0x314
 2465 043c 6B000000 		.4byte	0x6b
 2466 0440 DD010000 		.4byte	.LLST13
 2467 0444 0F       		.uleb128 0xf
 2468 0445 14000000 		.4byte	.LVL31
 2469 0449 F20A0000 		.4byte	0xaf2
 2470 044d 0F       		.uleb128 0xf
 2471 044e 26000000 		.4byte	.LVL33
 2472 0452 FD0A0000 		.4byte	0xafd
 2473 0456 15       		.uleb128 0x15
 2474 0457 2E000000 		.4byte	.LVL36
 2475 045b E9030000 		.4byte	0x3e9
 2476 045f 16       		.uleb128 0x16
 2477 0460 01       		.uleb128 0x1
 2478 0461 50       		.byte	0x50
 2479 0462 01       		.uleb128 0x1
 2480 0463 30       		.byte	0x30
 2481 0464 00       		.byte	0
 2482 0465 00       		.byte	0
 2483 0466 13       		.uleb128 0x13
 2484 0467 26030000 		.4byte	.LASF52
 2485 046b 01       		.byte	0x1
 2486 046c 0E04     		.2byte	0x40e
 2487 046e CF000000 		.4byte	0xcf
 2488 0472 00000000 		.4byte	.LFB18
 2489 0476 20000000 		.4byte	.LFE18-.LFB18
 2490 047a 01       		.uleb128 0x1
 2491 047b 9C       		.byte	0x9c
 2492 047c CE040000 		.4byte	0x4ce
 2493 0480 0D       		.uleb128 0xd
 2494 0481 80010000 		.4byte	.LASF45
 2495 0485 01       		.byte	0x1
 2496 0486 0E04     		.2byte	0x40e
 2497 0488 6B000000 		.4byte	0x6b
 2498 048c F0010000 		.4byte	.LLST14
 2499 0490 0D       		.uleb128 0xd
 2500 0491 79030000 		.4byte	.LASF53
 2501 0495 01       		.byte	0x1
ARM GAS  C:\Users\ELECTR~1\AppData\Local\Temp\ccybjnra.s 			page 80


 2502 0496 0E04     		.2byte	0x40e
 2503 0498 CF000000 		.4byte	0xcf
 2504 049c 11020000 		.4byte	.LLST15
 2505 04a0 10       		.uleb128 0x10
 2506 04a1 38000000 		.4byte	.LASF54
 2507 04a5 01       		.byte	0x1
 2508 04a6 1004     		.2byte	0x410
 2509 04a8 CF000000 		.4byte	0xcf
 2510 04ac 01       		.uleb128 0x1
 2511 04ad 50       		.byte	0x50
 2512 04ae 17       		.uleb128 0x17
 2513 04af 00000000 		.4byte	.LASF55
 2514 04b3 01       		.byte	0x1
 2515 04b4 1104     		.2byte	0x411
 2516 04b6 CE040000 		.4byte	0x4ce
 2517 04ba 00000020 		.4byte	0x20000000
 2518 04be 15       		.uleb128 0x15
 2519 04bf 10000000 		.4byte	.LVL40
 2520 04c3 E9030000 		.4byte	0x3e9
 2521 04c7 16       		.uleb128 0x16
 2522 04c8 01       		.uleb128 0x1
 2523 04c9 50       		.byte	0x50
 2524 04ca 01       		.uleb128 0x1
 2525 04cb 30       		.byte	0x30
 2526 04cc 00       		.byte	0
 2527 04cd 00       		.byte	0
 2528 04ce 07       		.uleb128 0x7
 2529 04cf 04       		.byte	0x4
 2530 04d0 CF000000 		.4byte	0xcf
 2531 04d4 13       		.uleb128 0x13
 2532 04d5 F3040000 		.4byte	.LASF56
 2533 04d9 01       		.byte	0x1
 2534 04da 3304     		.2byte	0x433
 2535 04dc CF000000 		.4byte	0xcf
 2536 04e0 00000000 		.4byte	.LFB19
 2537 04e4 1C000000 		.4byte	.LFE19-.LFB19
 2538 04e8 01       		.uleb128 0x1
 2539 04e9 9C       		.byte	0x9c
 2540 04ea 1E050000 		.4byte	0x51e
 2541 04ee 0D       		.uleb128 0xd
 2542 04ef 80010000 		.4byte	.LASF45
 2543 04f3 01       		.byte	0x1
 2544 04f4 3304     		.2byte	0x433
 2545 04f6 6B000000 		.4byte	0x6b
 2546 04fa 3D020000 		.4byte	.LLST16
 2547 04fe 17       		.uleb128 0x17
 2548 04ff 00000000 		.4byte	.LASF55
 2549 0503 01       		.byte	0x1
 2550 0504 3504     		.2byte	0x435
 2551 0506 CE040000 		.4byte	0x4ce
 2552 050a 00000020 		.4byte	0x20000000
 2553 050e 15       		.uleb128 0x15
 2554 050f 0E000000 		.4byte	.LVL46
 2555 0513 E9030000 		.4byte	0x3e9
 2556 0517 16       		.uleb128 0x16
 2557 0518 01       		.uleb128 0x1
 2558 0519 50       		.byte	0x50
ARM GAS  C:\Users\ELECTR~1\AppData\Local\Temp\ccybjnra.s 			page 81


 2559 051a 01       		.uleb128 0x1
 2560 051b 30       		.byte	0x30
 2561 051c 00       		.byte	0
 2562 051d 00       		.byte	0
 2563 051e 13       		.uleb128 0x13
 2564 051f D1020000 		.4byte	.LASF57
 2565 0523 01       		.byte	0x1
 2566 0524 4C04     		.2byte	0x44c
 2567 0526 CF000000 		.4byte	0xcf
 2568 052a 00000000 		.4byte	.LFB20
 2569 052e 24000000 		.4byte	.LFE20-.LFB20
 2570 0532 01       		.uleb128 0x1
 2571 0533 9C       		.byte	0x9c
 2572 0534 86050000 		.4byte	0x586
 2573 0538 0D       		.uleb128 0xd
 2574 0539 80010000 		.4byte	.LASF45
 2575 053d 01       		.byte	0x1
 2576 053e 4C04     		.2byte	0x44c
 2577 0540 6B000000 		.4byte	0x6b
 2578 0544 5E020000 		.4byte	.LLST17
 2579 0548 0D       		.uleb128 0xd
 2580 0549 79030000 		.4byte	.LASF53
 2581 054d 01       		.byte	0x1
 2582 054e 4C04     		.2byte	0x44c
 2583 0550 CF000000 		.4byte	0xcf
 2584 0554 7F020000 		.4byte	.LLST18
 2585 0558 10       		.uleb128 0x10
 2586 0559 38000000 		.4byte	.LASF54
 2587 055d 01       		.byte	0x1
 2588 055e 4E04     		.2byte	0x44e
 2589 0560 CF000000 		.4byte	0xcf
 2590 0564 01       		.uleb128 0x1
 2591 0565 50       		.byte	0x50
 2592 0566 17       		.uleb128 0x17
 2593 0567 00000000 		.4byte	.LASF55
 2594 056b 01       		.byte	0x1
 2595 056c 4F04     		.2byte	0x44f
 2596 056e CE040000 		.4byte	0x4ce
 2597 0572 00000020 		.4byte	0x20000000
 2598 0576 15       		.uleb128 0x15
 2599 0577 10000000 		.4byte	.LVL50
 2600 057b E9030000 		.4byte	0x3e9
 2601 057f 16       		.uleb128 0x16
 2602 0580 01       		.uleb128 0x1
 2603 0581 50       		.byte	0x50
 2604 0582 01       		.uleb128 0x1
 2605 0583 30       		.byte	0x30
 2606 0584 00       		.byte	0
 2607 0585 00       		.byte	0
 2608 0586 13       		.uleb128 0x13
 2609 0587 8F040000 		.4byte	.LASF58
 2610 058b 01       		.byte	0x1
 2611 058c 6B04     		.2byte	0x46b
 2612 058e CF000000 		.4byte	0xcf
 2613 0592 00000000 		.4byte	.LFB21
 2614 0596 20000000 		.4byte	.LFE21-.LFB21
 2615 059a 01       		.uleb128 0x1
ARM GAS  C:\Users\ELECTR~1\AppData\Local\Temp\ccybjnra.s 			page 82


 2616 059b 9C       		.byte	0x9c
 2617 059c D0050000 		.4byte	0x5d0
 2618 05a0 0D       		.uleb128 0xd
 2619 05a1 80010000 		.4byte	.LASF45
 2620 05a5 01       		.byte	0x1
 2621 05a6 6B04     		.2byte	0x46b
 2622 05a8 6B000000 		.4byte	0x6b
 2623 05ac AB020000 		.4byte	.LLST19
 2624 05b0 17       		.uleb128 0x17
 2625 05b1 00000000 		.4byte	.LASF55
 2626 05b5 01       		.byte	0x1
 2627 05b6 6D04     		.2byte	0x46d
 2628 05b8 CE040000 		.4byte	0x4ce
 2629 05bc 00000020 		.4byte	0x20000000
 2630 05c0 15       		.uleb128 0x15
 2631 05c1 0E000000 		.4byte	.LVL56
 2632 05c5 E9030000 		.4byte	0x3e9
 2633 05c9 16       		.uleb128 0x16
 2634 05ca 01       		.uleb128 0x1
 2635 05cb 50       		.byte	0x50
 2636 05cc 01       		.uleb128 0x1
 2637 05cd 30       		.byte	0x30
 2638 05ce 00       		.byte	0
 2639 05cf 00       		.byte	0
 2640 05d0 0C       		.uleb128 0xc
 2641 05d1 50040000 		.4byte	.LASF59
 2642 05d5 01       		.byte	0x1
 2643 05d6 8304     		.2byte	0x483
 2644 05d8 00000000 		.4byte	.LFB22
 2645 05dc 4C000000 		.4byte	.LFE22-.LFB22
 2646 05e0 01       		.uleb128 0x1
 2647 05e1 9C       		.byte	0x9c
 2648 05e2 6F060000 		.4byte	0x66f
 2649 05e6 0D       		.uleb128 0xd
 2650 05e7 80010000 		.4byte	.LASF45
 2651 05eb 01       		.byte	0x1
 2652 05ec 8304     		.2byte	0x483
 2653 05ee 6B000000 		.4byte	0x6b
 2654 05f2 CC020000 		.4byte	.LLST20
 2655 05f6 0D       		.uleb128 0xd
 2656 05f7 08030000 		.4byte	.LASF60
 2657 05fb 01       		.byte	0x1
 2658 05fc 8304     		.2byte	0x483
 2659 05fe 6B000000 		.4byte	0x6b
 2660 0602 ED020000 		.4byte	.LLST21
 2661 0606 0E       		.uleb128 0xe
 2662 0607 DE000000 		.4byte	.LASF27
 2663 060b 01       		.byte	0x1
 2664 060c 8504     		.2byte	0x485
 2665 060e 6B000000 		.4byte	0x6b
 2666 0612 0E030000 		.4byte	.LLST22
 2667 0616 0E       		.uleb128 0xe
 2668 0617 46010000 		.4byte	.LASF61
 2669 061b 01       		.byte	0x1
 2670 061c 8604     		.2byte	0x486
 2671 061e 81000000 		.4byte	0x81
 2672 0622 21030000 		.4byte	.LLST23
ARM GAS  C:\Users\ELECTR~1\AppData\Local\Temp\ccybjnra.s 			page 83


 2673 0626 0E       		.uleb128 0xe
 2674 0627 C7010000 		.4byte	.LASF62
 2675 062b 01       		.byte	0x1
 2676 062c 8704     		.2byte	0x487
 2677 062e 81000000 		.4byte	0x81
 2678 0632 34030000 		.4byte	.LLST24
 2679 0636 18       		.uleb128 0x18
 2680 0637 10000000 		.4byte	.LVL59
 2681 063b E9030000 		.4byte	0x3e9
 2682 063f 49060000 		.4byte	0x649
 2683 0643 16       		.uleb128 0x16
 2684 0644 01       		.uleb128 0x1
 2685 0645 50       		.byte	0x50
 2686 0646 01       		.uleb128 0x1
 2687 0647 30       		.byte	0x30
 2688 0648 00       		.byte	0
 2689 0649 18       		.uleb128 0x18
 2690 064a 1A000000 		.4byte	.LVL60
 2691 064e E9030000 		.4byte	0x3e9
 2692 0652 5C060000 		.4byte	0x65c
 2693 0656 16       		.uleb128 0x16
 2694 0657 01       		.uleb128 0x1
 2695 0658 50       		.byte	0x50
 2696 0659 01       		.uleb128 0x1
 2697 065a 30       		.byte	0x30
 2698 065b 00       		.byte	0
 2699 065c 0F       		.uleb128 0xf
 2700 065d 26000000 		.4byte	.LVL62
 2701 0661 F20A0000 		.4byte	0xaf2
 2702 0665 0F       		.uleb128 0xf
 2703 0666 44000000 		.4byte	.LVL67
 2704 066a FD0A0000 		.4byte	0xafd
 2705 066e 00       		.byte	0
 2706 066f 13       		.uleb128 0x13
 2707 0670 9B010000 		.4byte	.LASF63
 2708 0674 01       		.byte	0x1
 2709 0675 A704     		.2byte	0x4a7
 2710 0677 6B000000 		.4byte	0x6b
 2711 067b 00000000 		.4byte	.LFB23
 2712 067f 2C000000 		.4byte	.LFE23-.LFB23
 2713 0683 01       		.uleb128 0x1
 2714 0684 9C       		.byte	0x9c
 2715 0685 B9060000 		.4byte	0x6b9
 2716 0689 0D       		.uleb128 0xd
 2717 068a 80010000 		.4byte	.LASF45
 2718 068e 01       		.byte	0x1
 2719 068f A704     		.2byte	0x4a7
 2720 0691 6B000000 		.4byte	0x6b
 2721 0695 52030000 		.4byte	.LLST25
 2722 0699 0E       		.uleb128 0xe
 2723 069a 08030000 		.4byte	.LASF60
 2724 069e 01       		.byte	0x1
 2725 069f A904     		.2byte	0x4a9
 2726 06a1 6B000000 		.4byte	0x6b
 2727 06a5 73030000 		.4byte	.LLST26
 2728 06a9 15       		.uleb128 0x15
 2729 06aa 0E000000 		.4byte	.LVL71
ARM GAS  C:\Users\ELECTR~1\AppData\Local\Temp\ccybjnra.s 			page 84


 2730 06ae E9030000 		.4byte	0x3e9
 2731 06b2 16       		.uleb128 0x16
 2732 06b3 01       		.uleb128 0x1
 2733 06b4 50       		.byte	0x50
 2734 06b5 01       		.uleb128 0x1
 2735 06b6 30       		.byte	0x30
 2736 06b7 00       		.byte	0
 2737 06b8 00       		.byte	0
 2738 06b9 11       		.uleb128 0x11
 2739 06ba 7C000000 		.4byte	.LASF64
 2740 06be 01       		.byte	0x1
 2741 06bf 4405     		.2byte	0x544
 2742 06c1 00000000 		.4byte	.LFB30
 2743 06c5 18000000 		.4byte	.LFE30-.LFB30
 2744 06c9 01       		.uleb128 0x1
 2745 06ca 9C       		.byte	0x9c
 2746 06cb 0C       		.uleb128 0xc
 2747 06cc A0050000 		.4byte	.LASF65
 2748 06d0 01       		.byte	0x1
 2749 06d1 5D05     		.2byte	0x55d
 2750 06d3 00000000 		.4byte	.LFB31
 2751 06d7 30000000 		.4byte	.LFE31-.LFB31
 2752 06db 01       		.uleb128 0x1
 2753 06dc 9C       		.byte	0x9c
 2754 06dd 04070000 		.4byte	0x704
 2755 06e1 0D       		.uleb128 0xd
 2756 06e2 9E040000 		.4byte	.LASF66
 2757 06e6 01       		.byte	0x1
 2758 06e7 5D05     		.2byte	0x55d
 2759 06e9 81000000 		.4byte	0x81
 2760 06ed 86030000 		.4byte	.LLST27
 2761 06f1 0F       		.uleb128 0xf
 2762 06f2 0E000000 		.4byte	.LVL76
 2763 06f6 0E0B0000 		.4byte	0xb0e
 2764 06fa 0F       		.uleb128 0xf
 2765 06fb 26000000 		.4byte	.LVL78
 2766 06ff 0E0B0000 		.4byte	0xb0e
 2767 0703 00       		.byte	0
 2768 0704 0C       		.uleb128 0xc
 2769 0705 35010000 		.4byte	.LASF67
 2770 0709 01       		.byte	0x1
 2771 070a 7905     		.2byte	0x579
 2772 070c 00000000 		.4byte	.LFB32
 2773 0710 14000000 		.4byte	.LFE32-.LFB32
 2774 0714 01       		.uleb128 0x1
 2775 0715 9C       		.byte	0x9c
 2776 0716 34070000 		.4byte	0x734
 2777 071a 0D       		.uleb128 0xd
 2778 071b BB060000 		.4byte	.LASF68
 2779 071f 01       		.byte	0x1
 2780 0720 7905     		.2byte	0x579
 2781 0722 76000000 		.4byte	0x76
 2782 0726 A4030000 		.4byte	.LLST28
 2783 072a 0F       		.uleb128 0xf
 2784 072b 0C000000 		.4byte	.LVL82
 2785 072f 0E0B0000 		.4byte	0xb0e
 2786 0733 00       		.byte	0
ARM GAS  C:\Users\ELECTR~1\AppData\Local\Temp\ccybjnra.s 			page 85


 2787 0734 13       		.uleb128 0x13
 2788 0735 0F050000 		.4byte	.LASF69
 2789 0739 01       		.byte	0x1
 2790 073a A202     		.2byte	0x2a2
 2791 073c A1000000 		.4byte	0xa1
 2792 0740 00000000 		.4byte	.LFB7
 2793 0744 54000000 		.4byte	.LFE7-.LFB7
 2794 0748 01       		.uleb128 0x1
 2795 0749 9C       		.byte	0x9c
 2796 074a 8B070000 		.4byte	0x78b
 2797 074e 0D       		.uleb128 0xd
 2798 074f 7B060000 		.4byte	.LASF70
 2799 0753 01       		.byte	0x1
 2800 0754 A202     		.2byte	0x2a2
 2801 0756 81000000 		.4byte	0x81
 2802 075a C5030000 		.4byte	.LLST29
 2803 075e 0E       		.uleb128 0xe
 2804 075f E0020000 		.4byte	.LASF38
 2805 0763 01       		.byte	0x1
 2806 0764 A402     		.2byte	0x2a4
 2807 0766 A1000000 		.4byte	0xa1
 2808 076a E3030000 		.4byte	.LLST30
 2809 076e 18       		.uleb128 0x18
 2810 076f 2E000000 		.4byte	.LVL86
 2811 0773 04070000 		.4byte	0x704
 2812 0777 81070000 		.4byte	0x781
 2813 077b 16       		.uleb128 0x16
 2814 077c 01       		.uleb128 0x1
 2815 077d 50       		.byte	0x50
 2816 077e 01       		.uleb128 0x1
 2817 077f 31       		.byte	0x31
 2818 0780 00       		.byte	0
 2819 0781 0F       		.uleb128 0xf
 2820 0782 32000000 		.4byte	.LVL87
 2821 0786 4B020000 		.4byte	0x24b
 2822 078a 00       		.byte	0
 2823 078b 0C       		.uleb128 0xc
 2824 078c 8C010000 		.4byte	.LASF71
 2825 0790 01       		.byte	0x1
 2826 0791 5003     		.2byte	0x350
 2827 0793 00000000 		.4byte	.LFB11
 2828 0797 44000000 		.4byte	.LFE11-.LFB11
 2829 079b 01       		.uleb128 0x1
 2830 079c 9C       		.byte	0x9c
 2831 079d D0070000 		.4byte	0x7d0
 2832 07a1 0D       		.uleb128 0xd
 2833 07a2 BE040000 		.4byte	.LASF72
 2834 07a6 01       		.byte	0x1
 2835 07a7 5003     		.2byte	0x350
 2836 07a9 81000000 		.4byte	0x81
 2837 07ad 02040000 		.4byte	.LLST31
 2838 07b1 18       		.uleb128 0x18
 2839 07b2 2E000000 		.4byte	.LVL94
 2840 07b6 04070000 		.4byte	0x704
 2841 07ba C6070000 		.4byte	0x7c6
 2842 07be 16       		.uleb128 0x16
 2843 07bf 01       		.uleb128 0x1
ARM GAS  C:\Users\ELECTR~1\AppData\Local\Temp\ccybjnra.s 			page 86


 2844 07c0 50       		.byte	0x50
 2845 07c1 03       		.uleb128 0x3
 2846 07c2 0A       		.byte	0xa
 2847 07c3 E803     		.2byte	0x3e8
 2848 07c5 00       		.byte	0
 2849 07c6 0F       		.uleb128 0xf
 2850 07c7 32000000 		.4byte	.LVL95
 2851 07cb 89020000 		.4byte	0x289
 2852 07cf 00       		.byte	0
 2853 07d0 19       		.uleb128 0x19
 2854 07d1 D2000000 		.4byte	.LASF73
 2855 07d5 01       		.byte	0x1
 2856 07d6 8C05     		.2byte	0x58c
 2857 07d8 00000000 		.4byte	.LFB33
 2858 07dc 4C000000 		.4byte	.LFE33-.LFB33
 2859 07e0 01       		.uleb128 0x1
 2860 07e1 9C       		.byte	0x9c
 2861 07e2 F7070000 		.4byte	0x7f7
 2862 07e6 0D       		.uleb128 0xd
 2863 07e7 CD000000 		.4byte	.LASF29
 2864 07eb 01       		.byte	0x1
 2865 07ec 8C05     		.2byte	0x58c
 2866 07ee 81000000 		.4byte	0x81
 2867 07f2 2E040000 		.4byte	.LLST32
 2868 07f6 00       		.byte	0
 2869 07f7 11       		.uleb128 0x11
 2870 07f8 6D060000 		.4byte	.LASF74
 2871 07fc 01       		.byte	0x1
 2872 07fd 0F06     		.2byte	0x60f
 2873 07ff 00000000 		.4byte	.LFB37
 2874 0803 10000000 		.4byte	.LFE37-.LFB37
 2875 0807 01       		.uleb128 0x1
 2876 0808 9C       		.byte	0x9c
 2877 0809 11       		.uleb128 0x11
 2878 080a 8C000000 		.4byte	.LASF75
 2879 080e 01       		.byte	0x1
 2880 080f 2606     		.2byte	0x626
 2881 0811 00000000 		.4byte	.LFB38
 2882 0815 10000000 		.4byte	.LFE38-.LFB38
 2883 0819 01       		.uleb128 0x1
 2884 081a 9C       		.byte	0x9c
 2885 081b 0C       		.uleb128 0xc
 2886 081c 48050000 		.4byte	.LASF76
 2887 0820 01       		.byte	0x1
 2888 0821 F705     		.2byte	0x5f7
 2889 0823 00000000 		.4byte	.LFB36
 2890 0827 18000000 		.4byte	.LFE36-.LFB36
 2891 082b 01       		.uleb128 0x1
 2892 082c 9C       		.byte	0x9c
 2893 082d 3B080000 		.4byte	0x83b
 2894 0831 0F       		.uleb128 0xf
 2895 0832 06000000 		.4byte	.LVL100
 2896 0836 09080000 		.4byte	0x809
 2897 083a 00       		.byte	0
 2898 083b 11       		.uleb128 0x11
 2899 083c A8050000 		.4byte	.LASF77
 2900 0840 01       		.byte	0x1
ARM GAS  C:\Users\ELECTR~1\AppData\Local\Temp\ccybjnra.s 			page 87


 2901 0841 3D06     		.2byte	0x63d
 2902 0843 00000000 		.4byte	.LFB39
 2903 0847 10000000 		.4byte	.LFE39-.LFB39
 2904 084b 01       		.uleb128 0x1
 2905 084c 9C       		.byte	0x9c
 2906 084d 0C       		.uleb128 0xc
 2907 084e C8060000 		.4byte	.LASF78
 2908 0852 01       		.byte	0x1
 2909 0853 5306     		.2byte	0x653
 2910 0855 00000000 		.4byte	.LFB40
 2911 0859 10000000 		.4byte	.LFE40-.LFB40
 2912 085d 01       		.uleb128 0x1
 2913 085e 9C       		.byte	0x9c
 2914 085f 74080000 		.4byte	0x874
 2915 0863 0D       		.uleb128 0xd
 2916 0864 C7010000 		.4byte	.LASF62
 2917 0868 01       		.byte	0x1
 2918 0869 5306     		.2byte	0x653
 2919 086b 81000000 		.4byte	0x81
 2920 086f 4F040000 		.4byte	.LLST33
 2921 0873 00       		.byte	0
 2922 0874 12       		.uleb128 0x12
 2923 0875 ED000000 		.4byte	.LASF79
 2924 0879 01       		.byte	0x1
 2925 087a 6706     		.2byte	0x667
 2926 087c 81000000 		.4byte	0x81
 2927 0880 00000000 		.4byte	.LFB41
 2928 0884 10000000 		.4byte	.LFE41-.LFB41
 2929 0888 01       		.uleb128 0x1
 2930 0889 9C       		.byte	0x9c
 2931 088a 12       		.uleb128 0x12
 2932 088b A2030000 		.4byte	.LASF80
 2933 088f 01       		.byte	0x1
 2934 0890 7B06     		.2byte	0x67b
 2935 0892 81000000 		.4byte	0x81
 2936 0896 00000000 		.4byte	.LFB42
 2937 089a 10000000 		.4byte	.LFE42-.LFB42
 2938 089e 01       		.uleb128 0x1
 2939 089f 9C       		.byte	0x9c
 2940 08a0 0C       		.uleb128 0xc
 2941 08a1 B9020000 		.4byte	.LASF81
 2942 08a5 01       		.byte	0x1
 2943 08a6 9B06     		.2byte	0x69b
 2944 08a8 00000000 		.4byte	.LFB43
 2945 08ac 20000000 		.4byte	.LFE43-.LFB43
 2946 08b0 01       		.uleb128 0x1
 2947 08b1 9C       		.byte	0x9c
 2948 08b2 C5080000 		.4byte	0x8c5
 2949 08b6 14       		.uleb128 0x14
 2950 08b7 CD010000 		.4byte	.LASF82
 2951 08bb 01       		.byte	0x1
 2952 08bc 9B06     		.2byte	0x69b
 2953 08be 81000000 		.4byte	0x81
 2954 08c2 01       		.uleb128 0x1
 2955 08c3 50       		.byte	0x50
 2956 08c4 00       		.byte	0
 2957 08c5 12       		.uleb128 0x12
ARM GAS  C:\Users\ELECTR~1\AppData\Local\Temp\ccybjnra.s 			page 88


 2958 08c6 E7010000 		.4byte	.LASF83
 2959 08ca 01       		.byte	0x1
 2960 08cb BC06     		.2byte	0x6bc
 2961 08cd 81000000 		.4byte	0x81
 2962 08d1 00000000 		.4byte	.LFB44
 2963 08d5 10000000 		.4byte	.LFE44-.LFB44
 2964 08d9 01       		.uleb128 0x1
 2965 08da 9C       		.byte	0x9c
 2966 08db 1A       		.uleb128 0x1a
 2967 08dc DB060000 		.4byte	.LASF103
 2968 08e0 01       		.byte	0x1
 2969 08e1 2307     		.2byte	0x723
 2970 08e3 00000000 		.4byte	.LFB48
 2971 08e7 28000000 		.4byte	.LFE48-.LFB48
 2972 08eb 01       		.uleb128 0x1
 2973 08ec 9C       		.byte	0x9c
 2974 08ed 09090000 		.4byte	0x909
 2975 08f1 1B       		.uleb128 0x1b
 2976 08f2 6900     		.ascii	"i\000"
 2977 08f4 01       		.byte	0x1
 2978 08f5 2507     		.2byte	0x725
 2979 08f7 81000000 		.4byte	0x81
 2980 08fb 70040000 		.4byte	.LLST34
 2981 08ff 0F       		.uleb128 0xf
 2982 0900 06000000 		.4byte	.LVL104
 2983 0904 C5080000 		.4byte	0x8c5
 2984 0908 00       		.byte	0
 2985 0909 11       		.uleb128 0x11
 2986 090a 0A020000 		.4byte	.LASF84
 2987 090e 01       		.byte	0x1
 2988 090f D006     		.2byte	0x6d0
 2989 0911 00000000 		.4byte	.LFB45
 2990 0915 0C000000 		.4byte	.LFE45-.LFB45
 2991 0919 01       		.uleb128 0x1
 2992 091a 9C       		.byte	0x9c
 2993 091b 19       		.uleb128 0x19
 2994 091c B9010000 		.4byte	.LASF85
 2995 0920 01       		.byte	0x1
 2996 0921 D105     		.2byte	0x5d1
 2997 0923 00000000 		.4byte	.LFB35
 2998 0927 4C000000 		.4byte	.LFE35-.LFB35
 2999 092b 01       		.uleb128 0x1
 3000 092c 9C       		.byte	0x9c
 3001 092d 90090000 		.4byte	0x990
 3002 0931 1B       		.uleb128 0x1b
 3003 0932 6900     		.ascii	"i\000"
 3004 0934 01       		.byte	0x1
 3005 0935 D305     		.2byte	0x5d3
 3006 0937 81000000 		.4byte	0x81
 3007 093b 8E040000 		.4byte	.LLST35
 3008 093f 18       		.uleb128 0x18
 3009 0940 1C000000 		.4byte	.LVL114
 3010 0944 66040000 		.4byte	0x466
 3011 0948 5B090000 		.4byte	0x95b
 3012 094c 16       		.uleb128 0x16
 3013 094d 01       		.uleb128 0x1
 3014 094e 51       		.byte	0x51
ARM GAS  C:\Users\ELECTR~1\AppData\Local\Temp\ccybjnra.s 			page 89


 3015 094f 05       		.uleb128 0x5
 3016 0950 03       		.byte	0x3
 3017 0951 00000000 		.4byte	CySysTickServiceCallbacks
 3018 0955 16       		.uleb128 0x16
 3019 0956 01       		.uleb128 0x1
 3020 0957 50       		.byte	0x50
 3021 0958 01       		.uleb128 0x1
 3022 0959 3F       		.byte	0x3f
 3023 095a 00       		.byte	0
 3024 095b 18       		.uleb128 0x18
 3025 095c 22000000 		.4byte	.LVL115
 3026 0960 A0080000 		.4byte	0x8a0
 3027 0964 6E090000 		.4byte	0x96e
 3028 0968 16       		.uleb128 0x16
 3029 0969 01       		.uleb128 0x1
 3030 096a 50       		.byte	0x50
 3031 096b 01       		.uleb128 0x1
 3032 096c 31       		.byte	0x31
 3033 096d 00       		.byte	0
 3034 096e 0F       		.uleb128 0xf
 3035 096f 32000000 		.4byte	.LVL117
 3036 0973 4D080000 		.4byte	0x84d
 3037 0977 0F       		.uleb128 0xf
 3038 0978 36000000 		.4byte	.LVL118
 3039 097c 09090000 		.4byte	0x909
 3040 0980 15       		.uleb128 0x15
 3041 0981 3C000000 		.4byte	.LVL119
 3042 0985 22030000 		.4byte	0x322
 3043 0989 16       		.uleb128 0x16
 3044 098a 01       		.uleb128 0x1
 3045 098b 50       		.byte	0x50
 3046 098c 01       		.uleb128 0x1
 3047 098d 3F       		.byte	0x3f
 3048 098e 00       		.byte	0
 3049 098f 00       		.byte	0
 3050 0990 0C       		.uleb128 0xc
 3051 0991 3E030000 		.4byte	.LASF86
 3052 0995 01       		.byte	0x1
 3053 0996 AF05     		.2byte	0x5af
 3054 0998 00000000 		.4byte	.LFB34
 3055 099c 20000000 		.4byte	.LFE34-.LFB34
 3056 09a0 01       		.uleb128 0x1
 3057 09a1 9C       		.byte	0x9c
 3058 09a2 B9090000 		.4byte	0x9b9
 3059 09a6 0F       		.uleb128 0xf
 3060 09a7 0E000000 		.4byte	.LVL120
 3061 09ab 1B090000 		.4byte	0x91b
 3062 09af 0F       		.uleb128 0xf
 3063 09b0 18000000 		.4byte	.LVL121
 3064 09b4 1B080000 		.4byte	0x81b
 3065 09b8 00       		.byte	0
 3066 09b9 13       		.uleb128 0x13
 3067 09ba 6F050000 		.4byte	.LASF87
 3068 09be 01       		.byte	0x1
 3069 09bf F506     		.2byte	0x6f5
 3070 09c1 E9000000 		.4byte	0xe9
 3071 09c5 00000000 		.4byte	.LFB46
ARM GAS  C:\Users\ELECTR~1\AppData\Local\Temp\ccybjnra.s 			page 90


 3072 09c9 10000000 		.4byte	.LFE46-.LFB46
 3073 09cd 01       		.uleb128 0x1
 3074 09ce 9C       		.byte	0x9c
 3075 09cf 000A0000 		.4byte	0xa00
 3076 09d3 0D       		.uleb128 0xd
 3077 09d4 80010000 		.4byte	.LASF45
 3078 09d8 01       		.byte	0x1
 3079 09d9 F506     		.2byte	0x6f5
 3080 09db 81000000 		.4byte	0x81
 3081 09df AD040000 		.4byte	.LLST36
 3082 09e3 14       		.uleb128 0x14
 3083 09e4 88030000 		.4byte	.LASF88
 3084 09e8 01       		.byte	0x1
 3085 09e9 F506     		.2byte	0x6f5
 3086 09eb E9000000 		.4byte	0xe9
 3087 09ef 01       		.uleb128 0x1
 3088 09f0 51       		.byte	0x51
 3089 09f1 10       		.uleb128 0x10
 3090 09f2 81030000 		.4byte	.LASF89
 3091 09f6 01       		.byte	0x1
 3092 09f7 F706     		.2byte	0x6f7
 3093 09f9 E9000000 		.4byte	0xe9
 3094 09fd 01       		.uleb128 0x1
 3095 09fe 50       		.byte	0x50
 3096 09ff 00       		.byte	0
 3097 0a00 13       		.uleb128 0x13
 3098 0a01 7D020000 		.4byte	.LASF90
 3099 0a05 01       		.byte	0x1
 3100 0a06 0F07     		.2byte	0x70f
 3101 0a08 E9000000 		.4byte	0xe9
 3102 0a0c 00000000 		.4byte	.LFB47
 3103 0a10 0C000000 		.4byte	.LFE47-.LFB47
 3104 0a14 01       		.uleb128 0x1
 3105 0a15 9C       		.byte	0x9c
 3106 0a16 2B0A0000 		.4byte	0xa2b
 3107 0a1a 0D       		.uleb128 0xd
 3108 0a1b 80010000 		.4byte	.LASF45
 3109 0a1f 01       		.byte	0x1
 3110 0a20 0F07     		.2byte	0x70f
 3111 0a22 81000000 		.4byte	0x81
 3112 0a26 CE040000 		.4byte	.LLST37
 3113 0a2a 00       		.byte	0
 3114 0a2b 0C       		.uleb128 0xc
 3115 0a2c D9010000 		.4byte	.LASF91
 3116 0a30 01       		.byte	0x1
 3117 0a31 4807     		.2byte	0x748
 3118 0a33 00000000 		.4byte	.LFB49
 3119 0a37 70000000 		.4byte	.LFE49-.LFB49
 3120 0a3b 01       		.uleb128 0x1
 3121 0a3c 9C       		.byte	0x9c
 3122 0a3d 500A0000 		.4byte	0xa50
 3123 0a41 14       		.uleb128 0x14
 3124 0a42 97050000 		.4byte	.LASF92
 3125 0a46 01       		.byte	0x1
 3126 0a47 4807     		.2byte	0x748
 3127 0a49 500A0000 		.4byte	0xa50
 3128 0a4d 01       		.uleb128 0x1
ARM GAS  C:\Users\ELECTR~1\AppData\Local\Temp\ccybjnra.s 			page 91


 3129 0a4e 50       		.byte	0x50
 3130 0a4f 00       		.byte	0
 3131 0a50 07       		.uleb128 0x7
 3132 0a51 04       		.byte	0x4
 3133 0a52 81000000 		.4byte	0x81
 3134 0a56 09       		.uleb128 0x9
 3135 0a57 E9000000 		.4byte	0xe9
 3136 0a5b 660A0000 		.4byte	0xa66
 3137 0a5f 0A       		.uleb128 0xa
 3138 0a60 E2000000 		.4byte	0xe2
 3139 0a64 04       		.byte	0x4
 3140 0a65 00       		.byte	0
 3141 0a66 1C       		.uleb128 0x1c
 3142 0a67 84050000 		.4byte	.LASF93
 3143 0a6b 01       		.byte	0x1
 3144 0a6c 22       		.byte	0x22
 3145 0a6d 560A0000 		.4byte	0xa56
 3146 0a71 05       		.uleb128 0x5
 3147 0a72 03       		.byte	0x3
 3148 0a73 00000000 		.4byte	CySysTickCallbacks
 3149 0a77 1D       		.uleb128 0x1d
 3150 0a78 56030000 		.4byte	.LASF94
 3151 0a7c 01       		.byte	0x1
 3152 0a7d 34       		.byte	0x34
 3153 0a7e 81000000 		.4byte	0x81
 3154 0a82 05       		.uleb128 0x5
 3155 0a83 03       		.byte	0x3
 3156 0a84 00000000 		.4byte	CySysTickInitVar
 3157 0a88 1D       		.uleb128 0x1d
 3158 0a89 42040000 		.4byte	.LASF95
 3159 0a8d 01       		.byte	0x1
 3160 0a8e 1B       		.byte	0x1b
 3161 0a8f 81000000 		.4byte	0x81
 3162 0a93 05       		.uleb128 0x5
 3163 0a94 03       		.byte	0x3
 3164 0a95 00000000 		.4byte	cydelayFreqHz
 3165 0a99 1D       		.uleb128 0x1d
 3166 0a9a 26010000 		.4byte	.LASF96
 3167 0a9e 01       		.byte	0x1
 3168 0a9f 1C       		.byte	0x1c
 3169 0aa0 81000000 		.4byte	0x81
 3170 0aa4 05       		.uleb128 0x5
 3171 0aa5 03       		.byte	0x3
 3172 0aa6 00000000 		.4byte	cydelayFreqKhz
 3173 0aaa 1D       		.uleb128 0x1d
 3174 0aab 27050000 		.4byte	.LASF97
 3175 0aaf 01       		.byte	0x1
 3176 0ab0 1D       		.byte	0x1d
 3177 0ab1 6B000000 		.4byte	0x6b
 3178 0ab5 05       		.uleb128 0x5
 3179 0ab6 03       		.byte	0x3
 3180 0ab7 00000000 		.4byte	cydelayFreqMhz
 3181 0abb 1D       		.uleb128 0x1d
 3182 0abc AC010000 		.4byte	.LASF98
 3183 0ac0 01       		.byte	0x1
 3184 0ac1 1E       		.byte	0x1e
 3185 0ac2 81000000 		.4byte	0x81
ARM GAS  C:\Users\ELECTR~1\AppData\Local\Temp\ccybjnra.s 			page 92


 3186 0ac6 05       		.uleb128 0x5
 3187 0ac7 03       		.byte	0x3
 3188 0ac8 00000000 		.4byte	cydelay32kMs
 3189 0acc 09       		.uleb128 0x9
 3190 0acd 6B000000 		.4byte	0x6b
 3191 0ad1 DC0A0000 		.4byte	0xadc
 3192 0ad5 0A       		.uleb128 0xa
 3193 0ad6 E2000000 		.4byte	0xe2
 3194 0ada 2D       		.byte	0x2d
 3195 0adb 00       		.byte	0
 3196 0adc 1D       		.uleb128 0x1d
 3197 0add 91030000 		.4byte	.LASF99
 3198 0ae1 01       		.byte	0x1
 3199 0ae2 39       		.byte	0x39
 3200 0ae3 ED0A0000 		.4byte	0xaed
 3201 0ae7 05       		.uleb128 0x5
 3202 0ae8 03       		.byte	0x3
 3203 0ae9 00000000 		.4byte	cyImoFreqMhz2Reg
 3204 0aed 1E       		.uleb128 0x1e
 3205 0aee CC0A0000 		.4byte	0xacc
 3206 0af2 1F       		.uleb128 0x1f
 3207 0af3 56020000 		.4byte	.LASF104
 3208 0af7 03       		.byte	0x3
 3209 0af8 5E       		.byte	0x5e
 3210 0af9 6B000000 		.4byte	0x6b
 3211 0afd 20       		.uleb128 0x20
 3212 0afe 67040000 		.4byte	.LASF105
 3213 0b02 03       		.byte	0x3
 3214 0b03 5F       		.byte	0x5f
 3215 0b04 0E0B0000 		.4byte	0xb0e
 3216 0b08 21       		.uleb128 0x21
 3217 0b09 6B000000 		.4byte	0x6b
 3218 0b0d 00       		.byte	0
 3219 0b0e 22       		.uleb128 0x22
 3220 0b0f AB040000 		.4byte	.LASF106
 3221 0b13 03       		.byte	0x3
 3222 0b14 5A       		.byte	0x5a
 3223 0b15 21       		.uleb128 0x21
 3224 0b16 81000000 		.4byte	0x81
 3225 0b1a 00       		.byte	0
 3226 0b1b 00       		.byte	0
 3227              		.section	.debug_abbrev,"",%progbits
 3228              	.Ldebug_abbrev0:
 3229 0000 01       		.uleb128 0x1
 3230 0001 11       		.uleb128 0x11
 3231 0002 01       		.byte	0x1
 3232 0003 25       		.uleb128 0x25
 3233 0004 0E       		.uleb128 0xe
 3234 0005 13       		.uleb128 0x13
 3235 0006 0B       		.uleb128 0xb
 3236 0007 03       		.uleb128 0x3
 3237 0008 0E       		.uleb128 0xe
 3238 0009 1B       		.uleb128 0x1b
 3239 000a 0E       		.uleb128 0xe
 3240 000b 55       		.uleb128 0x55
 3241 000c 17       		.uleb128 0x17
 3242 000d 11       		.uleb128 0x11
ARM GAS  C:\Users\ELECTR~1\AppData\Local\Temp\ccybjnra.s 			page 93


 3243 000e 01       		.uleb128 0x1
 3244 000f 10       		.uleb128 0x10
 3245 0010 17       		.uleb128 0x17
 3246 0011 00       		.byte	0
 3247 0012 00       		.byte	0
 3248 0013 02       		.uleb128 0x2
 3249 0014 24       		.uleb128 0x24
 3250 0015 00       		.byte	0
 3251 0016 0B       		.uleb128 0xb
 3252 0017 0B       		.uleb128 0xb
 3253 0018 3E       		.uleb128 0x3e
 3254 0019 0B       		.uleb128 0xb
 3255 001a 03       		.uleb128 0x3
 3256 001b 0E       		.uleb128 0xe
 3257 001c 00       		.byte	0
 3258 001d 00       		.byte	0
 3259 001e 03       		.uleb128 0x3
 3260 001f 24       		.uleb128 0x24
 3261 0020 00       		.byte	0
 3262 0021 0B       		.uleb128 0xb
 3263 0022 0B       		.uleb128 0xb
 3264 0023 3E       		.uleb128 0x3e
 3265 0024 0B       		.uleb128 0xb
 3266 0025 03       		.uleb128 0x3
 3267 0026 08       		.uleb128 0x8
 3268 0027 00       		.byte	0
 3269 0028 00       		.byte	0
 3270 0029 04       		.uleb128 0x4
 3271 002a 16       		.uleb128 0x16
 3272 002b 00       		.byte	0
 3273 002c 03       		.uleb128 0x3
 3274 002d 0E       		.uleb128 0xe
 3275 002e 3A       		.uleb128 0x3a
 3276 002f 0B       		.uleb128 0xb
 3277 0030 3B       		.uleb128 0x3b
 3278 0031 0B       		.uleb128 0xb
 3279 0032 49       		.uleb128 0x49
 3280 0033 13       		.uleb128 0x13
 3281 0034 00       		.byte	0
 3282 0035 00       		.byte	0
 3283 0036 05       		.uleb128 0x5
 3284 0037 16       		.uleb128 0x16
 3285 0038 00       		.byte	0
 3286 0039 03       		.uleb128 0x3
 3287 003a 0E       		.uleb128 0xe
 3288 003b 3A       		.uleb128 0x3a
 3289 003c 0B       		.uleb128 0xb
 3290 003d 3B       		.uleb128 0x3b
 3291 003e 05       		.uleb128 0x5
 3292 003f 49       		.uleb128 0x49
 3293 0040 13       		.uleb128 0x13
 3294 0041 00       		.byte	0
 3295 0042 00       		.byte	0
 3296 0043 06       		.uleb128 0x6
 3297 0044 35       		.uleb128 0x35
 3298 0045 00       		.byte	0
 3299 0046 49       		.uleb128 0x49
ARM GAS  C:\Users\ELECTR~1\AppData\Local\Temp\ccybjnra.s 			page 94


 3300 0047 13       		.uleb128 0x13
 3301 0048 00       		.byte	0
 3302 0049 00       		.byte	0
 3303 004a 07       		.uleb128 0x7
 3304 004b 0F       		.uleb128 0xf
 3305 004c 00       		.byte	0
 3306 004d 0B       		.uleb128 0xb
 3307 004e 0B       		.uleb128 0xb
 3308 004f 49       		.uleb128 0x49
 3309 0050 13       		.uleb128 0x13
 3310 0051 00       		.byte	0
 3311 0052 00       		.byte	0
 3312 0053 08       		.uleb128 0x8
 3313 0054 15       		.uleb128 0x15
 3314 0055 00       		.byte	0
 3315 0056 27       		.uleb128 0x27
 3316 0057 19       		.uleb128 0x19
 3317 0058 00       		.byte	0
 3318 0059 00       		.byte	0
 3319 005a 09       		.uleb128 0x9
 3320 005b 01       		.uleb128 0x1
 3321 005c 01       		.byte	0x1
 3322 005d 49       		.uleb128 0x49
 3323 005e 13       		.uleb128 0x13
 3324 005f 01       		.uleb128 0x1
 3325 0060 13       		.uleb128 0x13
 3326 0061 00       		.byte	0
 3327 0062 00       		.byte	0
 3328 0063 0A       		.uleb128 0xa
 3329 0064 21       		.uleb128 0x21
 3330 0065 00       		.byte	0
 3331 0066 49       		.uleb128 0x49
 3332 0067 13       		.uleb128 0x13
 3333 0068 2F       		.uleb128 0x2f
 3334 0069 0B       		.uleb128 0xb
 3335 006a 00       		.byte	0
 3336 006b 00       		.byte	0
 3337 006c 0B       		.uleb128 0xb
 3338 006d 2E       		.uleb128 0x2e
 3339 006e 00       		.byte	0
 3340 006f 3F       		.uleb128 0x3f
 3341 0070 19       		.uleb128 0x19
 3342 0071 03       		.uleb128 0x3
 3343 0072 0E       		.uleb128 0xe
 3344 0073 3A       		.uleb128 0x3a
 3345 0074 0B       		.uleb128 0xb
 3346 0075 3B       		.uleb128 0x3b
 3347 0076 0B       		.uleb128 0xb
 3348 0077 27       		.uleb128 0x27
 3349 0078 19       		.uleb128 0x19
 3350 0079 11       		.uleb128 0x11
 3351 007a 01       		.uleb128 0x1
 3352 007b 12       		.uleb128 0x12
 3353 007c 06       		.uleb128 0x6
 3354 007d 40       		.uleb128 0x40
 3355 007e 18       		.uleb128 0x18
 3356 007f 9742     		.uleb128 0x2117
ARM GAS  C:\Users\ELECTR~1\AppData\Local\Temp\ccybjnra.s 			page 95


 3357 0081 19       		.uleb128 0x19
 3358 0082 00       		.byte	0
 3359 0083 00       		.byte	0
 3360 0084 0C       		.uleb128 0xc
 3361 0085 2E       		.uleb128 0x2e
 3362 0086 01       		.byte	0x1
 3363 0087 3F       		.uleb128 0x3f
 3364 0088 19       		.uleb128 0x19
 3365 0089 03       		.uleb128 0x3
 3366 008a 0E       		.uleb128 0xe
 3367 008b 3A       		.uleb128 0x3a
 3368 008c 0B       		.uleb128 0xb
 3369 008d 3B       		.uleb128 0x3b
 3370 008e 05       		.uleb128 0x5
 3371 008f 27       		.uleb128 0x27
 3372 0090 19       		.uleb128 0x19
 3373 0091 11       		.uleb128 0x11
 3374 0092 01       		.uleb128 0x1
 3375 0093 12       		.uleb128 0x12
 3376 0094 06       		.uleb128 0x6
 3377 0095 40       		.uleb128 0x40
 3378 0096 18       		.uleb128 0x18
 3379 0097 9742     		.uleb128 0x2117
 3380 0099 19       		.uleb128 0x19
 3381 009a 01       		.uleb128 0x1
 3382 009b 13       		.uleb128 0x13
 3383 009c 00       		.byte	0
 3384 009d 00       		.byte	0
 3385 009e 0D       		.uleb128 0xd
 3386 009f 05       		.uleb128 0x5
 3387 00a0 00       		.byte	0
 3388 00a1 03       		.uleb128 0x3
 3389 00a2 0E       		.uleb128 0xe
 3390 00a3 3A       		.uleb128 0x3a
 3391 00a4 0B       		.uleb128 0xb
 3392 00a5 3B       		.uleb128 0x3b
 3393 00a6 05       		.uleb128 0x5
 3394 00a7 49       		.uleb128 0x49
 3395 00a8 13       		.uleb128 0x13
 3396 00a9 02       		.uleb128 0x2
 3397 00aa 17       		.uleb128 0x17
 3398 00ab 00       		.byte	0
 3399 00ac 00       		.byte	0
 3400 00ad 0E       		.uleb128 0xe
 3401 00ae 34       		.uleb128 0x34
 3402 00af 00       		.byte	0
 3403 00b0 03       		.uleb128 0x3
 3404 00b1 0E       		.uleb128 0xe
 3405 00b2 3A       		.uleb128 0x3a
 3406 00b3 0B       		.uleb128 0xb
 3407 00b4 3B       		.uleb128 0x3b
 3408 00b5 05       		.uleb128 0x5
 3409 00b6 49       		.uleb128 0x49
 3410 00b7 13       		.uleb128 0x13
 3411 00b8 02       		.uleb128 0x2
 3412 00b9 17       		.uleb128 0x17
 3413 00ba 00       		.byte	0
ARM GAS  C:\Users\ELECTR~1\AppData\Local\Temp\ccybjnra.s 			page 96


 3414 00bb 00       		.byte	0
 3415 00bc 0F       		.uleb128 0xf
 3416 00bd 898201   		.uleb128 0x4109
 3417 00c0 00       		.byte	0
 3418 00c1 11       		.uleb128 0x11
 3419 00c2 01       		.uleb128 0x1
 3420 00c3 31       		.uleb128 0x31
 3421 00c4 13       		.uleb128 0x13
 3422 00c5 00       		.byte	0
 3423 00c6 00       		.byte	0
 3424 00c7 10       		.uleb128 0x10
 3425 00c8 34       		.uleb128 0x34
 3426 00c9 00       		.byte	0
 3427 00ca 03       		.uleb128 0x3
 3428 00cb 0E       		.uleb128 0xe
 3429 00cc 3A       		.uleb128 0x3a
 3430 00cd 0B       		.uleb128 0xb
 3431 00ce 3B       		.uleb128 0x3b
 3432 00cf 05       		.uleb128 0x5
 3433 00d0 49       		.uleb128 0x49
 3434 00d1 13       		.uleb128 0x13
 3435 00d2 02       		.uleb128 0x2
 3436 00d3 18       		.uleb128 0x18
 3437 00d4 00       		.byte	0
 3438 00d5 00       		.byte	0
 3439 00d6 11       		.uleb128 0x11
 3440 00d7 2E       		.uleb128 0x2e
 3441 00d8 00       		.byte	0
 3442 00d9 3F       		.uleb128 0x3f
 3443 00da 19       		.uleb128 0x19
 3444 00db 03       		.uleb128 0x3
 3445 00dc 0E       		.uleb128 0xe
 3446 00dd 3A       		.uleb128 0x3a
 3447 00de 0B       		.uleb128 0xb
 3448 00df 3B       		.uleb128 0x3b
 3449 00e0 05       		.uleb128 0x5
 3450 00e1 27       		.uleb128 0x27
 3451 00e2 19       		.uleb128 0x19
 3452 00e3 11       		.uleb128 0x11
 3453 00e4 01       		.uleb128 0x1
 3454 00e5 12       		.uleb128 0x12
 3455 00e6 06       		.uleb128 0x6
 3456 00e7 40       		.uleb128 0x40
 3457 00e8 18       		.uleb128 0x18
 3458 00e9 9742     		.uleb128 0x2117
 3459 00eb 19       		.uleb128 0x19
 3460 00ec 00       		.byte	0
 3461 00ed 00       		.byte	0
 3462 00ee 12       		.uleb128 0x12
 3463 00ef 2E       		.uleb128 0x2e
 3464 00f0 00       		.byte	0
 3465 00f1 3F       		.uleb128 0x3f
 3466 00f2 19       		.uleb128 0x19
 3467 00f3 03       		.uleb128 0x3
 3468 00f4 0E       		.uleb128 0xe
 3469 00f5 3A       		.uleb128 0x3a
 3470 00f6 0B       		.uleb128 0xb
ARM GAS  C:\Users\ELECTR~1\AppData\Local\Temp\ccybjnra.s 			page 97


 3471 00f7 3B       		.uleb128 0x3b
 3472 00f8 05       		.uleb128 0x5
 3473 00f9 27       		.uleb128 0x27
 3474 00fa 19       		.uleb128 0x19
 3475 00fb 49       		.uleb128 0x49
 3476 00fc 13       		.uleb128 0x13
 3477 00fd 11       		.uleb128 0x11
 3478 00fe 01       		.uleb128 0x1
 3479 00ff 12       		.uleb128 0x12
 3480 0100 06       		.uleb128 0x6
 3481 0101 40       		.uleb128 0x40
 3482 0102 18       		.uleb128 0x18
 3483 0103 9742     		.uleb128 0x2117
 3484 0105 19       		.uleb128 0x19
 3485 0106 00       		.byte	0
 3486 0107 00       		.byte	0
 3487 0108 13       		.uleb128 0x13
 3488 0109 2E       		.uleb128 0x2e
 3489 010a 01       		.byte	0x1
 3490 010b 3F       		.uleb128 0x3f
 3491 010c 19       		.uleb128 0x19
 3492 010d 03       		.uleb128 0x3
 3493 010e 0E       		.uleb128 0xe
 3494 010f 3A       		.uleb128 0x3a
 3495 0110 0B       		.uleb128 0xb
 3496 0111 3B       		.uleb128 0x3b
 3497 0112 05       		.uleb128 0x5
 3498 0113 27       		.uleb128 0x27
 3499 0114 19       		.uleb128 0x19
 3500 0115 49       		.uleb128 0x49
 3501 0116 13       		.uleb128 0x13
 3502 0117 11       		.uleb128 0x11
 3503 0118 01       		.uleb128 0x1
 3504 0119 12       		.uleb128 0x12
 3505 011a 06       		.uleb128 0x6
 3506 011b 40       		.uleb128 0x40
 3507 011c 18       		.uleb128 0x18
 3508 011d 9742     		.uleb128 0x2117
 3509 011f 19       		.uleb128 0x19
 3510 0120 01       		.uleb128 0x1
 3511 0121 13       		.uleb128 0x13
 3512 0122 00       		.byte	0
 3513 0123 00       		.byte	0
 3514 0124 14       		.uleb128 0x14
 3515 0125 05       		.uleb128 0x5
 3516 0126 00       		.byte	0
 3517 0127 03       		.uleb128 0x3
 3518 0128 0E       		.uleb128 0xe
 3519 0129 3A       		.uleb128 0x3a
 3520 012a 0B       		.uleb128 0xb
 3521 012b 3B       		.uleb128 0x3b
 3522 012c 05       		.uleb128 0x5
 3523 012d 49       		.uleb128 0x49
 3524 012e 13       		.uleb128 0x13
 3525 012f 02       		.uleb128 0x2
 3526 0130 18       		.uleb128 0x18
 3527 0131 00       		.byte	0
ARM GAS  C:\Users\ELECTR~1\AppData\Local\Temp\ccybjnra.s 			page 98


 3528 0132 00       		.byte	0
 3529 0133 15       		.uleb128 0x15
 3530 0134 898201   		.uleb128 0x4109
 3531 0137 01       		.byte	0x1
 3532 0138 11       		.uleb128 0x11
 3533 0139 01       		.uleb128 0x1
 3534 013a 31       		.uleb128 0x31
 3535 013b 13       		.uleb128 0x13
 3536 013c 00       		.byte	0
 3537 013d 00       		.byte	0
 3538 013e 16       		.uleb128 0x16
 3539 013f 8A8201   		.uleb128 0x410a
 3540 0142 00       		.byte	0
 3541 0143 02       		.uleb128 0x2
 3542 0144 18       		.uleb128 0x18
 3543 0145 9142     		.uleb128 0x2111
 3544 0147 18       		.uleb128 0x18
 3545 0148 00       		.byte	0
 3546 0149 00       		.byte	0
 3547 014a 17       		.uleb128 0x17
 3548 014b 34       		.uleb128 0x34
 3549 014c 00       		.byte	0
 3550 014d 03       		.uleb128 0x3
 3551 014e 0E       		.uleb128 0xe
 3552 014f 3A       		.uleb128 0x3a
 3553 0150 0B       		.uleb128 0xb
 3554 0151 3B       		.uleb128 0x3b
 3555 0152 05       		.uleb128 0x5
 3556 0153 49       		.uleb128 0x49
 3557 0154 13       		.uleb128 0x13
 3558 0155 1C       		.uleb128 0x1c
 3559 0156 06       		.uleb128 0x6
 3560 0157 00       		.byte	0
 3561 0158 00       		.byte	0
 3562 0159 18       		.uleb128 0x18
 3563 015a 898201   		.uleb128 0x4109
 3564 015d 01       		.byte	0x1
 3565 015e 11       		.uleb128 0x11
 3566 015f 01       		.uleb128 0x1
 3567 0160 31       		.uleb128 0x31
 3568 0161 13       		.uleb128 0x13
 3569 0162 01       		.uleb128 0x1
 3570 0163 13       		.uleb128 0x13
 3571 0164 00       		.byte	0
 3572 0165 00       		.byte	0
 3573 0166 19       		.uleb128 0x19
 3574 0167 2E       		.uleb128 0x2e
 3575 0168 01       		.byte	0x1
 3576 0169 3F       		.uleb128 0x3f
 3577 016a 19       		.uleb128 0x19
 3578 016b 03       		.uleb128 0x3
 3579 016c 0E       		.uleb128 0xe
 3580 016d 3A       		.uleb128 0x3a
 3581 016e 0B       		.uleb128 0xb
 3582 016f 3B       		.uleb128 0x3b
 3583 0170 05       		.uleb128 0x5
 3584 0171 27       		.uleb128 0x27
ARM GAS  C:\Users\ELECTR~1\AppData\Local\Temp\ccybjnra.s 			page 99


 3585 0172 19       		.uleb128 0x19
 3586 0173 11       		.uleb128 0x11
 3587 0174 01       		.uleb128 0x1
 3588 0175 12       		.uleb128 0x12
 3589 0176 06       		.uleb128 0x6
 3590 0177 40       		.uleb128 0x40
 3591 0178 18       		.uleb128 0x18
 3592 0179 9642     		.uleb128 0x2116
 3593 017b 19       		.uleb128 0x19
 3594 017c 01       		.uleb128 0x1
 3595 017d 13       		.uleb128 0x13
 3596 017e 00       		.byte	0
 3597 017f 00       		.byte	0
 3598 0180 1A       		.uleb128 0x1a
 3599 0181 2E       		.uleb128 0x2e
 3600 0182 01       		.byte	0x1
 3601 0183 03       		.uleb128 0x3
 3602 0184 0E       		.uleb128 0xe
 3603 0185 3A       		.uleb128 0x3a
 3604 0186 0B       		.uleb128 0xb
 3605 0187 3B       		.uleb128 0x3b
 3606 0188 05       		.uleb128 0x5
 3607 0189 27       		.uleb128 0x27
 3608 018a 19       		.uleb128 0x19
 3609 018b 11       		.uleb128 0x11
 3610 018c 01       		.uleb128 0x1
 3611 018d 12       		.uleb128 0x12
 3612 018e 06       		.uleb128 0x6
 3613 018f 40       		.uleb128 0x40
 3614 0190 18       		.uleb128 0x18
 3615 0191 9642     		.uleb128 0x2116
 3616 0193 19       		.uleb128 0x19
 3617 0194 01       		.uleb128 0x1
 3618 0195 13       		.uleb128 0x13
 3619 0196 00       		.byte	0
 3620 0197 00       		.byte	0
 3621 0198 1B       		.uleb128 0x1b
 3622 0199 34       		.uleb128 0x34
 3623 019a 00       		.byte	0
 3624 019b 03       		.uleb128 0x3
 3625 019c 08       		.uleb128 0x8
 3626 019d 3A       		.uleb128 0x3a
 3627 019e 0B       		.uleb128 0xb
 3628 019f 3B       		.uleb128 0x3b
 3629 01a0 05       		.uleb128 0x5
 3630 01a1 49       		.uleb128 0x49
 3631 01a2 13       		.uleb128 0x13
 3632 01a3 02       		.uleb128 0x2
 3633 01a4 17       		.uleb128 0x17
 3634 01a5 00       		.byte	0
 3635 01a6 00       		.byte	0
 3636 01a7 1C       		.uleb128 0x1c
 3637 01a8 34       		.uleb128 0x34
 3638 01a9 00       		.byte	0
 3639 01aa 03       		.uleb128 0x3
 3640 01ab 0E       		.uleb128 0xe
 3641 01ac 3A       		.uleb128 0x3a
ARM GAS  C:\Users\ELECTR~1\AppData\Local\Temp\ccybjnra.s 			page 100


 3642 01ad 0B       		.uleb128 0xb
 3643 01ae 3B       		.uleb128 0x3b
 3644 01af 0B       		.uleb128 0xb
 3645 01b0 49       		.uleb128 0x49
 3646 01b1 13       		.uleb128 0x13
 3647 01b2 02       		.uleb128 0x2
 3648 01b3 18       		.uleb128 0x18
 3649 01b4 00       		.byte	0
 3650 01b5 00       		.byte	0
 3651 01b6 1D       		.uleb128 0x1d
 3652 01b7 34       		.uleb128 0x34
 3653 01b8 00       		.byte	0
 3654 01b9 03       		.uleb128 0x3
 3655 01ba 0E       		.uleb128 0xe
 3656 01bb 3A       		.uleb128 0x3a
 3657 01bc 0B       		.uleb128 0xb
 3658 01bd 3B       		.uleb128 0x3b
 3659 01be 0B       		.uleb128 0xb
 3660 01bf 49       		.uleb128 0x49
 3661 01c0 13       		.uleb128 0x13
 3662 01c1 3F       		.uleb128 0x3f
 3663 01c2 19       		.uleb128 0x19
 3664 01c3 02       		.uleb128 0x2
 3665 01c4 18       		.uleb128 0x18
 3666 01c5 00       		.byte	0
 3667 01c6 00       		.byte	0
 3668 01c7 1E       		.uleb128 0x1e
 3669 01c8 26       		.uleb128 0x26
 3670 01c9 00       		.byte	0
 3671 01ca 49       		.uleb128 0x49
 3672 01cb 13       		.uleb128 0x13
 3673 01cc 00       		.byte	0
 3674 01cd 00       		.byte	0
 3675 01ce 1F       		.uleb128 0x1f
 3676 01cf 2E       		.uleb128 0x2e
 3677 01d0 00       		.byte	0
 3678 01d1 3F       		.uleb128 0x3f
 3679 01d2 19       		.uleb128 0x19
 3680 01d3 03       		.uleb128 0x3
 3681 01d4 0E       		.uleb128 0xe
 3682 01d5 3A       		.uleb128 0x3a
 3683 01d6 0B       		.uleb128 0xb
 3684 01d7 3B       		.uleb128 0x3b
 3685 01d8 0B       		.uleb128 0xb
 3686 01d9 27       		.uleb128 0x27
 3687 01da 19       		.uleb128 0x19
 3688 01db 49       		.uleb128 0x49
 3689 01dc 13       		.uleb128 0x13
 3690 01dd 3C       		.uleb128 0x3c
 3691 01de 19       		.uleb128 0x19
 3692 01df 00       		.byte	0
 3693 01e0 00       		.byte	0
 3694 01e1 20       		.uleb128 0x20
 3695 01e2 2E       		.uleb128 0x2e
 3696 01e3 01       		.byte	0x1
 3697 01e4 3F       		.uleb128 0x3f
 3698 01e5 19       		.uleb128 0x19
ARM GAS  C:\Users\ELECTR~1\AppData\Local\Temp\ccybjnra.s 			page 101


 3699 01e6 03       		.uleb128 0x3
 3700 01e7 0E       		.uleb128 0xe
 3701 01e8 3A       		.uleb128 0x3a
 3702 01e9 0B       		.uleb128 0xb
 3703 01ea 3B       		.uleb128 0x3b
 3704 01eb 0B       		.uleb128 0xb
 3705 01ec 27       		.uleb128 0x27
 3706 01ed 19       		.uleb128 0x19
 3707 01ee 3C       		.uleb128 0x3c
 3708 01ef 19       		.uleb128 0x19
 3709 01f0 01       		.uleb128 0x1
 3710 01f1 13       		.uleb128 0x13
 3711 01f2 00       		.byte	0
 3712 01f3 00       		.byte	0
 3713 01f4 21       		.uleb128 0x21
 3714 01f5 05       		.uleb128 0x5
 3715 01f6 00       		.byte	0
 3716 01f7 49       		.uleb128 0x49
 3717 01f8 13       		.uleb128 0x13
 3718 01f9 00       		.byte	0
 3719 01fa 00       		.byte	0
 3720 01fb 22       		.uleb128 0x22
 3721 01fc 2E       		.uleb128 0x2e
 3722 01fd 01       		.byte	0x1
 3723 01fe 3F       		.uleb128 0x3f
 3724 01ff 19       		.uleb128 0x19
 3725 0200 03       		.uleb128 0x3
 3726 0201 0E       		.uleb128 0xe
 3727 0202 3A       		.uleb128 0x3a
 3728 0203 0B       		.uleb128 0xb
 3729 0204 3B       		.uleb128 0x3b
 3730 0205 0B       		.uleb128 0xb
 3731 0206 27       		.uleb128 0x27
 3732 0207 19       		.uleb128 0x19
 3733 0208 3C       		.uleb128 0x3c
 3734 0209 19       		.uleb128 0x19
 3735 020a 00       		.byte	0
 3736 020b 00       		.byte	0
 3737 020c 00       		.byte	0
 3738              		.section	.debug_loc,"",%progbits
 3739              	.Ldebug_loc0:
 3740              	.LLST0:
 3741 0000 00000000 		.4byte	.LVL0
 3742 0004 07000000 		.4byte	.LVL1-1
 3743 0008 0100     		.2byte	0x1
 3744 000a 50       		.byte	0x50
 3745 000b 07000000 		.4byte	.LVL1-1
 3746 000f 14000000 		.4byte	.LVL2
 3747 0013 0100     		.2byte	0x1
 3748 0015 54       		.byte	0x54
 3749 0016 14000000 		.4byte	.LVL2
 3750 001a 24000000 		.4byte	.LFE4
 3751 001e 0400     		.2byte	0x4
 3752 0020 F3       		.byte	0xf3
 3753 0021 01       		.uleb128 0x1
 3754 0022 50       		.byte	0x50
 3755 0023 9F       		.byte	0x9f
ARM GAS  C:\Users\ELECTR~1\AppData\Local\Temp\ccybjnra.s 			page 102


 3756 0024 00000000 		.4byte	0
 3757 0028 00000000 		.4byte	0
 3758              	.LLST1:
 3759 002c 08000000 		.4byte	.LVL1
 3760 0030 1B000000 		.4byte	.LVL3-1
 3761 0034 0100     		.2byte	0x1
 3762 0036 50       		.byte	0x50
 3763 0037 00000000 		.4byte	0
 3764 003b 00000000 		.4byte	0
 3765              	.LLST2:
 3766 003f 00000000 		.4byte	.LVL4
 3767 0043 07000000 		.4byte	.LVL5-1
 3768 0047 0100     		.2byte	0x1
 3769 0049 50       		.byte	0x50
 3770 004a 07000000 		.4byte	.LVL5-1
 3771 004e 0C000000 		.4byte	.LVL6
 3772 0052 0100     		.2byte	0x1
 3773 0054 54       		.byte	0x54
 3774 0055 0C000000 		.4byte	.LVL6
 3775 0059 28000000 		.4byte	.LFE5
 3776 005d 0400     		.2byte	0x4
 3777 005f F3       		.byte	0xf3
 3778 0060 01       		.uleb128 0x1
 3779 0061 50       		.byte	0x50
 3780 0062 9F       		.byte	0x9f
 3781 0063 00000000 		.4byte	0
 3782 0067 00000000 		.4byte	0
 3783              	.LLST3:
 3784 006b 08000000 		.4byte	.LVL5
 3785 006f 1D000000 		.4byte	.LVL7-1
 3786 0073 0100     		.2byte	0x1
 3787 0075 50       		.byte	0x50
 3788 0076 00000000 		.4byte	0
 3789 007a 00000000 		.4byte	0
 3790              	.LLST4:
 3791 007e 00000000 		.4byte	.LVL8
 3792 0082 09000000 		.4byte	.LVL9-1
 3793 0086 0100     		.2byte	0x1
 3794 0088 50       		.byte	0x50
 3795 0089 09000000 		.4byte	.LVL9-1
 3796 008d 18000000 		.4byte	.LVL10
 3797 0091 0100     		.2byte	0x1
 3798 0093 54       		.byte	0x54
 3799 0094 18000000 		.4byte	.LVL10
 3800 0098 40000000 		.4byte	.LVL12
 3801 009c 0300     		.2byte	0x3
 3802 009e 74       		.byte	0x74
 3803 009f 03       		.sleb128 3
 3804 00a0 9F       		.byte	0x9f
 3805 00a1 40000000 		.4byte	.LVL12
 3806 00a5 64000000 		.4byte	.LFE6
 3807 00a9 0400     		.2byte	0x4
 3808 00ab F3       		.byte	0xf3
 3809 00ac 01       		.uleb128 0x1
 3810 00ad 50       		.byte	0x50
 3811 00ae 9F       		.byte	0x9f
 3812 00af 00000000 		.4byte	0
ARM GAS  C:\Users\ELECTR~1\AppData\Local\Temp\ccybjnra.s 			page 103


 3813 00b3 00000000 		.4byte	0
 3814              	.LLST5:
 3815 00b7 0A000000 		.4byte	.LVL9
 3816 00bb 3D000000 		.4byte	.LVL11-1
 3817 00bf 0100     		.2byte	0x1
 3818 00c1 50       		.byte	0x50
 3819 00c2 00000000 		.4byte	0
 3820 00c6 00000000 		.4byte	0
 3821              	.LLST6:
 3822 00ca 00000000 		.4byte	.LVL13
 3823 00ce 04000000 		.4byte	.LVL14
 3824 00d2 0100     		.2byte	0x1
 3825 00d4 50       		.byte	0x50
 3826 00d5 04000000 		.4byte	.LVL14
 3827 00d9 14000000 		.4byte	.LFE15
 3828 00dd 0100     		.2byte	0x1
 3829 00df 52       		.byte	0x52
 3830 00e0 00000000 		.4byte	0
 3831 00e4 00000000 		.4byte	0
 3832              	.LLST7:
 3833 00e8 00000000 		.4byte	.LVL19
 3834 00ec 04000000 		.4byte	.LVL20
 3835 00f0 0100     		.2byte	0x1
 3836 00f2 50       		.byte	0x50
 3837 00f3 04000000 		.4byte	.LVL20
 3838 00f7 14000000 		.4byte	.LFE24
 3839 00fb 0400     		.2byte	0x4
 3840 00fd F3       		.byte	0xf3
 3841 00fe 01       		.uleb128 0x1
 3842 00ff 50       		.byte	0x50
 3843 0100 9F       		.byte	0x9f
 3844 0101 00000000 		.4byte	0
 3845 0105 00000000 		.4byte	0
 3846              	.LLST8:
 3847 0109 00000000 		.4byte	.LVL21
 3848 010d 08000000 		.4byte	.LVL22
 3849 0111 0100     		.2byte	0x1
 3850 0113 50       		.byte	0x50
 3851 0114 08000000 		.4byte	.LVL22
 3852 0118 18000000 		.4byte	.LFE25
 3853 011c 0400     		.2byte	0x4
 3854 011e F3       		.byte	0xf3
 3855 011f 01       		.uleb128 0x1
 3856 0120 50       		.byte	0x50
 3857 0121 9F       		.byte	0x9f
 3858 0122 00000000 		.4byte	0
 3859 0126 00000000 		.4byte	0
 3860              	.LLST9:
 3861 012a 00000000 		.4byte	.LVL23
 3862 012e 04000000 		.4byte	.LVL24
 3863 0132 0100     		.2byte	0x1
 3864 0134 50       		.byte	0x50
 3865 0135 04000000 		.4byte	.LVL24
 3866 0139 14000000 		.4byte	.LFE26
 3867 013d 0400     		.2byte	0x4
 3868 013f F3       		.byte	0xf3
 3869 0140 01       		.uleb128 0x1
ARM GAS  C:\Users\ELECTR~1\AppData\Local\Temp\ccybjnra.s 			page 104


 3870 0141 50       		.byte	0x50
 3871 0142 9F       		.byte	0x9f
 3872 0143 00000000 		.4byte	0
 3873 0147 00000000 		.4byte	0
 3874              	.LLST10:
 3875 014b 00000000 		.4byte	.LVL25
 3876 014f 04000000 		.4byte	.LVL26
 3877 0153 0100     		.2byte	0x1
 3878 0155 50       		.byte	0x50
 3879 0156 04000000 		.4byte	.LVL26
 3880 015a 14000000 		.4byte	.LFE27
 3881 015e 0400     		.2byte	0x4
 3882 0160 F3       		.byte	0xf3
 3883 0161 01       		.uleb128 0x1
 3884 0162 50       		.byte	0x50
 3885 0163 9F       		.byte	0x9f
 3886 0164 00000000 		.4byte	0
 3887 0168 00000000 		.4byte	0
 3888              	.LLST11:
 3889 016c 00000000 		.4byte	.LVL27
 3890 0170 04000000 		.4byte	.LVL28
 3891 0174 0100     		.2byte	0x1
 3892 0176 50       		.byte	0x50
 3893 0177 04000000 		.4byte	.LVL28
 3894 017b 14000000 		.4byte	.LFE28
 3895 017f 0400     		.2byte	0x4
 3896 0181 F3       		.byte	0xf3
 3897 0182 01       		.uleb128 0x1
 3898 0183 50       		.byte	0x50
 3899 0184 9F       		.byte	0x9f
 3900 0185 00000000 		.4byte	0
 3901 0189 00000000 		.4byte	0
 3902              	.LLST12:
 3903 018d 00000000 		.4byte	.LVL30
 3904 0191 13000000 		.4byte	.LVL31-1
 3905 0195 0100     		.2byte	0x1
 3906 0197 50       		.byte	0x50
 3907 0198 13000000 		.4byte	.LVL31-1
 3908 019c 18000000 		.4byte	.LVL32
 3909 01a0 0100     		.2byte	0x1
 3910 01a2 54       		.byte	0x54
 3911 01a3 18000000 		.4byte	.LVL32
 3912 01a7 28000000 		.4byte	.LVL34
 3913 01ab 0400     		.2byte	0x4
 3914 01ad F3       		.byte	0xf3
 3915 01ae 01       		.uleb128 0x1
 3916 01af 50       		.byte	0x50
 3917 01b0 9F       		.byte	0x9f
 3918 01b1 28000000 		.4byte	.LVL34
 3919 01b5 2A000000 		.4byte	.LVL35
 3920 01b9 0100     		.2byte	0x1
 3921 01bb 50       		.byte	0x50
 3922 01bc 2A000000 		.4byte	.LVL35
 3923 01c0 2E000000 		.4byte	.LVL36
 3924 01c4 0100     		.2byte	0x1
 3925 01c6 54       		.byte	0x54
 3926 01c7 2E000000 		.4byte	.LVL36
ARM GAS  C:\Users\ELECTR~1\AppData\Local\Temp\ccybjnra.s 			page 105


 3927 01cb 38000000 		.4byte	.LFE10
 3928 01cf 0400     		.2byte	0x4
 3929 01d1 F3       		.byte	0xf3
 3930 01d2 01       		.uleb128 0x1
 3931 01d3 50       		.byte	0x50
 3932 01d4 9F       		.byte	0x9f
 3933 01d5 00000000 		.4byte	0
 3934 01d9 00000000 		.4byte	0
 3935              	.LLST13:
 3936 01dd 14000000 		.4byte	.LVL31
 3937 01e1 25000000 		.4byte	.LVL33-1
 3938 01e5 0100     		.2byte	0x1
 3939 01e7 50       		.byte	0x50
 3940 01e8 00000000 		.4byte	0
 3941 01ec 00000000 		.4byte	0
 3942              	.LLST14:
 3943 01f0 00000000 		.4byte	.LVL37
 3944 01f4 0C000000 		.4byte	.LVL39
 3945 01f8 0100     		.2byte	0x1
 3946 01fa 50       		.byte	0x50
 3947 01fb 0C000000 		.4byte	.LVL39
 3948 01ff 20000000 		.4byte	.LFE18
 3949 0203 0400     		.2byte	0x4
 3950 0205 F3       		.byte	0xf3
 3951 0206 01       		.uleb128 0x1
 3952 0207 50       		.byte	0x50
 3953 0208 9F       		.byte	0x9f
 3954 0209 00000000 		.4byte	0
 3955 020d 00000000 		.4byte	0
 3956              	.LLST15:
 3957 0211 00000000 		.4byte	.LVL37
 3958 0215 0F000000 		.4byte	.LVL40-1
 3959 0219 0100     		.2byte	0x1
 3960 021b 51       		.byte	0x51
 3961 021c 0F000000 		.4byte	.LVL40-1
 3962 0220 1E000000 		.4byte	.LVL42
 3963 0224 0100     		.2byte	0x1
 3964 0226 55       		.byte	0x55
 3965 0227 1E000000 		.4byte	.LVL42
 3966 022b 20000000 		.4byte	.LFE18
 3967 022f 0400     		.2byte	0x4
 3968 0231 F3       		.byte	0xf3
 3969 0232 01       		.uleb128 0x1
 3970 0233 51       		.byte	0x51
 3971 0234 9F       		.byte	0x9f
 3972 0235 00000000 		.4byte	0
 3973 0239 00000000 		.4byte	0
 3974              	.LLST16:
 3975 023d 00000000 		.4byte	.LVL43
 3976 0241 0A000000 		.4byte	.LVL45
 3977 0245 0100     		.2byte	0x1
 3978 0247 50       		.byte	0x50
 3979 0248 0A000000 		.4byte	.LVL45
 3980 024c 1C000000 		.4byte	.LFE19
 3981 0250 0400     		.2byte	0x4
 3982 0252 F3       		.byte	0xf3
 3983 0253 01       		.uleb128 0x1
ARM GAS  C:\Users\ELECTR~1\AppData\Local\Temp\ccybjnra.s 			page 106


 3984 0254 50       		.byte	0x50
 3985 0255 9F       		.byte	0x9f
 3986 0256 00000000 		.4byte	0
 3987 025a 00000000 		.4byte	0
 3988              	.LLST17:
 3989 025e 00000000 		.4byte	.LVL47
 3990 0262 0C000000 		.4byte	.LVL49
 3991 0266 0100     		.2byte	0x1
 3992 0268 50       		.byte	0x50
 3993 0269 0C000000 		.4byte	.LVL49
 3994 026d 24000000 		.4byte	.LFE20
 3995 0271 0400     		.2byte	0x4
 3996 0273 F3       		.byte	0xf3
 3997 0274 01       		.uleb128 0x1
 3998 0275 50       		.byte	0x50
 3999 0276 9F       		.byte	0x9f
 4000 0277 00000000 		.4byte	0
 4001 027b 00000000 		.4byte	0
 4002              	.LLST18:
 4003 027f 00000000 		.4byte	.LVL47
 4004 0283 0F000000 		.4byte	.LVL50-1
 4005 0287 0100     		.2byte	0x1
 4006 0289 51       		.byte	0x51
 4007 028a 0F000000 		.4byte	.LVL50-1
 4008 028e 1C000000 		.4byte	.LVL52
 4009 0292 0100     		.2byte	0x1
 4010 0294 55       		.byte	0x55
 4011 0295 1C000000 		.4byte	.LVL52
 4012 0299 24000000 		.4byte	.LFE20
 4013 029d 0400     		.2byte	0x4
 4014 029f F3       		.byte	0xf3
 4015 02a0 01       		.uleb128 0x1
 4016 02a1 51       		.byte	0x51
 4017 02a2 9F       		.byte	0x9f
 4018 02a3 00000000 		.4byte	0
 4019 02a7 00000000 		.4byte	0
 4020              	.LLST19:
 4021 02ab 00000000 		.4byte	.LVL53
 4022 02af 0A000000 		.4byte	.LVL55
 4023 02b3 0100     		.2byte	0x1
 4024 02b5 50       		.byte	0x50
 4025 02b6 0A000000 		.4byte	.LVL55
 4026 02ba 20000000 		.4byte	.LFE21
 4027 02be 0400     		.2byte	0x4
 4028 02c0 F3       		.byte	0xf3
 4029 02c1 01       		.uleb128 0x1
 4030 02c2 50       		.byte	0x50
 4031 02c3 9F       		.byte	0x9f
 4032 02c4 00000000 		.4byte	0
 4033 02c8 00000000 		.4byte	0
 4034              	.LLST20:
 4035 02cc 00000000 		.4byte	.LVL57
 4036 02d0 0C000000 		.4byte	.LVL58
 4037 02d4 0100     		.2byte	0x1
 4038 02d6 50       		.byte	0x50
 4039 02d7 0C000000 		.4byte	.LVL58
 4040 02db 4C000000 		.4byte	.LFE22
ARM GAS  C:\Users\ELECTR~1\AppData\Local\Temp\ccybjnra.s 			page 107


 4041 02df 0400     		.2byte	0x4
 4042 02e1 F3       		.byte	0xf3
 4043 02e2 01       		.uleb128 0x1
 4044 02e3 50       		.byte	0x50
 4045 02e4 9F       		.byte	0x9f
 4046 02e5 00000000 		.4byte	0
 4047 02e9 00000000 		.4byte	0
 4048              	.LLST21:
 4049 02ed 00000000 		.4byte	.LVL57
 4050 02f1 0F000000 		.4byte	.LVL59-1
 4051 02f5 0100     		.2byte	0x1
 4052 02f7 51       		.byte	0x51
 4053 02f8 0F000000 		.4byte	.LVL59-1
 4054 02fc 4C000000 		.4byte	.LFE22
 4055 0300 0400     		.2byte	0x4
 4056 0302 F3       		.byte	0xf3
 4057 0303 01       		.uleb128 0x1
 4058 0304 51       		.byte	0x51
 4059 0305 9F       		.byte	0x9f
 4060 0306 00000000 		.4byte	0
 4061 030a 00000000 		.4byte	0
 4062              	.LLST22:
 4063 030e 26000000 		.4byte	.LVL62
 4064 0312 43000000 		.4byte	.LVL67-1
 4065 0316 0100     		.2byte	0x1
 4066 0318 50       		.byte	0x50
 4067 0319 00000000 		.4byte	0
 4068 031d 00000000 		.4byte	0
 4069              	.LLST23:
 4070 0321 22000000 		.4byte	.LVL61
 4071 0325 3C000000 		.4byte	.LVL65
 4072 0329 0100     		.2byte	0x1
 4073 032b 55       		.byte	0x55
 4074 032c 00000000 		.4byte	0
 4075 0330 00000000 		.4byte	0
 4076              	.LLST24:
 4077 0334 32000000 		.4byte	.LVL63
 4078 0338 3E000000 		.4byte	.LVL66
 4079 033c 0100     		.2byte	0x1
 4080 033e 53       		.byte	0x53
 4081 033f 3E000000 		.4byte	.LVL66
 4082 0343 44000000 		.4byte	.LVL68
 4083 0347 0100     		.2byte	0x1
 4084 0349 55       		.byte	0x55
 4085 034a 00000000 		.4byte	0
 4086 034e 00000000 		.4byte	0
 4087              	.LLST25:
 4088 0352 00000000 		.4byte	.LVL69
 4089 0356 0A000000 		.4byte	.LVL70
 4090 035a 0100     		.2byte	0x1
 4091 035c 50       		.byte	0x50
 4092 035d 0A000000 		.4byte	.LVL70
 4093 0361 2C000000 		.4byte	.LFE23
 4094 0365 0400     		.2byte	0x4
 4095 0367 F3       		.byte	0xf3
 4096 0368 01       		.uleb128 0x1
 4097 0369 50       		.byte	0x50
ARM GAS  C:\Users\ELECTR~1\AppData\Local\Temp\ccybjnra.s 			page 108


 4098 036a 9F       		.byte	0x9f
 4099 036b 00000000 		.4byte	0
 4100 036f 00000000 		.4byte	0
 4101              	.LLST26:
 4102 0373 24000000 		.4byte	.LVL72
 4103 0377 26000000 		.4byte	.LVL73
 4104 037b 0100     		.2byte	0x1
 4105 037d 50       		.byte	0x50
 4106 037e 00000000 		.4byte	0
 4107 0382 00000000 		.4byte	0
 4108              	.LLST27:
 4109 0386 00000000 		.4byte	.LVL74
 4110 038a 06000000 		.4byte	.LVL75
 4111 038e 0100     		.2byte	0x1
 4112 0390 50       		.byte	0x50
 4113 0391 06000000 		.4byte	.LVL75
 4114 0395 26000000 		.4byte	.LVL79
 4115 0399 0100     		.2byte	0x1
 4116 039b 54       		.byte	0x54
 4117 039c 00000000 		.4byte	0
 4118 03a0 00000000 		.4byte	0
 4119              	.LLST28:
 4120 03a4 00000000 		.4byte	.LVL80
 4121 03a8 08000000 		.4byte	.LVL81
 4122 03ac 0100     		.2byte	0x1
 4123 03ae 50       		.byte	0x50
 4124 03af 08000000 		.4byte	.LVL81
 4125 03b3 14000000 		.4byte	.LFE32
 4126 03b7 0400     		.2byte	0x4
 4127 03b9 F3       		.byte	0xf3
 4128 03ba 01       		.uleb128 0x1
 4129 03bb 50       		.byte	0x50
 4130 03bc 9F       		.byte	0x9f
 4131 03bd 00000000 		.4byte	0
 4132 03c1 00000000 		.4byte	0
 4133              	.LLST29:
 4134 03c5 00000000 		.4byte	.LVL83
 4135 03c9 26000000 		.4byte	.LVL85
 4136 03cd 0100     		.2byte	0x1
 4137 03cf 50       		.byte	0x50
 4138 03d0 26000000 		.4byte	.LVL85
 4139 03d4 42000000 		.4byte	.LVL90
 4140 03d8 0100     		.2byte	0x1
 4141 03da 54       		.byte	0x54
 4142 03db 00000000 		.4byte	0
 4143 03df 00000000 		.4byte	0
 4144              	.LLST30:
 4145 03e3 04000000 		.4byte	.LVL84
 4146 03e7 42000000 		.4byte	.LVL89
 4147 03eb 0200     		.2byte	0x2
 4148 03ed 30       		.byte	0x30
 4149 03ee 9F       		.byte	0x9f
 4150 03ef 42000000 		.4byte	.LVL89
 4151 03f3 54000000 		.4byte	.LFE7
 4152 03f7 0100     		.2byte	0x1
 4153 03f9 50       		.byte	0x50
 4154 03fa 00000000 		.4byte	0
ARM GAS  C:\Users\ELECTR~1\AppData\Local\Temp\ccybjnra.s 			page 109


 4155 03fe 00000000 		.4byte	0
 4156              	.LLST31:
 4157 0402 00000000 		.4byte	.LVL91
 4158 0406 14000000 		.4byte	.LVL92
 4159 040a 0100     		.2byte	0x1
 4160 040c 50       		.byte	0x50
 4161 040d 14000000 		.4byte	.LVL92
 4162 0411 18000000 		.4byte	.LVL93
 4163 0415 0100     		.2byte	0x1
 4164 0417 53       		.byte	0x53
 4165 0418 18000000 		.4byte	.LVL93
 4166 041c 44000000 		.4byte	.LFE11
 4167 0420 0400     		.2byte	0x4
 4168 0422 F3       		.byte	0xf3
 4169 0423 01       		.uleb128 0x1
 4170 0424 50       		.byte	0x50
 4171 0425 9F       		.byte	0x9f
 4172 0426 00000000 		.4byte	0
 4173 042a 00000000 		.4byte	0
 4174              	.LLST32:
 4175 042e 00000000 		.4byte	.LVL96
 4176 0432 1A000000 		.4byte	.LVL97
 4177 0436 0100     		.2byte	0x1
 4178 0438 50       		.byte	0x50
 4179 0439 1A000000 		.4byte	.LVL97
 4180 043d 4C000000 		.4byte	.LFE33
 4181 0441 0400     		.2byte	0x4
 4182 0443 F3       		.byte	0xf3
 4183 0444 01       		.uleb128 0x1
 4184 0445 50       		.byte	0x50
 4185 0446 9F       		.byte	0x9f
 4186 0447 00000000 		.4byte	0
 4187 044b 00000000 		.4byte	0
 4188              	.LLST33:
 4189 044f 00000000 		.4byte	.LVL101
 4190 0453 02000000 		.4byte	.LVL102
 4191 0457 0100     		.2byte	0x1
 4192 0459 50       		.byte	0x50
 4193 045a 02000000 		.4byte	.LVL102
 4194 045e 10000000 		.4byte	.LFE40
 4195 0462 0400     		.2byte	0x4
 4196 0464 F3       		.byte	0xf3
 4197 0465 01       		.uleb128 0x1
 4198 0466 50       		.byte	0x50
 4199 0467 9F       		.byte	0x9f
 4200 0468 00000000 		.4byte	0
 4201 046c 00000000 		.4byte	0
 4202              	.LLST34:
 4203 0470 0C000000 		.4byte	.LVL105
 4204 0474 1C000000 		.4byte	.LVL108
 4205 0478 0100     		.2byte	0x1
 4206 047a 54       		.byte	0x54
 4207 047b 1E000000 		.4byte	.LVL109
 4208 047f 22000000 		.4byte	.LVL110
 4209 0483 0100     		.2byte	0x1
 4210 0485 54       		.byte	0x54
 4211 0486 00000000 		.4byte	0
ARM GAS  C:\Users\ELECTR~1\AppData\Local\Temp\ccybjnra.s 			page 110


 4212 048a 00000000 		.4byte	0
 4213              	.LLST35:
 4214 048e 02000000 		.4byte	.LVL111
 4215 0492 06000000 		.4byte	.LVL112
 4216 0496 0200     		.2byte	0x2
 4217 0498 30       		.byte	0x30
 4218 0499 9F       		.byte	0x9f
 4219 049a 06000000 		.4byte	.LVL112
 4220 049e 1B000000 		.4byte	.LVL114-1
 4221 04a2 0100     		.2byte	0x1
 4222 04a4 53       		.byte	0x53
 4223 04a5 00000000 		.4byte	0
 4224 04a9 00000000 		.4byte	0
 4225              	.LLST36:
 4226 04ad 00000000 		.4byte	.LVL122
 4227 04b1 06000000 		.4byte	.LVL123
 4228 04b5 0100     		.2byte	0x1
 4229 04b7 50       		.byte	0x50
 4230 04b8 06000000 		.4byte	.LVL123
 4231 04bc 10000000 		.4byte	.LFE46
 4232 04c0 0400     		.2byte	0x4
 4233 04c2 F3       		.byte	0xf3
 4234 04c3 01       		.uleb128 0x1
 4235 04c4 50       		.byte	0x50
 4236 04c5 9F       		.byte	0x9f
 4237 04c6 00000000 		.4byte	0
 4238 04ca 00000000 		.4byte	0
 4239              	.LLST37:
 4240 04ce 00000000 		.4byte	.LVL124
 4241 04d2 02000000 		.4byte	.LVL125
 4242 04d6 0100     		.2byte	0x1
 4243 04d8 50       		.byte	0x50
 4244 04d9 02000000 		.4byte	.LVL125
 4245 04dd 0C000000 		.4byte	.LFE47
 4246 04e1 0400     		.2byte	0x4
 4247 04e3 F3       		.byte	0xf3
 4248 04e4 01       		.uleb128 0x1
 4249 04e5 50       		.byte	0x50
 4250 04e6 9F       		.byte	0x9f
 4251 04e7 00000000 		.4byte	0
 4252 04eb 00000000 		.4byte	0
 4253              		.section	.debug_aranges,"",%progbits
 4254 0000 94010000 		.4byte	0x194
 4255 0004 0200     		.2byte	0x2
 4256 0006 00000000 		.4byte	.Ldebug_info0
 4257 000a 04       		.byte	0x4
 4258 000b 00       		.byte	0
 4259 000c 0000     		.2byte	0
 4260 000e 0000     		.2byte	0
 4261 0010 00000000 		.4byte	.LFB2
 4262 0014 14000000 		.4byte	.LFE2-.LFB2
 4263 0018 00000000 		.4byte	.LFB3
 4264 001c 10000000 		.4byte	.LFE3-.LFB3
 4265 0020 00000000 		.4byte	.LFB4
 4266 0024 24000000 		.4byte	.LFE4-.LFB4
 4267 0028 00000000 		.4byte	.LFB5
 4268 002c 28000000 		.4byte	.LFE5-.LFB5
ARM GAS  C:\Users\ELECTR~1\AppData\Local\Temp\ccybjnra.s 			page 111


 4269 0030 00000000 		.4byte	.LFB6
 4270 0034 64000000 		.4byte	.LFE6-.LFB6
 4271 0038 00000000 		.4byte	.LFB8
 4272 003c 24000000 		.4byte	.LFE8-.LFB8
 4273 0040 00000000 		.4byte	.LFB9
 4274 0044 10000000 		.4byte	.LFE9-.LFB9
 4275 0048 00000000 		.4byte	.LFB12
 4276 004c 20000000 		.4byte	.LFE12-.LFB12
 4277 0050 00000000 		.4byte	.LFB13
 4278 0054 10000000 		.4byte	.LFE13-.LFB13
 4279 0058 00000000 		.4byte	.LFB14
 4280 005c 0C000000 		.4byte	.LFE14-.LFB14
 4281 0060 00000000 		.4byte	.LFB15
 4282 0064 14000000 		.4byte	.LFE15-.LFB15
 4283 0068 00000000 		.4byte	.LFB16
 4284 006c 10000000 		.4byte	.LFE16-.LFB16
 4285 0070 00000000 		.4byte	.LFB17
 4286 0074 0C000000 		.4byte	.LFE17-.LFB17
 4287 0078 00000000 		.4byte	.LFB24
 4288 007c 14000000 		.4byte	.LFE24-.LFB24
 4289 0080 00000000 		.4byte	.LFB25
 4290 0084 18000000 		.4byte	.LFE25-.LFB25
 4291 0088 00000000 		.4byte	.LFB26
 4292 008c 14000000 		.4byte	.LFE26-.LFB26
 4293 0090 00000000 		.4byte	.LFB27
 4294 0094 14000000 		.4byte	.LFE27-.LFB27
 4295 0098 00000000 		.4byte	.LFB28
 4296 009c 14000000 		.4byte	.LFE28-.LFB28
 4297 00a0 00000000 		.4byte	.LFB29
 4298 00a4 04000000 		.4byte	.LFE29-.LFB29
 4299 00a8 00000000 		.4byte	.LFB10
 4300 00ac 38000000 		.4byte	.LFE10-.LFB10
 4301 00b0 00000000 		.4byte	.LFB18
 4302 00b4 20000000 		.4byte	.LFE18-.LFB18
 4303 00b8 00000000 		.4byte	.LFB19
 4304 00bc 1C000000 		.4byte	.LFE19-.LFB19
 4305 00c0 00000000 		.4byte	.LFB20
 4306 00c4 24000000 		.4byte	.LFE20-.LFB20
 4307 00c8 00000000 		.4byte	.LFB21
 4308 00cc 20000000 		.4byte	.LFE21-.LFB21
 4309 00d0 00000000 		.4byte	.LFB22
 4310 00d4 4C000000 		.4byte	.LFE22-.LFB22
 4311 00d8 00000000 		.4byte	.LFB23
 4312 00dc 2C000000 		.4byte	.LFE23-.LFB23
 4313 00e0 00000000 		.4byte	.LFB30
 4314 00e4 18000000 		.4byte	.LFE30-.LFB30
 4315 00e8 00000000 		.4byte	.LFB31
 4316 00ec 30000000 		.4byte	.LFE31-.LFB31
 4317 00f0 00000000 		.4byte	.LFB32
 4318 00f4 14000000 		.4byte	.LFE32-.LFB32
 4319 00f8 00000000 		.4byte	.LFB7
 4320 00fc 54000000 		.4byte	.LFE7-.LFB7
 4321 0100 00000000 		.4byte	.LFB11
 4322 0104 44000000 		.4byte	.LFE11-.LFB11
 4323 0108 00000000 		.4byte	.LFB33
 4324 010c 4C000000 		.4byte	.LFE33-.LFB33
 4325 0110 00000000 		.4byte	.LFB37
ARM GAS  C:\Users\ELECTR~1\AppData\Local\Temp\ccybjnra.s 			page 112


 4326 0114 10000000 		.4byte	.LFE37-.LFB37
 4327 0118 00000000 		.4byte	.LFB38
 4328 011c 10000000 		.4byte	.LFE38-.LFB38
 4329 0120 00000000 		.4byte	.LFB36
 4330 0124 18000000 		.4byte	.LFE36-.LFB36
 4331 0128 00000000 		.4byte	.LFB39
 4332 012c 10000000 		.4byte	.LFE39-.LFB39
 4333 0130 00000000 		.4byte	.LFB40
 4334 0134 10000000 		.4byte	.LFE40-.LFB40
 4335 0138 00000000 		.4byte	.LFB41
 4336 013c 10000000 		.4byte	.LFE41-.LFB41
 4337 0140 00000000 		.4byte	.LFB42
 4338 0144 10000000 		.4byte	.LFE42-.LFB42
 4339 0148 00000000 		.4byte	.LFB43
 4340 014c 20000000 		.4byte	.LFE43-.LFB43
 4341 0150 00000000 		.4byte	.LFB44
 4342 0154 10000000 		.4byte	.LFE44-.LFB44
 4343 0158 00000000 		.4byte	.LFB48
 4344 015c 28000000 		.4byte	.LFE48-.LFB48
 4345 0160 00000000 		.4byte	.LFB45
 4346 0164 0C000000 		.4byte	.LFE45-.LFB45
 4347 0168 00000000 		.4byte	.LFB35
 4348 016c 4C000000 		.4byte	.LFE35-.LFB35
 4349 0170 00000000 		.4byte	.LFB34
 4350 0174 20000000 		.4byte	.LFE34-.LFB34
 4351 0178 00000000 		.4byte	.LFB46
 4352 017c 10000000 		.4byte	.LFE46-.LFB46
 4353 0180 00000000 		.4byte	.LFB47
 4354 0184 0C000000 		.4byte	.LFE47-.LFB47
 4355 0188 00000000 		.4byte	.LFB49
 4356 018c 70000000 		.4byte	.LFE49-.LFB49
 4357 0190 00000000 		.4byte	0
 4358 0194 00000000 		.4byte	0
 4359              		.section	.debug_ranges,"",%progbits
 4360              	.Ldebug_ranges0:
 4361 0000 00000000 		.4byte	.LFB2
 4362 0004 14000000 		.4byte	.LFE2
 4363 0008 00000000 		.4byte	.LFB3
 4364 000c 10000000 		.4byte	.LFE3
 4365 0010 00000000 		.4byte	.LFB4
 4366 0014 24000000 		.4byte	.LFE4
 4367 0018 00000000 		.4byte	.LFB5
 4368 001c 28000000 		.4byte	.LFE5
 4369 0020 00000000 		.4byte	.LFB6
 4370 0024 64000000 		.4byte	.LFE6
 4371 0028 00000000 		.4byte	.LFB8
 4372 002c 24000000 		.4byte	.LFE8
 4373 0030 00000000 		.4byte	.LFB9
 4374 0034 10000000 		.4byte	.LFE9
 4375 0038 00000000 		.4byte	.LFB12
 4376 003c 20000000 		.4byte	.LFE12
 4377 0040 00000000 		.4byte	.LFB13
 4378 0044 10000000 		.4byte	.LFE13
 4379 0048 00000000 		.4byte	.LFB14
 4380 004c 0C000000 		.4byte	.LFE14
 4381 0050 00000000 		.4byte	.LFB15
 4382 0054 14000000 		.4byte	.LFE15
ARM GAS  C:\Users\ELECTR~1\AppData\Local\Temp\ccybjnra.s 			page 113


 4383 0058 00000000 		.4byte	.LFB16
 4384 005c 10000000 		.4byte	.LFE16
 4385 0060 00000000 		.4byte	.LFB17
 4386 0064 0C000000 		.4byte	.LFE17
 4387 0068 00000000 		.4byte	.LFB24
 4388 006c 14000000 		.4byte	.LFE24
 4389 0070 00000000 		.4byte	.LFB25
 4390 0074 18000000 		.4byte	.LFE25
 4391 0078 00000000 		.4byte	.LFB26
 4392 007c 14000000 		.4byte	.LFE26
 4393 0080 00000000 		.4byte	.LFB27
 4394 0084 14000000 		.4byte	.LFE27
 4395 0088 00000000 		.4byte	.LFB28
 4396 008c 14000000 		.4byte	.LFE28
 4397 0090 00000000 		.4byte	.LFB29
 4398 0094 04000000 		.4byte	.LFE29
 4399 0098 00000000 		.4byte	.LFB10
 4400 009c 38000000 		.4byte	.LFE10
 4401 00a0 00000000 		.4byte	.LFB18
 4402 00a4 20000000 		.4byte	.LFE18
 4403 00a8 00000000 		.4byte	.LFB19
 4404 00ac 1C000000 		.4byte	.LFE19
 4405 00b0 00000000 		.4byte	.LFB20
 4406 00b4 24000000 		.4byte	.LFE20
 4407 00b8 00000000 		.4byte	.LFB21
 4408 00bc 20000000 		.4byte	.LFE21
 4409 00c0 00000000 		.4byte	.LFB22
 4410 00c4 4C000000 		.4byte	.LFE22
 4411 00c8 00000000 		.4byte	.LFB23
 4412 00cc 2C000000 		.4byte	.LFE23
 4413 00d0 00000000 		.4byte	.LFB30
 4414 00d4 18000000 		.4byte	.LFE30
 4415 00d8 00000000 		.4byte	.LFB31
 4416 00dc 30000000 		.4byte	.LFE31
 4417 00e0 00000000 		.4byte	.LFB32
 4418 00e4 14000000 		.4byte	.LFE32
 4419 00e8 00000000 		.4byte	.LFB7
 4420 00ec 54000000 		.4byte	.LFE7
 4421 00f0 00000000 		.4byte	.LFB11
 4422 00f4 44000000 		.4byte	.LFE11
 4423 00f8 00000000 		.4byte	.LFB33
 4424 00fc 4C000000 		.4byte	.LFE33
 4425 0100 00000000 		.4byte	.LFB37
 4426 0104 10000000 		.4byte	.LFE37
 4427 0108 00000000 		.4byte	.LFB38
 4428 010c 10000000 		.4byte	.LFE38
 4429 0110 00000000 		.4byte	.LFB36
 4430 0114 18000000 		.4byte	.LFE36
 4431 0118 00000000 		.4byte	.LFB39
 4432 011c 10000000 		.4byte	.LFE39
 4433 0120 00000000 		.4byte	.LFB40
 4434 0124 10000000 		.4byte	.LFE40
 4435 0128 00000000 		.4byte	.LFB41
 4436 012c 10000000 		.4byte	.LFE41
 4437 0130 00000000 		.4byte	.LFB42
 4438 0134 10000000 		.4byte	.LFE42
 4439 0138 00000000 		.4byte	.LFB43
ARM GAS  C:\Users\ELECTR~1\AppData\Local\Temp\ccybjnra.s 			page 114


 4440 013c 20000000 		.4byte	.LFE43
 4441 0140 00000000 		.4byte	.LFB44
 4442 0144 10000000 		.4byte	.LFE44
 4443 0148 00000000 		.4byte	.LFB48
 4444 014c 28000000 		.4byte	.LFE48
 4445 0150 00000000 		.4byte	.LFB45
 4446 0154 0C000000 		.4byte	.LFE45
 4447 0158 00000000 		.4byte	.LFB35
 4448 015c 4C000000 		.4byte	.LFE35
 4449 0160 00000000 		.4byte	.LFB34
 4450 0164 20000000 		.4byte	.LFE34
 4451 0168 00000000 		.4byte	.LFB46
 4452 016c 10000000 		.4byte	.LFE46
 4453 0170 00000000 		.4byte	.LFB47
 4454 0174 0C000000 		.4byte	.LFE47
 4455 0178 00000000 		.4byte	.LFB49
 4456 017c 70000000 		.4byte	.LFE49
 4457 0180 00000000 		.4byte	0
 4458 0184 00000000 		.4byte	0
 4459              		.section	.debug_line,"",%progbits
 4460              	.Ldebug_line0:
 4461 0000 7F040000 		.section	.debug_str,"MS",%progbits,1
 4461      02004F00 
 4461      00000201 
 4461      FB0E0D00 
 4461      01010101 
 4462              	.LASF55:
 4463 0000 72616D56 		.ascii	"ramVectorTable\000"
 4463      6563746F 
 4463      72546162 
 4463      6C6500
 4464              	.LASF10:
 4465 000f 75696E74 		.ascii	"uint16\000"
 4465      313600
 4466              	.LASF41:
 4467 0016 696E7453 		.ascii	"intState\000"
 4467      74617465 
 4467      00
 4468              	.LASF23:
 4469 001f 43795379 		.ascii	"CySysClkWriteHfclkDirect\000"
 4469      73436C6B 
 4469      57726974 
 4469      65486663 
 4469      6C6B4469 
 4470              	.LASF54:
 4471 0038 6F6C6449 		.ascii	"oldIsr\000"
 4471      737200
 4472              	.LASF40:
 4473 003f 43794469 		.ascii	"CyDisableInts\000"
 4473      7361626C 
 4473      65496E74 
 4473      7300
 4474              	.LASF7:
 4475 004d 6C6F6E67 		.ascii	"long long unsigned int\000"
 4475      206C6F6E 
 4475      6720756E 
 4475      7369676E 
ARM GAS  C:\Users\ELECTR~1\AppData\Local\Temp\ccybjnra.s 			page 115


 4475      65642069 
 4476              	.LASF30:
 4477 0064 70617261 		.ascii	"parameters\000"
 4477      6D657465 
 4477      727300
 4478              	.LASF42:
 4479 006f 4379456E 		.ascii	"CyEnableInts\000"
 4479      61626C65 
 4479      496E7473 
 4479      00
 4480              	.LASF64:
 4481 007c 4379536F 		.ascii	"CySoftwareReset\000"
 4481      66747761 
 4481      72655265 
 4481      73657400 
 4482              	.LASF75:
 4483 008c 43795379 		.ascii	"CySysTickEnableInterrupt\000"
 4483      73546963 
 4483      6B456E61 
 4483      626C6549 
 4483      6E746572 
 4484              	.LASF46:
 4485 00a5 4379496E 		.ascii	"CyIntGetState\000"
 4485      74476574 
 4485      53746174 
 4485      6500
 4486              	.LASF6:
 4487 00b3 6C6F6E67 		.ascii	"long long int\000"
 4487      206C6F6E 
 4487      6720696E 
 4487      7400
 4488              	.LASF0:
 4489 00c1 7369676E 		.ascii	"signed char\000"
 4489      65642063 
 4489      68617200 
 4490              	.LASF29:
 4491 00cd 66726571 		.ascii	"freq\000"
 4491      00
 4492              	.LASF73:
 4493 00d2 43794465 		.ascii	"CyDelayFreq\000"
 4493      6C617946 
 4493      72657100 
 4494              	.LASF27:
 4495 00de 696E7465 		.ascii	"interruptState\000"
 4495      72727570 
 4495      74537461 
 4495      746500
 4496              	.LASF79:
 4497 00ed 43795379 		.ascii	"CySysTickGetReload\000"
 4497      73546963 
 4497      6B476574 
 4497      52656C6F 
 4497      616400
 4498              	.LASF4:
 4499 0100 6C6F6E67 		.ascii	"long int\000"
 4499      20696E74 
 4499      00
ARM GAS  C:\Users\ELECTR~1\AppData\Local\Temp\ccybjnra.s 			page 116


 4500              	.LASF47:
 4501 0109 4379496E 		.ascii	"CyIntDisable\000"
 4501      74446973 
 4501      61626C65 
 4501      00
 4502              	.LASF31:
 4503 0116 72656756 		.ascii	"regValues\000"
 4503      616C7565 
 4503      7300
 4504              	.LASF9:
 4505 0120 75696E74 		.ascii	"uint8\000"
 4505      3800
 4506              	.LASF96:
 4507 0126 63796465 		.ascii	"cydelayFreqKhz\000"
 4507      6C617946 
 4507      7265714B 
 4507      687A00
 4508              	.LASF67:
 4509 0135 43794465 		.ascii	"CyDelayUs\000"
 4509      6C617955 
 4509      7300
 4510              	.LASF13:
 4511 013f 646F7562 		.ascii	"double\000"
 4511      6C6500
 4512              	.LASF61:
 4513 0146 73686966 		.ascii	"shift\000"
 4513      7400
 4514              	.LASF36:
 4515 014c 43795379 		.ascii	"CySysLvdClearInterrupt\000"
 4515      734C7664 
 4515      436C6561 
 4515      72496E74 
 4515      65727275 
 4516              	.LASF11:
 4517 0163 75696E74 		.ascii	"uint32\000"
 4517      333200
 4518              	.LASF34:
 4519 016a 43795379 		.ascii	"CySysClkEcoReadStatus\000"
 4519      73436C6B 
 4519      45636F52 
 4519      65616453 
 4519      74617475 
 4520              	.LASF45:
 4521 0180 6E756D62 		.ascii	"number\000"
 4521      657200
 4522              	.LASF43:
 4523 0187 6D61736B 		.ascii	"mask\000"
 4523      00
 4524              	.LASF71:
 4525 018c 43795379 		.ascii	"CySysLvdEnable\000"
 4525      734C7664 
 4525      456E6162 
 4525      6C6500
 4526              	.LASF63:
 4527 019b 4379496E 		.ascii	"CyIntGetPriority\000"
 4527      74476574 
 4527      5072696F 
ARM GAS  C:\Users\ELECTR~1\AppData\Local\Temp\ccybjnra.s 			page 117


 4527      72697479 
 4527      00
 4528              	.LASF98:
 4529 01ac 63796465 		.ascii	"cydelay32kMs\000"
 4529      6C617933 
 4529      326B4D73 
 4529      00
 4530              	.LASF85:
 4531 01b9 43795379 		.ascii	"CySysTickInit\000"
 4531      73546963 
 4531      6B496E69 
 4531      7400
 4532              	.LASF62:
 4533 01c7 76616C75 		.ascii	"value\000"
 4533      6500
 4534              	.LASF82:
 4535 01cd 636C6F63 		.ascii	"clockSource\000"
 4535      6B536F75 
 4535      72636500 
 4536              	.LASF91:
 4537 01d9 43794765 		.ascii	"CyGetUniqueId\000"
 4537      74556E69 
 4537      71756549 
 4537      6400
 4538              	.LASF83:
 4539 01e7 43795379 		.ascii	"CySysTickGetCountFlag\000"
 4539      73546963 
 4539      6B476574 
 4539      436F756E 
 4539      74466C61 
 4540              	.LASF8:
 4541 01fd 756E7369 		.ascii	"unsigned int\000"
 4541      676E6564 
 4541      20696E74 
 4541      00
 4542              	.LASF84:
 4543 020a 43795379 		.ascii	"CySysTickClear\000"
 4543      73546963 
 4543      6B436C65 
 4543      617200
 4544              	.LASF5:
 4545 0219 6C6F6E67 		.ascii	"long unsigned int\000"
 4545      20756E73 
 4545      69676E65 
 4545      6420696E 
 4545      7400
 4546              	.LASF35:
 4547 022b 43795379 		.ascii	"CySysLvdGetInterruptSource\000"
 4547      734C7664 
 4547      47657449 
 4547      6E746572 
 4547      72757074 
 4548              	.LASF22:
 4549 0246 43795379 		.ascii	"CySysClkImoStop\000"
 4549      73436C6B 
 4549      496D6F53 
 4549      746F7000 
ARM GAS  C:\Users\ELECTR~1\AppData\Local\Temp\ccybjnra.s 			page 118


 4550              	.LASF104:
 4551 0256 4379456E 		.ascii	"CyEnterCriticalSection\000"
 4551      74657243 
 4551      72697469 
 4551      63616C53 
 4551      65637469 
 4552              	.LASF48:
 4553 026d 4379496E 		.ascii	"CyIntSetPending\000"
 4553      74536574 
 4553      50656E64 
 4553      696E6700 
 4554              	.LASF90:
 4555 027d 43795379 		.ascii	"CySysTickGetCallback\000"
 4555      73546963 
 4555      6B476574 
 4555      43616C6C 
 4555      6261636B 
 4556              	.LASF39:
 4557 0292 43795379 		.ascii	"CySysGetResetReason\000"
 4557      73476574 
 4557      52657365 
 4557      74526561 
 4557      736F6E00 
 4558              	.LASF3:
 4559 02a6 73686F72 		.ascii	"short unsigned int\000"
 4559      7420756E 
 4559      7369676E 
 4559      65642069 
 4559      6E7400
 4560              	.LASF81:
 4561 02b9 43795379 		.ascii	"CySysTickSetClockSource\000"
 4561      73546963 
 4561      6B536574 
 4561      436C6F63 
 4561      6B536F75 
 4562              	.LASF57:
 4563 02d1 4379496E 		.ascii	"CyIntSetVector\000"
 4563      74536574 
 4563      56656374 
 4563      6F7200
 4564              	.LASF38:
 4565 02e0 73746174 		.ascii	"status\000"
 4565      757300
 4566              	.LASF101:
 4567 02e7 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\CyLib.c\000"
 4567      6E657261 
 4567      7465645F 
 4567      536F7572 
 4567      63655C50 
 4568              	.LASF60:
 4569 0308 7072696F 		.ascii	"priority\000"
 4569      72697479 
 4569      00
 4570              	.LASF28:
 4571 0311 43795379 		.ascii	"CySysClkWriteImoFreq\000"
 4571      73436C6B 
 4571      57726974 
ARM GAS  C:\Users\ELECTR~1\AppData\Local\Temp\ccybjnra.s 			page 119


 4571      65496D6F 
 4571      46726571 
 4572              	.LASF52:
 4573 0326 4379496E 		.ascii	"CyIntSetSysVector\000"
 4573      74536574 
 4573      53797356 
 4573      6563746F 
 4573      7200
 4574              	.LASF17:
 4575 0338 72656733 		.ascii	"reg32\000"
 4575      3200
 4576              	.LASF86:
 4577 033e 43795379 		.ascii	"CySysTickStart\000"
 4577      73546963 
 4577      6B537461 
 4577      727400
 4578              	.LASF19:
 4579 034d 73697A65 		.ascii	"sizetype\000"
 4579      74797065 
 4579      00
 4580              	.LASF94:
 4581 0356 43795379 		.ascii	"CySysTickInitVar\000"
 4581      73546963 
 4581      6B496E69 
 4581      74566172 
 4581      00
 4582              	.LASF49:
 4583 0367 4379496E 		.ascii	"CyIntClearPending\000"
 4583      74436C65 
 4583      61725065 
 4583      6E64696E 
 4583      6700
 4584              	.LASF53:
 4585 0379 61646472 		.ascii	"address\000"
 4585      65737300 
 4586              	.LASF89:
 4587 0381 72657456 		.ascii	"retVal\000"
 4587      616C00
 4588              	.LASF88:
 4589 0388 66756E63 		.ascii	"function\000"
 4589      74696F6E 
 4589      00
 4590              	.LASF99:
 4591 0391 6379496D 		.ascii	"cyImoFreqMhz2Reg\000"
 4591      6F467265 
 4591      714D687A 
 4591      32526567 
 4591      00
 4592              	.LASF80:
 4593 03a2 43795379 		.ascii	"CySysTickGetValue\000"
 4593      73546963 
 4593      6B476574 
 4593      56616C75 
 4593      6500
 4594              	.LASF100:
 4595 03b4 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 4595      4320342E 
ARM GAS  C:\Users\ELECTR~1\AppData\Local\Temp\ccybjnra.s 			page 120


 4595      392E3320 
 4595      32303135 
 4595      30333033 
 4596 03e7 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 4596      20726576 
 4596      6973696F 
 4596      6E203232 
 4596      31323230 
 4597 041a 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 4597      66756E63 
 4597      74696F6E 
 4597      2D736563 
 4597      74696F6E 
 4598              	.LASF95:
 4599 0442 63796465 		.ascii	"cydelayFreqHz\000"
 4599      6C617946 
 4599      72657148 
 4599      7A00
 4600              	.LASF59:
 4601 0450 4379496E 		.ascii	"CyIntSetPriority\000"
 4601      74536574 
 4601      5072696F 
 4601      72697479 
 4601      00
 4602              	.LASF12:
 4603 0461 666C6F61 		.ascii	"float\000"
 4603      7400
 4604              	.LASF105:
 4605 0467 43794578 		.ascii	"CyExitCriticalSection\000"
 4605      69744372 
 4605      69746963 
 4605      616C5365 
 4605      6374696F 
 4606              	.LASF20:
 4607 047d 63795379 		.ascii	"cySysTickCallback\000"
 4607      73546963 
 4607      6B43616C 
 4607      6C626163 
 4607      6B00
 4608              	.LASF58:
 4609 048f 4379496E 		.ascii	"CyIntGetVector\000"
 4609      74476574 
 4609      56656374 
 4609      6F7200
 4610              	.LASF66:
 4611 049e 6D696C6C 		.ascii	"milliseconds\000"
 4611      69736563 
 4611      6F6E6473 
 4611      00
 4612              	.LASF106:
 4613 04ab 43794465 		.ascii	"CyDelayCycles\000"
 4613      6C617943 
 4613      79636C65 
 4613      7300
 4614              	.LASF16:
 4615 04b9 72656738 		.ascii	"reg8\000"
 4615      00
ARM GAS  C:\Users\ELECTR~1\AppData\Local\Temp\ccybjnra.s 			page 121


 4616              	.LASF72:
 4617 04be 74687265 		.ascii	"threshold\000"
 4617      73686F6C 
 4617      6400
 4618              	.LASF50:
 4619 04c8 43794861 		.ascii	"CyHalt\000"
 4619      6C7400
 4620              	.LASF1:
 4621 04cf 756E7369 		.ascii	"unsigned char\000"
 4621      676E6564 
 4621      20636861 
 4621      7200
 4622              	.LASF2:
 4623 04dd 73686F72 		.ascii	"short int\000"
 4623      7420696E 
 4623      7400
 4624              	.LASF44:
 4625 04e7 4379496E 		.ascii	"CyIntEnable\000"
 4625      74456E61 
 4625      626C6500 
 4626              	.LASF56:
 4627 04f3 4379496E 		.ascii	"CyIntGetSysVector\000"
 4627      74476574 
 4627      53797356 
 4627      6563746F 
 4627      7200
 4628              	.LASF25:
 4629 0505 636C6B53 		.ascii	"clkSelect\000"
 4629      656C6563 
 4629      7400
 4630              	.LASF69:
 4631 050f 43795379 		.ascii	"CySysClkEcoStart\000"
 4631      73436C6B 
 4631      45636F53 
 4631      74617274 
 4631      00
 4632              	.LASF37:
 4633 0520 72656173 		.ascii	"reason\000"
 4633      6F6E00
 4634              	.LASF97:
 4635 0527 63796465 		.ascii	"cydelayFreqMhz\000"
 4635      6C617946 
 4635      7265714D 
 4635      687A00
 4636              	.LASF14:
 4637 0536 63686172 		.ascii	"char\000"
 4637      00
 4638              	.LASF18:
 4639 053b 63796973 		.ascii	"cyisraddress\000"
 4639      72616464 
 4639      72657373 
 4639      00
 4640              	.LASF76:
 4641 0548 43795379 		.ascii	"CySysTickEnable\000"
 4641      73546963 
 4641      6B456E61 
 4641      626C6500 
ARM GAS  C:\Users\ELECTR~1\AppData\Local\Temp\ccybjnra.s 			page 122


 4642              	.LASF24:
 4643 0558 43795379 		.ascii	"CySysClkWriteSysclkDiv\000"
 4643      73436C6B 
 4643      57726974 
 4643      65537973 
 4643      636C6B44 
 4644              	.LASF87:
 4645 056f 43795379 		.ascii	"CySysTickSetCallback\000"
 4645      73546963 
 4645      6B536574 
 4645      43616C6C 
 4645      6261636B 
 4646              	.LASF93:
 4647 0584 43795379 		.ascii	"CySysTickCallbacks\000"
 4647      73546963 
 4647      6B43616C 
 4647      6C626163 
 4647      6B7300
 4648              	.LASF92:
 4649 0597 756E6971 		.ascii	"uniqueId\000"
 4649      75654964 
 4649      00
 4650              	.LASF65:
 4651 05a0 43794465 		.ascii	"CyDelay\000"
 4651      6C617900 
 4652              	.LASF77:
 4653 05a8 43795379 		.ascii	"CySysTickDisableInterrupt\000"
 4653      73546963 
 4653      6B446973 
 4653      61626C65 
 4653      496E7465 
 4654              	.LASF33:
 4655 05c2 43795379 		.ascii	"CySysLvdDisable\000"
 4655      734C7664 
 4655      44697361 
 4655      626C6500 
 4656              	.LASF102:
 4657 05d2 433A5C55 		.ascii	"C:\\Users\\Electronic\\Documents\\GitHub\\PSoC-4-BL"
 4657      73657273 
 4657      5C456C65 
 4657      6374726F 
 4657      6E69635C 
 4658 0600 452D4578 		.ascii	"E-Experiments\\Project 003 Custom Profile CapSense "
 4658      70657269 
 4658      6D656E74 
 4658      735C5072 
 4658      6F6A6563 
 4659 0632 52474220 		.ascii	"RGB LED\\PSoC\\CapSenseRGB\\CapSenseRGB.cydsn\000"
 4659      4C45445C 
 4659      50536F43 
 4659      5C436170 
 4659      53656E73 
 4660              	.LASF32:
 4661 065d 43795379 		.ascii	"CySysClkEcoStop\000"
 4661      73436C6B 
 4661      45636F53 
 4661      746F7000 
ARM GAS  C:\Users\ELECTR~1\AppData\Local\Temp\ccybjnra.s 			page 123


 4662              	.LASF74:
 4663 066d 43795379 		.ascii	"CySysTickStop\000"
 4663      73546963 
 4663      6B53746F 
 4663      7000
 4664              	.LASF70:
 4665 067b 74696D65 		.ascii	"timeoutUs\000"
 4665      6F757455 
 4665      7300
 4666              	.LASF26:
 4667 0685 64697669 		.ascii	"divider\000"
 4667      64657200 
 4668              	.LASF51:
 4669 068d 43795379 		.ascii	"CySysClkWriteEcoDiv\000"
 4669      73436C6B 
 4669      57726974 
 4669      6545636F 
 4669      44697600 
 4670              	.LASF15:
 4671 06a1 63797374 		.ascii	"cystatus\000"
 4671      61747573 
 4671      00
 4672              	.LASF21:
 4673 06aa 43795379 		.ascii	"CySysClkImoStart\000"
 4673      73436C6B 
 4673      496D6F53 
 4673      74617274 
 4673      00
 4674              	.LASF68:
 4675 06bb 6D696372 		.ascii	"microseconds\000"
 4675      6F736563 
 4675      6F6E6473 
 4675      00
 4676              	.LASF78:
 4677 06c8 43795379 		.ascii	"CySysTickSetReload\000"
 4677      73546963 
 4677      6B536574 
 4677      52656C6F 
 4677      616400
 4678              	.LASF103:
 4679 06db 43795379 		.ascii	"CySysTickServiceCallbacks\000"
 4679      73546963 
 4679      6B536572 
 4679      76696365 
 4679      43616C6C 
 4680              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
